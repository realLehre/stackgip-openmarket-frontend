{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-route.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-to-cart/add-to-cart.component.ts","./src/app/components/add-to-cart/add-to-cart.component.html","./src/app/components/agreements/private-policy/private-policy.component.ts","./src/app/components/agreements/private-policy/private-policy.component.html","./src/app/components/agreements/seller-agreement/seller-agreement.component.ts","./src/app/components/agreements/seller-agreement/seller-agreement.component.html","./src/app/components/agreements/terms/terms.component.ts","./src/app/components/agreements/terms/terms.component.html","./src/app/components/auth/account-confirmation/account-confirmation.component.ts","./src/app/components/auth/account-confirmation/account-confirmation.component.html","./src/app/components/auth/auth.component.ts","./src/app/components/auth/auth.component.html","./src/app/components/auth/forget-password/forget-password.component.ts","./src/app/components/auth/forget-password/forget-password.component.html","./src/app/components/auth/login/login.component.ts","./src/app/components/auth/login/login.component.html","./src/app/components/auth/reset-password/reset-password.component.ts","./src/app/components/auth/reset-password/reset-password.component.html","./src/app/components/auth/siginup/siginup.component.ts","./src/app/components/auth/siginup/siginup.component.html","./src/app/components/cart/cart.component.ts","./src/app/components/cart/cart.component.html","./src/app/components/category/category-home-grid/category-home-grid.component.ts","./src/app/components/category/category-home-grid/category-home-grid.component.html","./src/app/components/checkout/checkout.component.ts","./src/app/components/checkout/checkout.component.html","./src/app/components/home/index/index.component.ts","./src/app/components/home/index/index.component.html","./src/app/components/home/list-product/list-product.component.ts","./src/app/components/home/list-product/list-product.component.html","./src/app/components/home/new-product-list/new-product-list.component.ts","./src/app/components/home/new-product-list/new-product-list.component.html","./src/app/components/home/search-product/search-product.component.ts","./src/app/components/home/search-product/search-product.component.html","./src/app/components/home/slider/slider.component.ts","./src/app/components/home/slider/slider.component.html","./src/app/components/order-invoice/order-invoice.component.ts","./src/app/components/order-invoice/order-invoice.component.html","./src/app/components/order/order.component.ts","./src/app/components/order/order.component.html","./src/app/components/products/category-products/category-products.component.ts","./src/app/components/products/category-products/category-products.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/components/products/single-product/single-product.component.ts","./src/app/components/products/single-product/single-product.component.html","./src/app/components/products/slider-products/slider-products.component.ts","./src/app/components/products/view-product/view-product.component.ts","./src/app/components/products/view-product/view-product.component.html","./src/app/components/profile-dashboard/change-password/change-password.component.ts","./src/app/components/profile-dashboard/change-password/change-password.component.html","./src/app/components/profile-dashboard/profile-dashboard.component.ts","./src/app/components/profile-dashboard/profile-dashboard.component.html","./src/app/components/profile-dashboard/profile/profile.component.ts","./src/app/components/profile-dashboard/profile/profile.component.html","./src/app/components/seller/dashboard/dashboard.component.ts","./src/app/components/seller/dashboard/dashboard.component.html","./src/app/components/seller/seller-home/most-selling-product/most-selling-product.component.ts","./src/app/components/seller/seller-home/most-selling-product/most-selling-product.component.html","./src/app/components/seller/seller-home/recommended-product-to-sell/recommended-product-to-sell.component.ts","./src/app/components/seller/seller-home/recommended-product-to-sell/recommended-product-to-sell.component.html","./src/app/components/seller/seller-home/seller-home.component.ts","./src/app/components/seller/seller-home/seller-home.component.html","./src/app/components/seller/seller-orders/order-detail/order-detail.component.ts","./src/app/components/seller/seller-orders/order-detail/order-detail.component.html","./src/app/components/seller/seller-orders/order-list/order-list.component.ts","./src/app/components/seller/seller-orders/order-list/order-list.component.html","./src/app/components/seller/seller-orders/order-view-more/order-view-more.component.ts","./src/app/components/seller/seller-orders/order-view-more/order-view-more.component.html","./src/app/components/seller/seller-orders/seller-orders.component.ts","./src/app/components/seller/seller-orders/seller-orders.component.html","./src/app/components/seller/seller-orders/update-delivery-status/update-delivery-status.component.ts","./src/app/components/seller/seller-orders/update-delivery-status/update-delivery-status.component.html","./src/app/components/seller/seller-product/add-product/add-product.component.ts","./src/app/components/seller/seller-product/add-product/add-product.component.html","./src/app/components/seller/seller-product/edit-product/edit-product.component.ts","./src/app/components/seller/seller-product/edit-product/edit-product.component.html","./src/app/components/seller/seller-product/product-item/product-item.component.ts","./src/app/components/seller/seller-product/product-item/product-item.component.html","./src/app/components/seller/seller-product/product-option/product-option.component.ts","./src/app/components/seller/seller-product/product-option/product-option.component.html","./src/app/components/seller/seller-product/product-shipment/product-shipment.component.ts","./src/app/components/seller/seller-product/product-shipment/product-shipment.component.html","./src/app/components/seller/seller-product/search-item/search-item.component.ts","./src/app/components/seller/seller-product/search-item/search-item.component.html","./src/app/components/seller/seller-product/seller-product.component.ts","./src/app/components/seller/seller-product/seller-product.component.html","./src/app/components/seller/seller-product/view-more/view-more.component.ts","./src/app/components/seller/seller-product/view-more/view-more.component.html","./src/app/components/seller/seller-registeration-form/seller-registeration-form.component.ts","./src/app/components/seller/seller-registeration-form/seller-registeration-form.component.html","./src/app/components/seller/sellershowcaseproduct/seller-show-case-product/seller-show-case-product.component.ts","./src/app/components/seller/sellershowcaseproduct/seller-show-case-product/seller-show-case-product.component.html","./src/app/data/nigeriastates.ts","./src/app/guard/auth.guard.ts","./src/app/helpers/control-validators.ts","./src/app/helpers/date-format.ts","./src/app/helpers/number-format.ts","./src/app/helpers/productOption.ts","./src/app/helpers/userUtility.ts","./src/app/models/invoice.model.ts","./src/app/reducers/action/actions.ts","./src/app/reducers/action/auth.action.ts","./src/app/reducers/action/cart.actions.ts","./src/app/reducers/index.ts","./src/app/reducers/selectors/auth.selector.ts","./src/app/reducers/selectors/cart.selector.ts","./src/app/reducers/selectors/selector.ts","./src/app/resolver/seller-status-approve.resolver.ts","./src/app/services/api-app-url.service.ts","./src/app/services/auth.service.ts","./src/app/services/category/catgory.service.ts","./src/app/services/error.service.ts","./src/app/services/invoice/invoice.service.ts","./src/app/services/jwt-helper.service.ts","./src/app/services/order/order.service.ts","./src/app/services/products/products.service.ts","./src/app/services/request/request.service.ts","./src/app/services/seller/seller.service.ts","./src/app/services/toastr.service.ts","./src/app/services/user/user.service.ts","./src/app/shared/auth-interceptor.ts","./src/app/shared/components/contact/contact.component.ts","./src/app/shared/components/contact/contact.component.html","./src/app/shared/components/faqs/faqs.component.ts","./src/app/shared/components/faqs/faqs.component.html","./src/app/shared/components/features/features.component.ts","./src/app/shared/components/features/features.component.html","./src/app/shared/components/footer/footer.component.ts","./src/app/shared/components/footer/footer.component.html","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/shared/components/home-landing/home-landing.component.ts","./src/app/shared/components/home-landing/home-landing.component.html","./src/app/shared/components/layout/layout.component.ts","./src/app/shared/components/layout/layout.component.html","./src/app/shared/components/loader/loader.component.ts","./src/app/shared/components/loader/loader.component.html","./src/app/shared/components/navbar/navbar.component.ts","./src/app/shared/components/navbar/navbar.component.html","./src/app/shared/components/ourservices/ourservices.component.ts","./src/app/shared/components/ourservices/ourservices.component.html","./src/app/shared/error-handler-interceptor.ts","./src/app/shared/infinite-scroll/Infinite-scroll.component.ts","./src/app/shared/models/IResponseModel.ts","./src/app/shared/pagination/ngx-pagination.module.ts","./src/app/shared/pagination/paginate.pipe.ts","./src/app/shared/pagination/pagination-controls.component.ts","./src/app/shared/pagination/pagination-controls.directive.ts","./src/app/shared/pagination/pagination.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { SellerOrdersComponent } from \"./components/seller/seller-orders/seller-orders.component\";\r\nimport { SellerProductComponent } from \"./components/seller/seller-product/seller-product.component\";\r\nimport { SellerHomeComponent } from \"./components/seller/seller-home/seller-home.component\";\r\nimport { DashboardComponent } from \"./components/seller/dashboard/dashboard.component\";\r\nimport { AuthGuard } from \"./guard/auth.guard\";\r\nimport { ChangePasswordComponent } from \"./components/profile-dashboard/change-password/change-password.component\";\r\nimport { ProfileComponent } from \"./components/profile-dashboard/profile/profile.component\";\r\nimport { ProfileDashboardComponent } from \"./components/profile-dashboard/profile-dashboard.component\";\r\nimport { OrderInvoiceComponent } from \"./components/order-invoice/order-invoice.component\";\r\nimport { OrderComponent } from \"./components/order/order.component\";\r\nimport { CheckoutComponent } from \"./components/checkout/checkout.component\";\r\nimport { CartComponent } from \"./components/cart/cart.component\";\r\nimport { IndexComponent } from \"./components/home/index/index.component\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ForgetPasswordComponent } from \"./components/auth/forget-password/forget-password.component\";\r\nimport { ResetPasswordComponent } from \"./components/auth/reset-password/reset-password.component\";\r\nimport { AccountConfirmationComponent } from \"./components/auth/account-confirmation/account-confirmation.component\";\r\nimport { LayoutComponent } from \"./shared/components/layout/layout.component\";\r\nimport { ListProductComponent } from \"./components/home/list-product/list-product.component\";\r\nimport { OrderListComponent } from \"./components/seller/seller-orders/order-list/order-list.component\";\r\nimport { OrderDetailComponent } from \"./components/seller/seller-orders/order-detail/order-detail.component\";\r\nimport { sellerApproveStatusApproveRouteResolver } from \"./resolver/seller-status-approve.resolver\";\r\nimport { SellerShowCaseProductComponent } from \"./components/seller/sellershowcaseproduct/seller-show-case-product/seller-show-case-product.component\";\r\nimport { LoginComponent } from \"./components/auth/login/login.component\";\r\nimport { SiginupComponent } from \"./components/auth/siginup/siginup.component\";\r\nimport { NavbarComponent } from \"./shared/components/navbar/navbar.component\";\r\nimport { HomeLandingComponent } from \"./shared/components/home-landing/home-landing.component\";\r\nimport { FooterComponent } from \"./shared/components/footer/footer.component\";\r\nimport { OurservicesComponent } from \"./shared/components/ourservices/ourservices.component\";\r\nimport { PrivatePolicyComponent } from \"./components/agreements/private-policy/private-policy.component\";\r\nimport { TermsComponent } from \"./components/agreements/terms/terms.component\";\r\nimport { SellerAgreementComponent } from \"./components/agreements/seller-agreement/seller-agreement.component\";\r\nimport { FaqsComponent } from \"./shared/components/faqs/faqs.component\";\r\nimport { ContactComponent } from \"./shared/components/contact/contact.component\";\r\nimport { FeaturesComponent } from \"./shared/components/features/features.component\";\r\n\r\nconst route: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: LayoutComponent,\r\n    children: [\r\n      { path: \"\", component: IndexComponent },\r\n      // { path: \"home\", component: IndexComponent },\r\n      { path: \"forget-password\", component: ForgetPasswordComponent },\r\n      { path: \"confirm-email\", component: AccountConfirmationComponent },\r\n      { path: \"confirm\", component: AccountConfirmationComponent },\r\n      { path: \"reset-password\", component: ResetPasswordComponent },\r\n      { path: \"ResetPassword\", component: ResetPasswordComponent },\r\n      { path: \"cart\", component: CartComponent },\r\n      { path: \"checkout\", component: CheckoutComponent },\r\n      { path: \"orders\", component: OrderComponent, canActivate: [AuthGuard] },\r\n      { path: \"products\", component: ListProductComponent },\r\n      {\r\n        path: \"order/:id\",\r\n        component: OrderInvoiceComponent,\r\n        canActivate: [AuthGuard],\r\n      },\r\n      {\r\n        path: \"profile\",\r\n        canActivate: [AuthGuard],\r\n        component: ProfileDashboardComponent,\r\n        children: [\r\n          {\r\n            path: \"\",\r\n            component: ProfileComponent,\r\n          },\r\n          {\r\n            path: \"my\",\r\n            component: ProfileComponent,\r\n          },\r\n          {\r\n            path: \"manage-account\",\r\n            component: ChangePasswordComponent,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: \"sellerproduct/:sellerId\",\r\n        component: SellerShowCaseProductComponent,\r\n      },\r\n      {\r\n        path: \"seller\",\r\n        canActivate: [AuthGuard],\r\n        component: DashboardComponent,\r\n        resolve: { data: sellerApproveStatusApproveRouteResolver },\r\n        children: [\r\n          {\r\n            path: \"\",\r\n            component: SellerHomeComponent,\r\n          },\r\n          {\r\n            path: \"products\",\r\n            component: SellerProductComponent,\r\n          },\r\n\r\n          {\r\n            path: \"orders\",\r\n            component: SellerOrdersComponent,\r\n            children: [\r\n              {\r\n                path: \"\",\r\n                component: OrderListComponent,\r\n              },\r\n              {\r\n                path: \"detail/:id/:user_id\",\r\n                component: OrderDetailComponent,\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"signup\", component: SiginupComponent },\r\n  { path: \"navbar\", component: NavbarComponent },\r\n  { path: \"landing\", component: HomeLandingComponent },\r\n  { path: \"footer\", component: FooterComponent },\r\n  { path: \"ourservices\", component: OurservicesComponent },\r\n  { path: \"private-policy\", component: PrivatePolicyComponent },\r\n  { path: \"seller-agreement\", component: SellerAgreementComponent },\r\n  { path: \"terms\", component: TermsComponent },\r\n  { path: \"faqs\", component: FaqsComponent },\r\n  { path: \"contact\", component: ContactComponent },\r\n  { path: \"features\", component: FeaturesComponent },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forRoot(route, { enableTracing: true }), CommonModule],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRouteModule {}\r\n","import { AppState } from \"./reducers/index\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Store, createSelector, createFeatureSelector } from \"@ngrx/store\";\r\n\r\nimport { Observable } from \"rxjs\";\r\nimport { increment, decrement, reset } from \"./reducers/action/actions\";\r\n\r\nconst selectCounter = (state: AppState) => state.count;\r\n\r\nexport const selectState = createFeatureSelector<AppState>(\"counterReducer\");\r\nexport const getcount = createSelector(selectState, selectCounter);\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  title = \"ecommerce-app\";\r\n\r\n  count$: Observable<number>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n    console.log(this.count$);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.count$ = this.store.select(getcount);\r\n  }\r\n\r\n  increment() {\r\n    this.store.dispatch(increment());\r\n\r\n    console.log(\"count obser\", this.count$);\r\n  }\r\n\r\n  decrement() {\r\n    this.store.dispatch(decrement());\r\n  }\r\n\r\n  reset() {\r\n    this.store.dispatch(reset());\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n<ngx-ui-loader\r\n  [loaderId]=\"'loader-01'\"\r\n  text=\"loading please wait ... \"\r\n></ngx-ui-loader>\r\n","import { SharedModule } from \"./shared/shared.module\";\r\nimport { AppRouteModule } from \"./app-route.module\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport { LayoutComponent } from \"./shared/components/layout/layout.component\";\r\nimport { HeaderComponent } from \"./shared/components/header/header.component\";\r\nimport { LoginComponent } from \"./components/auth/login/login.component\";\r\nimport { SiginupComponent } from \"./components/auth/siginup/siginup.component\";\r\nimport { AuthComponent } from \"./components/auth/auth.component\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { AuthInterceptor } from \"./shared/auth-interceptor\";\r\nimport { ErrorHandlerInterceptor } from \"./shared/error-handler-interceptor\";\r\nimport { AccountConfirmationComponent } from \"./components/auth/account-confirmation/account-confirmation.component\";\r\n\r\nimport { ToastrModule } from \"ngx-toastr\";\r\nimport { toastOptions } from \"./services/toastr.service\";\r\nimport { ResetPasswordComponent } from \"./components/auth/reset-password/reset-password.component\";\r\nimport { ForgetPasswordComponent } from \"./components/auth/forget-password/forget-password.component\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { counterReducer } from \"./reducers\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { environment } from \"../environments/environment\";\r\nimport { storageSyncMetaReducer } from \"ngrx-store-persist\";\r\nimport { SliderComponent } from \"./components/home/slider/slider.component\";\r\nimport { IndexComponent } from \"./components/home/index/index.component\";\r\nimport { ProductsComponent } from \"./components/products/products.component\";\r\nimport { SingleProductComponent } from \"./components/products/single-product/single-product.component\";\r\nimport { SliderProductsComponent } from \"./components/products/slider-products/slider-products.component\";\r\nimport { CategoryProductsComponent } from \"./components/products/category-products/category-products.component\";\r\nimport { CartComponent } from \"./components/cart/cart.component\";\r\nimport { CheckoutComponent } from \"./components/checkout/checkout.component\";\r\nimport { OrderComponent } from \"./components/order/order.component\";\r\nimport { OrderInvoiceComponent } from \"./components/order-invoice/order-invoice.component\";\r\nimport { ProfileDashboardComponent } from \"./components/profile-dashboard/profile-dashboard.component\";\r\nimport { ProfileComponent } from \"./components/profile-dashboard/profile/profile.component\";\r\nimport { ChangePasswordComponent } from \"./components/profile-dashboard/change-password/change-password.component\";\r\nimport { DashboardComponent } from \"./components/seller/dashboard/dashboard.component\";\r\nimport { CategoryHomeGridComponent } from \"./components/category/category-home-grid/category-home-grid.component\";\r\nimport { NewProductListComponent } from \"./components/home/new-product-list/new-product-list.component\";\r\nimport { SellerProductComponent } from \"./components/seller/seller-product/seller-product.component\";\r\nimport { SellerHomeComponent } from \"./components/seller/seller-home/seller-home.component\";\r\nimport { MostSellingProductComponent } from \"./components/seller/seller-home/most-selling-product/most-selling-product.component\";\r\nimport { RecommendedProductToSellComponent } from \"./components/seller/seller-home/recommended-product-to-sell/recommended-product-to-sell.component\";\r\nimport { SellerOrdersComponent } from \"./components/seller/seller-orders/seller-orders.component\";\r\nimport { AddProductComponent } from \"./components/seller/seller-product/add-product/add-product.component\";\r\nimport { ViewProductComponent } from \"./components/products/view-product/view-product.component\";\r\nimport { ListProductComponent } from \"./components/home/list-product/list-product.component\";\r\nimport { SearchProductComponent } from './components/home/search-product/search-product.component';\r\nimport { EditProductComponent } from './components/seller/seller-product/edit-product/edit-product.component';\r\nimport { ProductItemComponent } from './components/seller/seller-product/product-item/product-item.component';\r\nimport { OrderDetailComponent } from './components/seller/seller-orders/order-detail/order-detail.component';\r\nimport { ViewMoreComponent } from './components/seller/seller-product/view-more/view-more.component';\r\nimport { OrderViewMoreComponent } from './components/seller/seller-orders/order-view-more/order-view-more.component';\r\nimport { UpdateDeliveryStatusComponent } from './components/seller/seller-orders/update-delivery-status/update-delivery-status.component';\r\nimport { OrderListComponent } from './components/seller/seller-orders/order-list/order-list.component';\r\nimport { ProductOptionComponent } from './components/seller/seller-product/product-option/product-option.component';\r\nimport { ProductShipmentComponent } from './components/seller/seller-product/product-shipment/product-shipment.component';\r\nimport { NgxPaginationModule } from './shared/pagination/ngx-pagination.module';\r\nimport { InfiniteScrollComponent } from './shared/infinite-scroll/Infinite-scroll.component';\r\nimport { AddToCartComponent } from './components/add-to-cart/add-to-cart.component';\r\nimport { SellerRegisterationFormComponent } from \"./components/seller/seller-registeration-form/seller-registeration-form.component\";\r\nimport {FacebookLoginProvider, GoogleLoginProvider, SocialAuthServiceConfig, SocialLoginModule} from \"angularx-social-login\";\r\nimport { NgxSliderModule } from '@angular-slider/ngx-slider';\r\nimport { SearchItemComponent } from './components/seller/seller-product/search-item/search-item.component';\r\nimport { SellerShowCaseProductComponent } from './components/seller/sellershowcaseproduct/seller-show-case-product/seller-show-case-product.component';\r\nimport { HomeLandingComponent } from './shared/components/home-landing/home-landing.component';\r\nimport { NavbarComponent } from './shared/components/navbar/navbar.component';\r\nimport { FooterComponent } from './shared/components/footer/footer.component';\r\nimport { SellerAgreementComponent } from './components/agreements/seller-agreement/seller-agreement.component';\r\nimport { TermsComponent } from './components/agreements/terms/terms.component';\r\nimport { PrivatePolicyComponent } from './components/agreements/private-policy/private-policy.component';\r\nimport { OurservicesComponent } from './shared/components/ourservices/ourservices.component';\nimport { FaqsComponent } from './shared/components/faqs/faqs.component';\nimport { ContactComponent } from './shared/components/contact/contact.component';\nimport { FeaturesComponent } from './shared/components/features/features.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LayoutComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    SiginupComponent,\r\n    AuthComponent,\r\n    AccountConfirmationComponent,\r\n    ResetPasswordComponent,\r\n    ForgetPasswordComponent,\r\n    SliderComponent,\r\n    IndexComponent,\r\n    ProductsComponent,\r\n    SingleProductComponent,\r\n    SliderProductsComponent,\r\n    CategoryProductsComponent,\r\n    CartComponent,\r\n    CheckoutComponent,\r\n    OrderComponent,\r\n    OrderInvoiceComponent,\r\n    ProfileDashboardComponent,\r\n    ProfileComponent,\r\n    ChangePasswordComponent,\r\n    DashboardComponent,\r\n    CategoryHomeGridComponent,\r\n    NewProductListComponent,\r\n    SellerProductComponent,\r\n    SellerHomeComponent,\r\n    MostSellingProductComponent,\r\n    RecommendedProductToSellComponent,\r\n    SellerOrdersComponent,\r\n    AddProductComponent,\r\n    ViewProductComponent,\r\n    ListProductComponent,\r\n    SearchProductComponent,\r\n    EditProductComponent,\r\n    ProductItemComponent,\r\n    OrderDetailComponent,\r\n    ViewMoreComponent,\r\n    OrderViewMoreComponent,\r\n    UpdateDeliveryStatusComponent,\r\n    OrderListComponent,\r\n    ProductOptionComponent,\r\n    ProductShipmentComponent,\r\n    InfiniteScrollComponent,\r\n    AddToCartComponent,\r\n    SellerRegisterationFormComponent,\r\n    SearchItemComponent,\r\n    SellerShowCaseProductComponent,\r\n    HomeLandingComponent,\r\n    NavbarComponent,\r\n    FooterComponent,\r\n    SellerAgreementComponent,\r\n    TermsComponent,\r\n    PrivatePolicyComponent,\r\n    OurservicesComponent,\r\n    FaqsComponent,\r\n    ContactComponent,\r\n    FeaturesComponent,\r\n  \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AppRouteModule,\r\n    ToastrModule.forRoot(toastOptions),\r\n    CommonModule,\r\n    SharedModule,\r\n    NgxSliderModule,\r\n    NgxPaginationModule,\r\n    SocialLoginModule,\r\n    NgxSliderModule,\r\n    StoreModule.forRoot(\r\n      { counterReducer },\r\n      {\r\n        metaReducers: [storageSyncMetaReducer],\r\n      }\r\n    ),\r\n\r\n    StoreDevtoolsModule.instrument({\r\n      maxAge: 25,\r\n      logOnly: environment.production,\r\n    }),\r\n\r\n    \r\n  ],\r\n\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ErrorHandlerInterceptor,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: 'SocialAuthServiceConfig',\r\n      useValue: {\r\n        autoLogin: false,\r\n        providers: [\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider(\r\n              environment.googleClientId\r\n            )\r\n          },\r\n          {\r\n            id: FacebookLoginProvider.PROVIDER_ID,\r\n            provider: new FacebookLoginProvider(\r\n              environment.facebookAppId\r\n            )\r\n          }\r\n        ]\r\n      } as SocialAuthServiceConfig,\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import {ProductWithOptionAndShipmentModel, CreateProductOption} from \"./../../models/products.model\";\r\nimport { ProductsService } from \"src/app/services/products/products.service\";\r\nimport { Component, OnInit, Input, Output, EventEmitter} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, FormArray, Validators} from '@angular/forms';\r\nimport { formatDate } from \"./../../helpers/date-format\";\r\nimport { numberWithCommas } from './../../helpers/number-format';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: \"app-add-to-cart\",\r\n  templateUrl: \"./add-to-cart.component.html\",\r\n  styleUrls: [\"./add-to-cart.component.css\"],\r\n})\r\nexport class AddToCartComponent implements OnInit {\r\n  @Input() productId: number;\r\n  @Output() addedToCart = new EventEmitter();\r\n  @Output() closed = new EventEmitter();\r\n  productOptions: { [title: string]: CreateProductOption[] };\r\n  selectedProductOptions: { [title: string]: string } = {};\r\n  product: ProductWithOptionAndShipmentModel = null;\r\n  currentOptions: { [title: string]: number } = {};\r\n  numberWithCommas: Function;\r\n  priceWithOptions: number;\r\n  currentQuantity: number;\r\n  optionForm: FormGroup;\r\n  formatDate: Function;\r\n  totalPrice: number;\r\n  availablePaymentOption = [];\r\n\r\n  constructor(\r\n    private productService: ProductsService,\r\n    private toast: ToastrService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.numberWithCommas = numberWithCommas;\r\n    this.formatDate = formatDate;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.productService\r\n      .getProductById(this.productId.toString())\r\n      .subscribe((a) => {\r\n        this.product = a.data as unknown as ProductWithOptionAndShipmentModel;\r\n        this.init();\r\n      });\r\n    this.optionForm = this.fb.group({\r\n      shipmentOption: [\"\", [Validators.required]],\r\n      quantity: [1, [Validators.required]],\r\n      options: this.fb.array([]),\r\n      paymentOption: [\"\", [Validators.required]],\r\n    });\r\n    this.optionForm\r\n      .get(\"quantity\")\r\n      .valueChanges.pipe(debounceTime(200))\r\n      .subscribe((data) => this.onQuantityValueChanged(data));\r\n    this.currentQuantity = 1;\r\n  }\r\n\r\n  init(): void {\r\n    this.productOptions = this.groupBy(\"title\");\r\n    this.totalPrice = this.product.price;\r\n    this.priceWithOptions = this.product.price;\r\n    const defaultShipment: string = this.getDefaultShipment();\r\n    this.optionForm.get(\"shipmentOption\").setValue(defaultShipment);\r\n    this.setOptionForm(Object.keys(this.productOptions));\r\n\r\n    this.availablePaymentOption = this.product.paymentOptions\r\n      ? this.product.paymentOptions.split(\",\")\r\n      : [];\r\n    this.optionForm.get('paymentOption').setValue(this.availablePaymentOption[0]);\r\n    console.log(\"payment options\", this.availablePaymentOption);\r\n  }\r\n\r\n  optionArray(): FormArray {\r\n    return this.optionForm.get(\"options\") as FormArray;\r\n  }\r\n\r\n  setOptionForm(options: string[]): void {\r\n    options.forEach((option) => {\r\n      let { title, value, cost } = this.productOptions[option][0];\r\n      let itemToAdd = this.fb.group({\r\n        title: option,\r\n        cost: [`${cost}|${value}`, []],\r\n      });\r\n      itemToAdd.valueChanges\r\n        .pipe(debounceTime(200))\r\n        .subscribe((data) => this.onOptionValueChanged(data));\r\n      this.optionArray().push(itemToAdd);\r\n      this.currentOptions[option] = 0;\r\n      cost = String(cost);\r\n      this.onOptionValueChanged({ title, cost });\r\n    });\r\n  }\r\n\r\n  onQuantityValueChanged(qty: number) {\r\n    this.currentQuantity = qty;\r\n    this.totalPrice = this.priceWithOptions * this.currentQuantity;\r\n  }\r\n\r\n  onOptionValueChanged(data: { title: string; cost: string }) {\r\n    const [cost, value] = data.cost.split(\"|\");\r\n    const numCost = Number(cost);\r\n    this.priceWithOptions -= this.currentOptions[data.title];\r\n    this.priceWithOptions += numCost;\r\n    this.currentOptions[data.title] = numCost;\r\n    this.totalPrice =\r\n      Number(this.priceWithOptions) * Number(this.currentQuantity);\r\n    this.selectedProductOptions[data.title] = value;\r\n  }\r\n\r\n  addToCart() {\r\n    const paymentOption = this.optionForm.get(\"paymentOption\");\r\n    const shipmentOption = this.optionForm.get(\"shipmentOption\");\r\n    let currentShipmentOption: string = \"state|city|0\";\r\n    if (this.product.productShipments.length > 0) {\r\n      currentShipmentOption = shipmentOption.value;\r\n    }\r\n    if (this.optionForm.get(\"quantity\").value < 1) {\r\n      this.toast.error(\"please enter a valid quantity\");\r\n      return;\r\n    }\r\n    const [state, city, cost] = currentShipmentOption.split(\"|\");\r\n    this.moveProductToCart({\r\n      shipmentOption: JSON.stringify({ state, city, cost }),\r\n      paymentOption: paymentOption.value,\r\n      productOptions: JSON.stringify(this.selectedProductOptions),\r\n    });\r\n  }\r\n\r\n  moveProductToCart(cartOption) {\r\n    this.product.price = this.priceWithOptions;\r\n    this.addedToCart.emit({\r\n      product: this.product,\r\n      orderedUnit: this.currentQuantity,\r\n      paymentOption: cartOption.paymentOption,\r\n      shipmentOption: cartOption.shipmentOption,\r\n      productOptions: cartOption.productOptions,\r\n    });\r\n  }\r\n\r\n  groupBy(property: string): { [title: string]: CreateProductOption[] } {\r\n    return this.product.productOptions.reduce((acc, obj) => {\r\n      const key = obj[property];\r\n      if (!acc[key]) {\r\n        acc[key] = [];\r\n      }\r\n      acc[key].push(obj);\r\n      return acc;\r\n    }, {});\r\n  }\r\n\r\n  close() {\r\n    this.closed.emit();\r\n  }\r\n\r\n  getDefaultShipment() {\r\n    let shipmentOptionDefault: string = \"\";\r\n    if (this.product.productShipments.length > 0) {\r\n      shipmentOptionDefault =\r\n        this.product.productShipments[0].state +\r\n        \"|\" +\r\n        this.product.productShipments[0].city +\r\n        \"|\" +\r\n        this.product.productShipments[0].cost;\r\n    }\r\n    return shipmentOptionDefault;\r\n  }\r\n}\r\n","\r\n<!--=======  add to  cart  =======-->\r\n<div class=\"\" *ngIf=\"product\">\r\n  <div class=\"uk-child-width-1-2@s\" uk-grid>\r\n    <div uk-slideshow=\"animation: push\">\r\n      <div\r\n        class=\"uk-position-relative uk-visible-toggle uk-light\"\r\n        tabindex=\"-1\"\r\n      >\r\n        <ul class=\"uk-slideshow-items\">\r\n          <li *ngFor=\"let images of product.productImages\">\r\n            <img src=\"{{ images }}\" alt=\"\" uk-cover />\r\n          </li>\r\n        </ul>\r\n\r\n        <a\r\n          class=\"uk-position-center-left uk-position-small uk-hidden-hover\"\r\n          href=\"#\"\r\n          uk-slidenav-previous\r\n          uk-slideshow-item=\"previous\"\r\n        ></a>\r\n        <a\r\n          class=\"uk-position-center-right uk-position-small uk-hidden-hover\"\r\n          href=\"#\"\r\n          uk-slidenav-next\r\n          uk-slideshow-item=\"next\"\r\n        ></a>\r\n      </div>\r\n\r\n      <ul class=\"uk-slideshow-nav uk-dotnav uk-flex-center uk-margin\"></ul>\r\n    </div>\r\n    <!-- <div\r\n      class=\"uk-position-relative uk-visible-toggle uk-light\"\r\n      tabindex=\"-1\"\r\n      uk-slideshow\r\n    >\r\n      <ul class=\"uk-slideshow-items\">\r\n        <li>\r\n          <img\r\n            src=\"{{ product.imageUrl }}\"\r\n            data-src=\"{{ product.imageUrl }}\"\r\n            width=\"800\"\r\n            height=\"400\"\r\n            alt=\"\"\r\n            uk-cover\r\n          />\r\n        </li>\r\n        <li>\r\n          <img\r\n            src=\"{{ product.imageUrl }}\"\r\n            data-src=\"{{ product.imageUrl }}\"\r\n            width=\"800\"\r\n            height=\"400\"\r\n            alt=\"\"\r\n            uk-cover\r\n          />\r\n        </li>\r\n        <li *ngFor=\"let imageUrl of product.productImages\">\r\n          <img\r\n            src=\"{{ imageUrl }}\"\r\n            data-src=\"{{ imageUrl }}\"\r\n            width=\"800\"\r\n            height=\"400\"\r\n            alt=\"\"\r\n            uk-cover\r\n          />\r\n        </li>\r\n      </ul>\r\n      <a\r\n        class=\"uk-position-center-left uk-position-small uk-hidden-hover\"\r\n        href=\"#\"\r\n        uk-slidenav-previous\r\n        uk-slideshow-item=\"previous\"\r\n      >\r\n      </a>\r\n      <a\r\n        class=\"uk-position-center-right uk-position-small uk-hidden-hover\"\r\n        href=\"#\"\r\n        uk-slidenav-next\r\n        uk-slideshow-item=\"next\"\r\n      >\r\n      </a>\r\n    </div> -->\r\n\r\n    <div [formGroup]=\"optionForm\">\r\n      <h1 class=\"uk-text-bold uk-text-lead\">\r\n        {{ product.name.toUpperCase() }}\r\n      </h1>\r\n      <small>{{ product.category.name }}</small>\r\n      <p class=\"uk-text-bold uk-text-lead\">\r\n        NGN{{ product.price.toLocaleString() }}\r\n        <span\r\n          class=\"uk-text-muted uk-text-small\"\r\n          style=\"text-decoration: line-through\"\r\n          >| {{ product.previousPrice.toLocaleString() }}</span\r\n        >\r\n      </p>\r\n      <p class=\"uk-badge uk-background-secondary\">{{ product.unit }} left</p>\r\n\r\n      <div formArrayName=\"options\" \r\n          *ngFor=\"let option of optionArray()['controls']; let j=index;\">\r\n          <div [formGroupName]=\"j\">\r\n            <p>Select {{option.get('title').value}}</p>\r\n            <div class=\"uk-margin uk-grid-small uk-child-width-auto uk-grid\">\r\n              <label *ngFor=\"let opt of productOptions[option.get('title').value]\">\r\n                <input class=\"uk-radio\" type=\"radio\"  value=\"{{opt.cost}}|{{opt.value}}\" \r\n                  formControlName=\"cost\" />\r\n                {{opt.value}} (+ NGN {{opt.cost}})\r\n              </label>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div *ngIf=\"product.productShipments.length > 0\">\r\n        <p>\r\n          Select a Prefred Shipping Location <br />\r\n          <small class=\"uk-text-small uk-text muted uk-text-meta\">\r\n            location where items can be shipped\r\n          </small>\r\n        </p>\r\n\r\n        <div class=\"uk-margin uk-grid-small uk-child-width-auto uk-grid\">\r\n          <label *ngFor=\"let shipment of product.productShipments\">\r\n            <input class=\"uk-radio\"  formControlName=\"shipmentOption\" \r\n              type=\"radio\" value=\"{{ shipment.state }}|{{ shipment.city }}|{{shipment.cost}}\"/>\r\n            <span *ngIf=\"shipment.state.toLowerCase() == 'all'\">\r\n              Any State (+ NGN{{ shipment.cost.toLocaleString() }})\r\n              <small>{{ shipment.description }}</small>\r\n            </span>\r\n            <span>\r\n              {{ shipment.state }} / {{ shipment.city }} (+ NGN{{\r\n                shipment.cost.toLocaleString()\r\n              }})\r\n              <small>{{ shipment.description }}</small>\r\n            </span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <p>Available payment type </p>\r\n        <div class=\"uk-margin uk-grid-small uk-child-width-auto uk-grid\">  \r\n          <label *ngFor=\"let paymentOption of availablePaymentOption; let i = index\">\r\n            <input class=\"uk-radio\" [checked]=\"i === 0\" formControlName=\"paymentOption\" type=\"radio\" [value]=\"paymentOption\" [id]=\"paymentOption\" />\r\n            <span>{{ paymentOption === 'online' ? 'Pay Online' : 'Pay On delivery'}}</span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div class=\"uk-margin\">\r\n        <label>Quantity</label>\r\n        <input type=\"number\" class=\"uk-input\" value=\"1\" min=\"1\"\r\n          placeholder=\"Add quantity\" formControlName=\"quantity\"\r\n        />\r\n      </div>\r\n      <div class=\"uk-margin\">\r\n        <button class=\"uk-button uk-button-primary\" (click)=\"addToCart()\">\r\n            Add to cart (NGN {{numberWithCommas(totalPrice)}})\r\n        </button>\r\n        <button class=\"uk-button uk-button-secondary\" (click)=\"close()\">Continue shopping</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <h2>Product Description</h2>\r\n    <div class=\"uk-text uk-text-meta\">\r\n      {{ product.description }}\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-private-policy',\r\n  templateUrl: './private-policy.component.html',\r\n  styleUrls: ['./private-policy.component.css']\r\n})\r\nexport class PrivatePolicyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Development in Process!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-seller-agreement',\r\n  templateUrl: './seller-agreement.component.html',\r\n  styleUrls: ['./seller-agreement.component.css']\r\n})\r\nexport class SellerAgreementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Development in Process!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-terms',\r\n  templateUrl: './terms.component.html',\r\n  styleUrls: ['./terms.component.css']\r\n})\r\nexport class TermsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Development in Process!</p>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ISignIn } from \"src/app/models/signin-model\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-account-confirmation\",\r\n  templateUrl: \"./account-confirmation.component.html\",\r\n  styleUrls: [\"./account-confirmation.component.css\"],\r\n})\r\nexport class AccountConfirmationComponent implements OnInit {\r\n  message =\r\n    \"hello, you need to confirm your email address, please check mail box for confirmation link, thank you!\";\r\n  success = false;\r\n  isSubmited = false;\r\n  loading = false;\r\n  userData: ISignIn;\r\n  constructor(\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.userData = this.authService.GetSignInData();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const email = this.route.snapshot.queryParamMap.get(\"userId\");\r\n    const token = this.route.snapshot.queryParamMap.get(\"token\");\r\n    if (email != null || token != null) {\r\n      this.isSubmited = true;\r\n      this.message = \"Please wait we are verifing your account\";\r\n      console.log(\"confirm\", email, token);\r\n      this.authService.ConfirmEmail(email, token).subscribe(\r\n        (a) => {\r\n          this.message = \"Success Your Account is confirmed, Please Login\";\r\n          this.authService.Logout();\r\n          if (a.status == \"success\") {\r\n            this.success = true;\r\n          }\r\n        },\r\n        (err) => {\r\n          this.success = false;\r\n          this.message = \"Link must have expired or invalid, Resend a new link\";\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  resendConfimation() {\r\n    const email = this.userData.user.email;\r\n    this.isSubmited = true;\r\n    this.message = \"sending you an email, please wait \";\r\n    this.authService.SendConfirmationEmail(email).subscribe((a) => {\r\n      this.success = true;\r\n\r\n      console.log(a);\r\n      if (a.status == \"success\") {\r\n        this.message = \"success: email confimation has been sent to \" + email;\r\n      } else {\r\n        this.message = a.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.authService.Logout();\r\n    this.router.navigate([\"/auth\"]);\r\n  }\r\n}\r\n","<div class=\"uk-section uk-section-default\">\r\n  <div class=\"uk-container\">\r\n    <div class=\"uk-card uk-background-muted uk-text-center uk-text-bolder\">\r\n      <div class=\"uk-text-center\">\r\n        <img class=\"uk-img\" width=\"300px\" src=\"./assets/svg/auth.svg\" />\r\n      </div>\r\n      <h1 class=\"\">Confirm Your Account</h1>\r\n      <div\r\n        class=\"uk-text-center\"\r\n        [class]=\"{ 'uk-alert-success': success, 'uk-alert-danger': !success }\"\r\n        *ngIf=\"isSubmited\"\r\n        uk-alert\r\n      >\r\n        <a class=\"uk-alert-close\" uk-close></a>\r\n        <p>{{ message }}</p>\r\n      </div>\r\n\r\n      <div class=\"uk-padding-small\">\r\n        <div class=\"uk-text-center\">\r\n          <h1>Account Activation Required</h1>\r\n          <div class=\"text-default uk-padding-small\">\r\n            <p class=\"uk-text-medium\">{{ message }}</p>\r\n            <span class=\"uk-text-muted\">\r\n              logged as {{ userData.user.email }}\r\n              <a (click)=\"logout()\"> logout</a>\r\n            </span>\r\n          </div>\r\n          <button\r\n            class=\"text-style-1\"\r\n            class=\"btn-default\"\r\n            (click)=\"resendConfimation()\"\r\n          >\r\n            Resend Confirmation Link\r\n          </button>\r\n\r\n          <br />\r\n        </div>\r\n\r\n        <a class=\"text-style-1 text-gray\" routerLink=\"/\"> Home</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"uk-section uk-section uk-section-default\">\r\n  <div class=\"uk-container \">\r\n    <div class=\"uk-text-center uk-margin\">\r\n      <img class=\"uk-img\" width=\"300px\" src=\"./assets/svg/auth.svg\" />\r\n    </div>\r\n    <div class=\"uk-grid uk-grid-match uk-child-width-expand@s\">\r\n      <app-login></app-login>\r\n      <app-siginup></app-siginup>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { IForgetModel } from 'src/app/models/auth-model';\r\n\r\n@Component({\r\n  selector: 'app-forget-password',\r\n  templateUrl: './forget-password.component.html',\r\n  styleUrls: ['./forget-password.component.css']\r\n})\r\nexport class ForgetPasswordComponent implements OnInit {\r\n\r\n\r\nformGroup: FormGroup;\r\nmessage = '';\r\nsuccess = false;\r\nisSubmited = false;\r\nget f() {return this.formGroup.controls; }\r\n  constructor(private fb: FormBuilder, private authService : AuthService ) {  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.formGroup = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]]\r\n    });\r\n  }\r\n\r\n  sendEmail() {\r\n    this.isSubmited = true;\r\n    if(!this.formGroup.valid) {\r\n      this.success = false;\r\n      this.message = 'please enter a valid email address';\r\n      return;\r\n    }\r\n    const email = this.formGroup.get('email').value;\r\n    const model = {\r\n          email\r\n        } as IForgetModel;\r\n    this.authService.SendForgetPassword(model)\r\n        .subscribe( a=> {\r\n          this.success = true;\r\n          this.message = 'password reset link has been sent to ' + email;\r\n        });\r\n  }\r\n}\r\n","<div class=\"uk-section\">\r\n  <div class=\"uk-container\">\r\n    <div class=\"uk-margin-left uk-margin-right\">\r\n      <div\r\n        class=\"uk-text-center\"\r\n        [class]=\"{\r\n          'uk-alert-success': success,\r\n          'uk-alert-error': success == false\r\n        }\"\r\n        *ngIf=\"isSubmited\"\r\n        uk-alert\r\n      >\r\n        <a class=\"uk-alert-close\" uk-close></a>\r\n        <p>{{ message }}</p>\r\n      </div>\r\n\r\n      <div class=\"uk-text-center\">\r\n        <img class=\"uk-img\" width=\"300px\" src=\"./assets/svg/auth.svg\" />\r\n      </div>\r\n      <div\r\n        class=\"uk-width-medium@s uk-border-rounded uk-card uk-margin-auto uk-width-1-2@m backgound-light-transparent\"\r\n      >\r\n        <div class=\"uk-padding-small\">\r\n          <h2 class=\"uk-text-center\">Forget password</h2>\r\n          <div class=\"uk-text-center\">\r\n            <form [formGroup]=\"formGroup\" (ngSubmit)=\"sendEmail()\">\r\n              <mat-form-field class=\"uk-width-expand\">\r\n                <mat-label>Enter email to recover password</mat-label>\r\n                <input\r\n                  type=\"email\"\r\n                  required\r\n                  formControlName=\"email\"\r\n                  matInput\r\n                  placeholder=\"Enter Email Address\"\r\n                />\r\n              </mat-form-field>\r\n              <button class=\"btn-default\" color=\"primary\" type=\"submit\">\r\n                Send reset link\r\n              </button>\r\n            </form>\r\n            <br />\r\n          </div>\r\n\r\n          <a\r\n            class=\"text-style-1\"\r\n            [routerLink]=\"['/']\"\r\n            [queryParams]=\"{ showSigin: true }\"\r\n          >\r\n            Back to Signin</a\r\n          >\r\n          |\r\n          <a class=\"text-style-1 text-gray\" routerLink=\"/\"> Home</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Router } from \"@angular/router\";\r\n\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder,\r\n} from \"@angular/forms\";\r\n\r\nimport { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { NgxUiLoaderService } from \"ngx-ui-loader\";\r\nimport { SignInModel } from \"src/app/models/signin-model\";\r\n// import { UIkit } from \"uikit\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport {\r\n  FacebookLoginProvider,\r\n  GoogleLoginProvider,\r\n  SocialAuthService,\r\n} from \"angularx-social-login\";\r\nimport { of, Subscription } from \"rxjs\";\r\nimport { delay } from \"rxjs/operators\";\r\nimport { JwtHelperService } from \"../../../services/jwt-helper.service\";\r\n\r\n// declare var gapi: any;\r\n\r\n// facebook declarations\r\n// declare var FB: any;\r\n// declare var  statusChangeCallback: any;\r\n// end of facebook decla\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  hasError = false;\r\n  errors: any[];\r\n  errorMessage: string;\r\n  loginForm: FormGroup;\r\n  googleAuth: any;\r\n  loading: false;\r\n  message = \"\";\r\n  tokenSubscription = new Subscription();\r\n  decodedJwt;\r\n  constructor(\r\n    public authService: AuthService,\r\n    private socialAuthService: SocialAuthService,\r\n    private fb: FormBuilder,\r\n    private toast: ToastrService,\r\n    private router: Router,\r\n    private ngxService: NgxUiLoaderService,\r\n    private jwtHelperService: JwtHelperService\r\n  ) {}\r\n\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if( typeof gapi == 'undefined') {\r\n    //   let infoToast = this.toast ;\r\n    //   infoToast.toastOptions.positionClass = \"toast-top-center\";\r\n    //   infoToast.toastOptions.timeOut = '10000';\r\n    //   infoToast.info(\"poor internet connection, <a onclick='location.reload()'>click here to refresh page</a>\");\r\n\r\n    // }else{\r\n    //   this.loadgoogleLogin();\r\n    // }\r\n\r\n    this.hasError = false;\r\n    this.errors = [];\r\n    this.errorMessage = \"\";\r\n\r\n    this.loginForm = this.fb.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      password: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  login(): void {\r\n    if (!this.loginForm.valid) {\r\n      console.log(this.loginForm.errors);\r\n      return;\r\n    }\r\n    const data: SignInModel = {\r\n      email: this.loginForm.get(\"email\").value,\r\n      password: this.loginForm.get(\"password\").value,\r\n    } as SignInModel;\r\n\r\n    this.ngxService.startLoader(\"loader-01\");\r\n\r\n    this.authService.signIn(data).subscribe(\r\n      (a) => {\r\n        // console.log(\"signInResponse: \" + JSON.stringify(a));\r\n        this.ngxService.stopLoader(\"loader-01\");\r\n        this.authService.SetAuthLocalStorage(a);\r\n\r\n        if (a.status == \"success\") {\r\n          this.toast.success(\"login successful\", \"notification\");\r\n          this.message = \"login successful\";\r\n          this.hasError = false;\r\n          if (!a.data.canLogin) {\r\n            this.router.navigate([\"/confirm-email\"]);\r\n          } else {\r\n            this.authService.logoutAndRedirectOnTokenExpiration(\r\n              a.data.auth_token\r\n            );\r\n            this.router.navigate([\"/\"]);\r\n          }\r\n\r\n          console.log(a);\r\n        } else {\r\n          if (a.data.isNotAllowed) {\r\n            this.router.navigate([\"/confirm-email\"]);\r\n          }\r\n        }\r\n        console.log(a);\r\n      },\r\n      (err) => {\r\n        console.log(\"error\", err);\r\n        this.errors = [];\r\n        if (err.status === 0) {\r\n          this.errors.push(\"something went wrong please try\");\r\n        } else if (err.status >= 500) {\r\n          this.errors.push(\"something went wrong please try\");\r\n        } else {\r\n          this.errors.push(...err.error.message.split(\",\"));\r\n        }\r\n        this.ngxService.stopLoader(\"loader-01\");\r\n      }\r\n    );\r\n  }\r\n\r\n  // loadgoogleLogin() {\r\n  //   gapi.load(\"auth2\", () => {\r\n  //     /* Ready. Make a call to gapi.auth2.init or some other API */\r\n  //     this.googleAuth = gapi.auth2.init({\r\n  //       client_id:\r\n  //         \"473446857855-9fmn8dnefe3b9mvm046sdq35echrss1l.apps.googleusercontent.com\",\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  // signInWithGoogle() {\r\n  //   this.ngxService.startLoader(\"loader-01\");\r\n  //   this.googleAuth\r\n  //     .signIn({\r\n  //       scope: \"profile email\",\r\n  //       prompt: \"select_account\",\r\n  //     })\r\n  //     .then((a) => {\r\n  //       console.log(a);\r\n  //       const currentUser = this.googleAuth.currentUser.get();\r\n  //       const auth = currentUser.getAuthResponse();\r\n  //       console.log(\"current user\", currentUser);\r\n  //       const token = auth.id_token;\r\n  //       this.authService.GoogleSignIn(token).subscribe((a) => {\r\n  //         this.authService.SetAuthLocalStorage(a);\r\n  //         this.toast.success(\"login successful\", \"notification\");\r\n\r\n  //         UIkit.modal(\"#modal-auth\").hide();\r\n\r\n  //         this.ngxService.stopLoader(\"loader-01\");\r\n  //         this.authService.isLogin.next(true);\r\n  //         console.log(\"Is login observable\", this.authService.isLogin);\r\n  //         location.reload();\r\n  //       });\r\n  //     });\r\n  // }\r\n\r\n  // siginWithFacebook() {\r\n  //   this.ngxService.startLoader(\"loader-01\");\r\n  //   FB.login(\r\n  //     (response) => {\r\n  //       // handle the response\r\n  //       if (response.status === \"connected\") {\r\n  //         this.authService\r\n  //           .FacebookSignIn(\r\n  //             response.authResponse.userID,\r\n  //             response.authResponse.accessToken\r\n  //           )\r\n  //           .subscribe(\r\n  //             (a) => {\r\n  //               this.authService.SetAuthLocalStorage(a);\r\n  //               this.authService.isLogin.next(true);\r\n  //               this.toast.success(\"login successful\");\r\n  //               this.ngxService.stopLoader(\"loader-01\");\r\n  //               location.reload();\r\n  //             },\r\n  //             (err) => {\r\n  //               console.log(err);\r\n  //               this.toast.error(err.error.message);\r\n  //               this.ngxService.stopLoader(\"loader-01\");\r\n  //             }\r\n  //           );\r\n  //       } else {\r\n  //         // cant login\r\n  //         this.toast.error(\"cant login\", \"notification\");\r\n  //         this.ngxService.stopLoader(\"loader-01\");\r\n  //       }\r\n  //       console.log(response);\r\n  //     },\r\n  //     { scope: \"email,public_profile\" }\r\n  //   );\r\n  // }\r\n}\r\n","<div class=\"login-main\">\r\n  <div class=\"login-flex-container\">\r\n    <div class=\"login-image-section\"></div>\r\n    <div class=\"login-form-section\">\r\n      <div class=\"login-form-container\">\r\n        <div class=\"login-back-btn\">\r\n          <a [routerLink]=\"['']\" onclick=\"UIkit.modal('#modal-auth').hide()\">\r\n            <div class=\"login-back\">\r\n              <img\r\n                src=\"https://cdn.iconscout.com/icon/free/png-512/back-arrow-1767531-1502435.png\"\r\n                alt=\"go-back\"\r\n              />\r\n              Go Home\r\n            </div>\r\n          </a>\r\n        </div>\r\n        <div class=\"login-form-header\">\r\n          <h1 class=\"open-market-lg\">\r\n            <img\r\n              src=\"../../../../assets/logos/Rena-Market-Transparent-WHT-2.png\"\r\n              alt=\"RENA MARKET\"\r\n              width=\"200\"\r\n            />\r\n          </h1>\r\n          <h2>Welcome Back!</h2>\r\n          <p>Login into your account...</p>\r\n          <div class=\"login-form\">\r\n            <h1 class=\"open-market-sm\">\r\n              <img\r\n                src=\"../../../../assets/logos/Rena-Market-Transparent-WHT-2.png\"\r\n                alt=\"RENA MARKET\"\r\n                width=\"200\"\r\n              />\r\n            </h1>\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" id=\"form\">\r\n              <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Email Address</mat-label>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"example@email.com\"\r\n                    type=\"email\"\r\n                    formControlName=\"email\"\r\n                    required\r\n                  />\r\n                  <mat-error *ngIf=\"message != '' && hasError == false\">{{\r\n                    message\r\n                  }}</mat-error>\r\n                  <mat-error *ngFor=\"let i of errors\">\r\n                    {{ i }} <br />\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"errorMessage != ''\">{{\r\n                    errorMessage\r\n                  }}</mat-error>\r\n                  <mat-error\r\n                    *ngIf=\"\r\n                      f.email.invalid && (f.email.dirty || f.email.touched)\r\n                    \"\r\n                  >\r\n                    <mat-error *ngIf=\"f.email.errors.required\">\r\n                      Email required\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.email.errors.email\">\r\n                      Valid email required\r\n                    </mat-error>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </p>\r\n              <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"********\"\r\n                    type=\"password\"\r\n                    formControlName=\"password\"\r\n                    required\r\n                  />\r\n                  <mat-error\r\n                    *ngIf=\"\r\n                      f.password.invalid &&\r\n                      (f.password.dirty || f.password.touched)\r\n                    \"\r\n                  >\r\n                    <mat-error *ngIf=\"f.password.errors.required\">\r\n                      Password required <br />\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.password.errors.minLength\">\r\n                      Password should be at least 6 characters <br />\r\n                    </mat-error>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </p>\r\n              <p class=\"text-right\">\r\n                <a\r\n                  routerLink=\"/forget-password\"\r\n                  onclick=\"UIkit.modal('#modal-auth').hide()\"\r\n                  class=\"login-forgot\"\r\n                >\r\n                  Forgot password?\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <button class=\"uk-button uk-width-1-1 login-btn1\" type=\"submit\">\r\n                  Login\r\n                </button>\r\n              </p>\r\n            </form>\r\n            <div id=\"login-or\">\r\n              <div class=\"login-hr1\"></div>\r\n              <div class=\"login-or\">or</div>\r\n              <div class=\"login-hr2\"></div>\r\n            </div>\r\n\r\n            <div id=\"login-btn\">\r\n              <button\r\n                class=\"uk-button login-btn2\"\r\n                (click)=\"this.authService.signInWithGoogle()\"\r\n              >\r\n                <img\r\n                  src=\"https://res.cloudinary.com/mindset/image/upload/v1625917475/google__1_epmkfp.png\"\r\n                  alt=\"\"\r\n                  class=\"login-img-1\"\r\n                />\r\n              </button>\r\n              <button\r\n                class=\"uk-button login-btn2\"\r\n                (click)=\"this.authService.signInWithFacebook()\"\r\n              >\r\n                <img\r\n                  src=\"https://res.cloudinary.com/mindset/image/upload/v1625923180/facebook__uzmrzq.png\"\r\n                  alt=\"\"\r\n                  class=\"login-img-1\"\r\n                />\r\n              </button>\r\n            </div>\r\n            <h6 class=\"signup-route\">\r\n              Don't have an account? <a routerLink=\"/signup\">Register</a>\r\n            </h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { MustMatch } from 'src/app/helpers/control-validators';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { IForgetPasswordModel } from 'src/app/models/auth-model';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n\r\n  form: FormGroup = new FormGroup({});\r\n  message = '';\r\n  success = false;\r\n  isSubmited = false;\r\n  loading = false;\r\n  email = '';\r\n  token = '';\r\n  constructor(private fb: FormBuilder, private router : Router,private route: ActivatedRoute,\r\n              private authService: AuthService\r\n    ) {\r\n\r\n      this.form = fb.group({\r\n        password: ['', [Validators.required]],\r\n        confirm_password: ['', [Validators.required]]\r\n      },\r\n        {\r\n        validator: MustMatch('password', 'confirm_password')\r\n        });\r\n   }\r\n\r\n   get f() {\r\n     return this.form.controls;\r\n   }\r\n\r\n   submit() {\r\n     if(this.form.valid){\r\n      if(this.email != null || this.token != null ){\r\n        this.isSubmited = true;\r\n        const password = this.form.get('password').value;\r\n        const obj = {\r\n          userId : this.email,\r\n          token: this.token,\r\n          password: password,\r\n         } as IForgetPasswordModel;\r\n        this.authService.ForgetPassword(obj).subscribe( a=> {\r\n              this.message = \"Success Your Password has been reset, Please Login\";\r\n              this.authService.Logout();\r\n              if(a.status == 'success') { this.success = true; }\r\n           }, err=> {\r\n              this.success = false;\r\n              this.message = 'Link must have expired and no longer valid, Resend a new link';\r\n           });\r\n        }\r\n        else {\r\n          this.success = false;\r\n          this.message = 'Link must have expired and no longer valid, Resend a new link';\r\n        }\r\n     }\r\n     else{\r\n       this.message = \"Please fill all required filled\";\r\n       this.success = false;\r\n\r\n     }\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.email =   this.route.snapshot.queryParamMap.get('userId');\r\n    this.token =   this.route.snapshot.queryParamMap.get('token');\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"uk-section uk-section-default\">\r\n  <div class=\"uk-center\">\r\n    <div class=\"uk-text-center\">\r\n      <img class=\"uk-img\" width=\"300px\" src=\"./assets/svg/auth.svg\" />\r\n    </div>\r\n    <div class=\"uk-margin-left uk-margin-right\">\r\n      <div class=\"uk-margin-left uk-margin-right\">\r\n        <div\r\n          class=\"uk-text-center\"\r\n          [class]=\"{ 'uk-alert-success': success, 'uk-alert-danger': !success }\"\r\n          *ngIf=\"isSubmited\"\r\n          uk-alert\r\n        >\r\n          <a class=\"uk-alert-close\" uk-close></a>\r\n          <p>{{ message }}</p>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"uk-width-medium@s uk-card uk-border-rounded uk-card-default backgound-light-transparent uk-margin-auto uk-width-1-2@m\"\r\n      >\r\n        <div class=\"uk-padding-small\">\r\n          <!-- <img src=\"./assets/images/lock.png\" class=\"uk-align-center\" alt=\"\" width=\"50\" height=\"50\">    -->\r\n          <h1 class=\"uk-text-center\">Reset Password</h1>\r\n          <p>{{ message }}</p>\r\n          <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n            <div class=\"uk-margin\">\r\n              <span *ngIf=\"f.password.touched && f.password.invalid\">\r\n                <span class=\"uk-text-warning\" *ngIf=\"f.password.errors.required\"\r\n                  >Password is required.</span\r\n                >\r\n                <span\r\n                  class=\"uk-text-warning\"\r\n                  *ngIf=\"f.password.value.length < 6\"\r\n                >\r\n                  Password should be at least 6 charaters <br\r\n                /></span>\r\n              </span>\r\n              <mat-form-field class=\"uk-width-expand\">\r\n                <mat-label>Enter New Password</mat-label>\r\n                <input\r\n                  matInput\r\n                  formControlName=\"password\"\r\n                  id=\"form-stacked-text\"\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  required\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"uk-margin\">\r\n              <span\r\n                *ngIf=\"f.confirm_password.touched && f.confirm_password.invalid\"\r\n              >\r\n                <span\r\n                  class=\"uk-text-warning\"\r\n                  *ngIf=\"f.confirm_password.errors.required\"\r\n                  >Confirm Password is required.</span\r\n                >\r\n                <span\r\n                  class=\"uk-text-warning\"\r\n                  *ngIf=\"f.confirm_password.errors.confirmedValidator\"\r\n                  >Password and Confirm Password must be match.</span\r\n                >\r\n              </span>\r\n              <mat-form-field class=\"uk-width-expand\">\r\n                <mat-label>Confirm New Password</mat-label>\r\n                <input\r\n                  matInput\r\n                  formControlName=\"confirm_password\"\r\n                  id=\"form-stacked-password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm password\"\r\n                  required\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"uk-margin\">\r\n              <div class=\"uk-text-center\">\r\n                <button\r\n                  class=\"btn-default\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  [disabled]=\"!form.valid\"\r\n                >\r\n                  Reset Password\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"src/app/services/toastr.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NgxUiLoaderService } from \"ngx-ui-loader\";\r\nimport { RegisterModel } from \"src/app/models/register-model\";\r\nimport { SignInModel } from \"src/app/models/signin-model\";\r\nimport UIkit from \"uikit\";\r\nimport { MustMatch } from \"src/app/helpers/control-validators\";\r\nimport {FacebookLoginProvider, GoogleLoginProvider, SocialAuthService, SocialUser} from \"angularx-social-login\";\r\nimport {of, Subscription} from \"rxjs\";\r\nimport {delay} from \"rxjs/operators\";\r\nimport {JwtHelperService} from \"../../../services/jwt-helper.service\";\r\nimport {MDCTextField} from '@material/textfield';\r\n\r\n// const textField = new MDCTextField(document.querySelector('.mdc-text-field'));\r\n\r\n@Component({\r\n  selector: \"app-siginup\",\r\n  templateUrl: \"./siginup.component.html\",\r\n  styleUrls: [\"./siginup.component.css\"],\r\n})\r\nexport class SiginupComponent implements OnInit {\r\n  tokenSubscription = new Subscription();\r\n  decodedJwt;\r\n  hasError = false;\r\n  errors: any[];\r\n  googleAuth: any;\r\n  user: SocialUser;\r\n  message = '';\r\n  errorMessage: string;\r\n  constructor(\r\n    public authService: AuthService,\r\n    private socialAuthService: SocialAuthService,\r\n    private fb: FormBuilder,\r\n    private toast: ToastrService,\r\n    private router: Router,\r\n    private ngxService: NgxUiLoaderService,\r\n    private jwtHelperService: JwtHelperService\r\n  ) {}\r\n  registerForm: FormGroup;\r\n\r\n  ngOnInit(): void {\r\n    this.hasError = false;\r\n    this.errors = [];\r\n    this.errorMessage = \"\";\r\n    this.message = \"\";\r\n    this.registerForm = this.fb.group(\r\n      {\r\n        firstname: [\"\", [Validators.required]],\r\n        lastname: [\"\", [Validators.required]],\r\n        email: [\"\", [Validators.required, Validators.email]],\r\n        password: [\"\", [Validators.required, Validators.minLength(6)]],\r\n        confirmPassword: [\"\", [Validators.required]],\r\n      },\r\n      {\r\n        validators: MustMatch(\"password\", \"confirmPassword\"),\r\n      }\r\n    );\r\n    // {validator: this.ctrlValidator.MustMatch('password', 'confirmPassword')});\r\n\r\n    this.socialAuthService.authState.subscribe(user => {\r\n      this.user = user;\r\n    })\r\n  }\r\n\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  submit(): void {\r\n    this.errors = [];\r\n    this.errorMessage = \"\";\r\n\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const data: RegisterModel = {\r\n      firstName: this.registerForm.get(\"firstname\").value,\r\n      lastName: this.registerForm.get(\"lastname\").value,\r\n      email: this.registerForm.get(\"email\").value,\r\n      password: this.registerForm.get(\"password\").value,\r\n      confirmPassword: this.registerForm.get(\"confirmPassword\").value,\r\n      // profileImageUrl: \"\",\r\n    } as RegisterModel;\r\n    this.ngxService.startLoader(\"loader-01\");\r\n\r\n    this.authService.register(data).subscribe(\r\n      (d) => {\r\n        // const signinData = {\r\n        //   email: data.email,\r\n        //   password: data.password,\r\n        // } as SignInModel;\r\n        // this.login(signinData);\r\n        // console.log(d); \r\n          this.ngxService.stopLoader(\"loader-01\");\r\n        this.message = d.message;\r\n        this.hasError = false;\r\n      },\r\n      (err) => {\r\n        this.errors = [];\r\n        this.ngxService.stopLoader(\"loader-01\");\r\n        console.log(\"error\", err);\r\n        this.hasError = true;\r\n        if (err.status == 0) {\r\n          this.errors.push(\"something went wrong please try again later\");\r\n        } else {\r\n          this.errors.push(...err.error.message.split(\",\"));\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  login(signInModel: SignInModel) {\r\n    this.ngxService.startLoader(\"loader-01\");\r\n\r\n    this.ngxService.startLoader(\"loader-01\");\r\n\r\n    this.authService.signIn(signInModel).subscribe(\r\n      (a) => {\r\n        this.ngxService.stopLoader(\"loader-01\");\r\n        this.authService.SetAuthLocalStorage(a);\r\n        this.authService.logoutAndRedirectOnTokenExpiration(a.data.auth_token)\r\n        if (a.status == \"success\") {\r\n             this.message = \"login successful\";\r\n             this.hasError = false;\r\n          this.toast.success(\"login successful\", \"notification\");\r\n          if (!a.data.canLogin) {\r\n            this.router.navigate([\"/confirm-email\"]);\r\n          } else {\r\n            location.reload();\r\n          }\r\n        } else {\r\n          if (a.data.isNotAllowed) {\r\n            this.router.navigate([\"/confirm-email\"]);\r\n          }\r\n        }\r\n        console.log(a);\r\n      },\r\n      (err) => {\r\n        console.log(\"error\", err);\r\n        this.errors = [];\r\n        if (err.status === 0) {\r\n          this.errors.push(\"something went wrong please try\");\r\n        } else {\r\n          this.errors.push(...err.error.message.split(\",\"));\r\n        }\r\n        this.ngxService.stopLoader(\"loader-01\");\r\n      }\r\n    );\r\n  }\r\n\r\n  // loadgoogleLogin() {\r\n  //   gapi.load(\"auth2\", () => {\r\n  //     /* Ready. Make a call to gapi.auth2.init or some other API */\r\n  //     this.googleAuth = gapi.auth2.init({\r\n  //       client_id:\r\n  //         \"473446857855-9fmn8dnefe3b9mvm046sdq35echrss1l.apps.googleusercontent.com\",\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  // signInWithGoogle() {\r\n  //   this.googleAuth\r\n  //     .signIn({\r\n  //       scope: \"profile email\",\r\n  //       prompt: \"select_account\",\r\n  //     })\r\n  //     .then((a) => {\r\n  //       console.log(a);\r\n  //       const currentUser = this.googleAuth.currentUser.get();\r\n  //       const auth = currentUser.getAuthResponse();\r\n  //       this.ngxService.startLoader(\"loader-01\");\r\n  //       console.log(\"current user\", currentUser);\r\n  //       const token = auth.id_token;\r\n  //       this.authService.GoogleSignIn(token).subscribe((a) => {\r\n  //         console.log(a);\r\n\r\n  //         this.authService.SetAuthLocalStorage(a);\r\n  //         this.toast.success(\"login successful\", \"notification\");\r\n  //         // do other login stuff\r\n  //         const currentUrl = location.href;\r\n  //         UIkit.modal(\"#modal-auth\").hide();\r\n  //         // close the modal\r\n  //         //\r\n  //         //  this.store.dispatch(SIGNEDIN());\r\n  //         this.authService.isLogin.next(true);\r\n  //         console.log(\"Is login observable\", this.authService.isLogin);\r\n  //         console.log(a);\r\n  //         this.ngxService.stopLoader(\"loader-01\");\r\n  //       });\r\n  //     });\r\n  // }\r\n}\r\n","<div class=\"signup-main\">\r\n  <div class=\"signup-flex-container\">\r\n    <div class=\"signup-image-section\"></div>\r\n    <div class=\"signup-form-section\">\r\n      <div class=\"signup-form-container\">\r\n        <div class=\"signup-back-btn\">\r\n          <a [routerLink]=\"['']\" onclick=\"UIkit.modal('#modal-auth').hide()\">\r\n            <div class=\"signup-back\">\r\n              <img\r\n                src=\"https://cdn.iconscout.com/icon/free/png-512/back-arrow-1767531-1502435.png\"\r\n                alt=\"go-back\"\r\n              />\r\n              Go Home\r\n            </div>\r\n          </a>\r\n        </div>\r\n        <div class=\"signup-form-header\">\r\n          <h1 class=\"open-market-lg\">\r\n            <img\r\n              src=\"../../../../assets/logos/Rena-Market-Transparent-WHT-2.png\"\r\n              alt=\"RENA MARKET\"\r\n              width=\"200\"\r\n            />\r\n          </h1>\r\n          <h2>Join Us!</h2>\r\n          <p>Create an account</p>\r\n          <div class=\"signup-form\">\r\n            <h1 class=\"open-market-sm\">\r\n              <img\r\n                src=\"../../../../assets/logos/Rena-Market-Transparent-WHT-2.png\"\r\n                alt=\"RENA MARKET\"\r\n                width=\"200\"\r\n              />\r\n            </h1>\r\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\" id=\"form\">\r\n              <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>First Name</mat-label>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Jane\"\r\n                    type=\"text\"\r\n                    formControlName=\"firstname\"\r\n                    required\r\n                  />\r\n                  <mat-error *ngIf=\"errorMessage != ''\">{{\r\n                    errorMessage\r\n                  }}</mat-error>\r\n                  <mat-error\r\n                    class=\"uk-text-success\"\r\n                    *ngIf=\"message != '' && hasError == false\"\r\n                    >{{ message }}</mat-error\r\n                  >\r\n                  <mat-error *ngIf=\"hasError\">\r\n                    <mat-error *ngFor=\"let i of errors\">\r\n                      {{ i }}\r\n                    </mat-error>\r\n                  </mat-error>\r\n                  <mat-error\r\n                    *ngIf=\"\r\n                      f.firstname.invalid &&\r\n                      (f.firstname.dirty || f.firstname.touched)\r\n                    \"\r\n                  >\r\n                    <mat-error *ngIf=\"f.firstname.errors.required\">\r\n                      firstname required\r\n                    </mat-error>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </p>\r\n              <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Last Name</mat-label>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Doe\"\r\n                    type=\"text\"\r\n                    formControlName=\"lastname\"\r\n                    required\r\n                  />\r\n                  <mat-error\r\n                    *ngIf=\"\r\n                      f.lastname.invalid &&\r\n                      (f.lastname.dirty || f.lastname.touched)\r\n                    \"\r\n                  >\r\n                    <mat-error *ngIf=\"f.lastname.errors.required\">\r\n                      lastname required\r\n                    </mat-error>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </p>\r\n              <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Email Address</mat-label>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"example@email.com\"\r\n                    type=\"email\"\r\n                    formControlName=\"email\"\r\n                    required\r\n                  />\r\n                  <mat-error\r\n                    *ngIf=\"\r\n                      f.email.invalid && (f.email.dirty || f.email.touched)\r\n                    \"\r\n                  >\r\n                    <mat-error *ngIf=\"f.email.errors.required\">\r\n                      Email required <br />\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.email.errors.email\">\r\n                      Valid email required\r\n                    </mat-error>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </p>\r\n              <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"********\"\r\n                    type=\"password\"\r\n                    formControlName=\"password\"\r\n                    required\r\n                  />\r\n                  <mat-error\r\n                    *ngIf=\"\r\n                      f.password.invalid &&\r\n                      (f.password.dirty || f.password.touched)\r\n                    \"\r\n                  >\r\n                    <mat-error *ngIf=\"f.password.errors.required\">\r\n                      Password required <br />\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.password.errors.minLength\">\r\n                      Password should be at least 6 characters <br />\r\n                    </mat-error>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </p>\r\n              <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Confirm Password</mat-label>\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"********\"\r\n                    type=\"password\"\r\n                    formControlName=\"confirmPassword\"\r\n                    required\r\n                  />\r\n                  <mat-error\r\n                    *ngIf=\"\r\n                      f.confirmPassword.invalid &&\r\n                      (f.confirmPassword.dirty || f.confirmPassword.touched)\r\n                    \"\r\n                  >\r\n                    <mat-error *ngIf=\"f.confirmPassword.errors.required\">\r\n                      Confirm Password required <br />\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"f.confirmPassword.errors.mustMatch\">\r\n                      Confirm Password must match <br />\r\n                    </mat-error>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </p>\r\n              <div style=\"margin-bottom: 20px; margin-top: 0px\">\r\n                <div style=\"display: flex; align-items: center\">\r\n                  <input type=\"checkbox\" required />\r\n                  <a routerLink=\"/private-policy\" style=\"margin-left: 10px\"\r\n                    >Privacy Policy</a\r\n                  >\r\n                </div>\r\n                <div\r\n                  style=\"display: flex; align-items: center; margin-top: 10px\"\r\n                >\r\n                  <input type=\"checkbox\" required /><a\r\n                    routerLink=\"/terms\"\r\n                    style=\"margin-left: 10px\"\r\n                    >Terms and Conditions</a\r\n                  >\r\n                </div>\r\n              </div>\r\n              <p>\r\n                <button\r\n                  class=\"uk-button uk-width-1-1 signup-btn1\"\r\n                  type=\"submit\"\r\n                >\r\n                  Sign Up\r\n                </button>\r\n              </p>\r\n            </form>\r\n            <div id=\"signup-or\">\r\n              <div class=\"signup-hr1\"></div>\r\n              <div class=\"signup-or\">or</div>\r\n              <div class=\"signup-hr2\"></div>\r\n            </div>\r\n\r\n            <div id=\"signup-btn\">\r\n              <button\r\n                class=\"uk-button signup-btn2\"\r\n                (click)=\"this.authService.signInWithGoogle()\"\r\n              >\r\n                <img\r\n                  src=\"https://res.cloudinary.com/mindset/image/upload/v1625917475/google__1_epmkfp.png\"\r\n                  alt=\"\"\r\n                  class=\"img-1\"\r\n                />\r\n              </button>\r\n              <button\r\n                class=\"uk-button signup-btn2\"\r\n                (click)=\"this.authService.signInWithFacebook()\"\r\n              >\r\n                <img\r\n                  src=\"https://res.cloudinary.com/mindset/image/upload/v1625923180/facebook__uzmrzq.png\"\r\n                  alt=\"\"\r\n                  class=\"img-1\"\r\n                />\r\n              </button>\r\n            </div>\r\n            <h6>Already registered? <a routerLink=\"/login\">Login</a></h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  ClearCartItems,\r\n  RemoveItemFromCart,\r\n} from \"./../../reducers/action/cart.actions\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { ProductCartModel } from \"src/app/models/products.model\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { AppState } from \"src/app/reducers\";\r\nimport { getCart } from \"src/app/reducers/selectors/cart.selector\";\r\nimport {\r\n  UpdateCartItemUnit,\r\n  IncreamentCartItem,\r\n  DecreamentCartItem,\r\n} from \"src/app/reducers/action/cart.actions\";\r\n@Component({\r\n  selector: \"app-cart\",\r\n  templateUrl: \"./cart.component.html\",\r\n  styleUrls: [\"./cart.component.css\"],\r\n})\r\nexport class CartComponent implements OnInit {\r\n  constructor(private store: Store<AppState>) {}\r\n  carts$: Observable<ProductCartModel[]>;\r\n  cartTotal: number;\r\n  ngOnInit(): void {\r\n    this.carts$ = this.store.select(getCart);\r\n    this.carts$.subscribe((items) => {\r\n      let total = 0;\r\n      for (const item of items) {\r\n        total += item.price * item.orderedUnit;\r\n      }\r\n      this.cartTotal = total;\r\n    });\r\n  }\r\n\r\n  updateCartItem(id: number, unit: number) {\r\n    this.store.dispatch(UpdateCartItemUnit({ id, orderedUnit: unit }));\r\n  }\r\n\r\n  incrementCartItem(id: number) {\r\n    this.store.dispatch(IncreamentCartItem({ id }));\r\n  }\r\n\r\n  decrementCartItem(id: number) {\r\n    this.store.dispatch(DecreamentCartItem({ id }));\r\n  }\r\n  clearAll() {\r\n    this.store.dispatch(ClearCartItems());\r\n  }\r\n  removeItem(id) {\r\n    this.store.dispatch(RemoveItemFromCart({ id }));\r\n  }\r\n}\r\n","<div class=\"uk-section uk-section-default\">\r\n  <div class=\"uk-container\">\r\n    <h1>SHOPPING CART</h1>\r\n    <div class=\"uk-grid\">\r\n      <div class=\"uk-width-expand\">\r\n        <div class=\"uk-box-shadow-hover-large\">\r\n          <div\r\n            *ngIf=\"(carts$ | async).length <= 0\"\r\n            class=\"uk-padding uk-text-center uk-background-muted\"\r\n          >\r\n            <h2>No Item(s) in Cart</h2>\r\n            <a class=\"uk-link\" routerLink=\"/\"> Continue Shopping</a>\r\n          </div>\r\n          <table\r\n            *ngIf=\"(carts$ | async).length > 0\"\r\n            class=\"uk-table uk-table-responsive uk-table-striped uk-table-divider\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Item</th>\r\n                <th>Price</th>\r\n                <th>Unit</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let item of carts$ | async\">\r\n                <td>\r\n                  <div class=\"uk-grid\">\r\n                    <div>\r\n                      <img\r\n                        src=\"{{ item.imageUrl }},{{ item.name }}\"\r\n                        class=\"uk-img\"\r\n                        width=\"100\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"\">\r\n                      <p class=\"uk-text-bold uk-text-center\">{{ item.name }}</p>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div>\r\n                    <p class=\"uk-text-center\">\r\n                      <span class=\"uk-text-muted uk-text-small\">\r\n                        N{{ item.previousPrice.toLocaleString() }}\r\n                      </span>\r\n                      |\r\n                      <span class=\"uk-text-bold uk-text-medium\">\r\n                        N{{ item.price.toLocaleString() }}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </td>\r\n\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    class=\"uk-input\"\r\n                    value=\"{{ item.orderedUnit }}\"\r\n                    #itemUnit\r\n                    (change)=\"updateCartItem(item.id, itemUnit.value)\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    class=\"uk-button uk-button-small uk-button-default\"\r\n                    (click)=\"removeItem(item.id)\"\r\n                  >\r\n                    <span\r\n                      class=\"iconify\"\r\n                      data-icon=\"iwwa:delete\"\r\n                      data-inline=\"false\"\r\n                      width=\"20\"\r\n                    ></span>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <td colspan=\"3\" class=\"uk-text-center\">\r\n                  <button class=\"btn-default\" (click)=\"clearAll()\">\r\n                    <span\r\n                      class=\"iconify\"\r\n                      data-icon=\"iwwa:delete\"\r\n                      data-inline=\"false\"\r\n                      style=\"color: white; width: 15px; height: 15px;\"\r\n                    ></span>\r\n                    Clear All\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"uk-width-1-3@s\" *ngIf=\"(carts$ | async).length > 0\">\r\n        <div\r\n          class=\"uk-card uk-background-muted uk-card-default uk-padding-small\"\r\n        >\r\n          <div class=\"uk-card-title\"><h2>Order Summary</h2></div>\r\n          <div class=\"uk-card-body\">\r\n            <div *ngFor=\"let cart of carts$ | async\">\r\n              <div>\r\n                <span class=\"uk-text-light uk-text-large\">\r\n                  {{ cart.name }}\r\n                </span>\r\n              </div>\r\n              <div class=\"uk-grid\">\r\n                <div>\r\n                  <span\r\n                    class=\"uk-text-light uk-text-light text-dark-green uk-text-right\"\r\n                  >\r\n                    N{{ cart.price.toLocaleString() }}</span\r\n                  >\r\n                </div>\r\n                <div>\r\n                  <span class=\"uk-badge uk-background-secondary\"\r\n                    >x {{ cart.orderedUnit }}</span\r\n                  >\r\n                </div>\r\n                <div>\r\n                  <br />\r\n                  Sub total\r\n                  <span class=\"uk-text-bold uk-text-right\">\r\n                    N{{\r\n                      (cart.price * cart.orderedUnit).toLocaleString()\r\n                    }}</span\r\n                  >\r\n                </div>\r\n              </div>\r\n              <hr style=\"border: 1px solid black;\" />\r\n            </div>\r\n            <div class=\"uk-text-center uk-text-capitalize\">\r\n              <h4>Total</h4>\r\n              <span class=\"uk-text-bold\"\r\n                >N{{ cartTotal.toLocaleString() }}</span\r\n              >\r\n              <br />\r\n              <button class=\"btn-default\" routerLink=\"/checkout\">\r\n                Proceed to checkout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"\"></div>\r\n","import { ICategory } from \"./../../../models/CategoryModels\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { CatgoryService } from \"src/app/services/category/catgory.service\";\r\n\r\n@Component({\r\n  selector: \"app-category-home-grid\",\r\n  templateUrl: \"./category-home-grid.component.html\",\r\n  styleUrls: [\"./category-home-grid.component.css\"],\r\n})\r\nexport class CategoryHomeGridComponent implements OnInit {\r\n  categories: ICategory[] = [];\r\n  constructor(private categoryService: CatgoryService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.categoryService.GetCategory().subscribe((a) => {\r\n      this.categories = a.data;\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"categories.length > 0\">\r\n  <h2>Categories</h2>\r\n  <div\r\n    class=\"uk-position-relative uk-visible-toggle uk-light\"\r\n    tabindex=\"-1\"\r\n    uk-slider\r\n  >\r\n    <ul\r\n      class=\"uk-slider-items uk-grid-small uk-child-width-1-2 uk-child-width-1-4@m uk-grid\"\r\n    >\r\n      <li *ngFor=\"let category of categories\">\r\n        <div class=\"uk-panel\">\r\n          <img src=\"{{ category.imageUrl }}\" alt=\"\" />\r\n          <div\r\n            class=\"uk-position-center uk-overlay uk-overlay-primary uk-panel\"\r\n          >\r\n            <h3>{{ category.name }}</h3>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <a\r\n      class=\"uk-position-center-left uk-position-small uk-hidden-hover\"\r\n      href=\"#\"\r\n      uk-slidenav-previous\r\n      uk-slider-item=\"previous\"\r\n    ></a>\r\n    <a\r\n      class=\"uk-position-center-right uk-position-small uk-hidden-hover\"\r\n      href=\"#\"\r\n      uk-slidenav-next\r\n      uk-slider-item=\"next\"\r\n    ></a>\r\n  </div>\r\n</div>\r\n<br />\r\n","import { ClearCartItems } from \"./../../reducers/action/cart.actions\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"./../../services/toastr.service\";\r\nimport { ResponseStatus } from \"./../../shared/models/IResponseModel\";\r\nimport {\r\n  CreateInvoiceModel,\r\n  CreateOrderDto,\r\n  invoiceStatusEnums,\r\n} from \"./../../models/invoice.model\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ProductCartModel } from \"src/app/models/products.model\";\r\nimport { getCart } from \"src/app/reducers/selectors/cart.selector\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { AppState } from \"src/app/reducers\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { IUser } from \"src/app/models/IUserModel\";\r\nimport { getUser } from \"src/app/reducers/selectors/auth.selector\";\r\nimport { nigeriaSates } from \"src/app/data/nigeriastates\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { getLoggedInUser } from \"src/app/helpers/userUtility\";\r\nimport { InvoiceService } from \"src/app/services/invoice/invoice.service\";\r\nimport uikit from \"uikit\";\r\n\r\ndeclare var PaystackPop: any;\r\n@Component({\r\n  selector: \"app-checkout\",\r\n  templateUrl: \"./checkout.component.html\",\r\n  styleUrls: [\"./checkout.component.css\"],\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private fb: FormBuilder,\r\n    private notify: ToastrService,\r\n    private invoiceService: InvoiceService,\r\n    private router: Router\r\n  ) {}\r\n  user$: Observable<IUser>;\r\n  carts$: Observable<ProductCartModel[]>;\r\n  cartTotal: number;\r\n  onlineCartTotal: number;\r\n  states: string[];\r\n  checkoutForm: FormGroup;\r\n  isSubmited = false;\r\n  hasOnlinePaymentItems = false;\r\n\r\n  ngOnInit(): void {\r\n    this.carts$ = this.store.select(getCart);\r\n    this.user$ = this.store.select(getUser);\r\n    this.carts$.subscribe((items) => {\r\n      let total = 0;\r\n      let onlineTotal = 0;\r\n      this.hasOnlinePaymentItems =\r\n        items.filter((a) => a.paymentOption.includes(\"online\")).length > 0;\r\n      for (const item of items) {\r\n        total += item.price * item.orderedUnit;\r\n        if (item.paymentOption === \"online\") {\r\n          onlineTotal += item.price * item.orderedUnit;\r\n        }\r\n      }\r\n      this.cartTotal = total;\r\n      this.onlineCartTotal = onlineTotal;\r\n    });\r\n    this.initlizeForm();\r\n    this.states = nigeriaSates.map((a) => a.name);\r\n  }\r\n\r\n  get f() {\r\n    return this.checkoutForm.controls;\r\n  }\r\n\r\n  initlizeForm() {\r\n    const user = localStorage.getItem(\"user\");\r\n\r\n    if (user) {\r\n      const userJson: IUser = JSON.parse(user);\r\n      this.checkoutForm = this.fb.group({\r\n        firstname: [userJson.firstName, [Validators.required]],\r\n        lastname: [userJson.lastName, [Validators.required]],\r\n        email: [userJson.email, [Validators.required, Validators.email]],\r\n        phoneNumber: [userJson.phoneNumber, [Validators.required]],\r\n        address: [userJson.address, [Validators.required]],\r\n        country: [userJson.alpha2CountryCode, [Validators.required]],\r\n        state: [userJson.state, [Validators.required]],\r\n        city: [userJson.city, [Validators.required]],\r\n        additionalInfo: \"\",\r\n      });\r\n    } else {\r\n      this.checkoutForm = this.fb.group({\r\n        firstname: [\"\", [Validators.required]],\r\n        lastname: [\"\", [Validators.required]],\r\n        email: [\"\", [Validators.required, Validators.email]],\r\n        phoneNumber: [\"\", [Validators.required]],\r\n        address: [\"\", [Validators.required]],\r\n        country: [\"\", [Validators.required]],\r\n        state: [\"\", [Validators.required]],\r\n        city: [\"\", [Validators.required]],\r\n        additionalInfo: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  checkout() {\r\n    if (!this.checkoutForm.valid) {\r\n      return;\r\n    }\r\n    this.isSubmited = true;\r\n\r\n    let createOrders: CreateOrderDto[] = [];\r\n    this.carts$.subscribe((a) => {\r\n      a.forEach((item) => {\r\n        const orders: CreateOrderDto = {\r\n          unit: item.orderedUnit,\r\n          price: item.price,\r\n          discount: 0,\r\n          productId: item.id,\r\n          shipments: item.shipmentOption,\r\n          options: item.productOptions,\r\n          paymentOption: item.paymentOption,\r\n        };\r\n        createOrders.push(orders);\r\n      });\r\n    });\r\n    const invoiceData: CreateInvoiceModel = {\r\n      userId: getLoggedInUser().id,\r\n      billingAddress: this.checkoutForm.get(\"address\").value,\r\n      city: this.checkoutForm.get(\"city\").value,\r\n      country: this.checkoutForm.get(\"country\").value,\r\n      state: this.checkoutForm.get(\"state\").value,\r\n      createOrderDto: createOrders,\r\n    };\r\n    this.invoiceService.createInvoice(invoiceData).subscribe(\r\n      (data) => {\r\n        if (data.status === ResponseStatus.success) {\r\n          const onlineInvoice = data.data.find((a) =>\r\n            a.paymentOptionType.toLowerCase().includes(\"online\")\r\n          );\r\n\r\n          if (onlineInvoice) {\r\n            this.payWithPaystack(onlineInvoice.transReferenceNo);\r\n          } else {\r\n            setTimeout(() => {\r\n              uikit.modal.dialog(\r\n                `\r\n        <div class=\"uk-card uk-card-body\">\r\n        <h3> Payment complete!</h3>\r\n        <p>Processing your transaction, please wait</p>\r\n        </div>\r\n      `,\r\n                { \"bg-close\": false }\r\n              );\r\n              this.store.dispatch(ClearCartItems());\r\n              // this.router.navigate([\"/orders\"]);\r\n              location.href = \"/orders\";\r\n            }, 2000);\r\n          }\r\n        }\r\n      },\r\n      (error) => {\r\n        this.isSubmited = false;\r\n        this.notify.info(\r\n          \"something went wrong please try again later, or contact support\"\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  payWithPaystack(ref) {\r\n    // console.log(this.onlineCartTotal);\r\n    let handler = PaystackPop.setup({\r\n      key: environment.paystackPublicKey, // Replace with your public key\r\n      email: this.checkoutForm.get(\"email\").value,\r\n      amount: Math.ceil(this.onlineCartTotal) * 100,\r\n      firstname: this.checkoutForm.get(\"firstname\").value,\r\n      lastname: this.checkoutForm.get(\"lastname\").value,\r\n      phone: this.checkoutForm.get(\"phoneNumber\").value,\r\n      ref: ref,\r\n      // generates a pseudo-unique reference. Please replace with a reference you generated. Or remove the line entirely so our API will generate one for you\r\n      // label: \"Optional string that replaces customer email\"\r\n      onClose: () => {\r\n        // set order status to  payment_canceled\r\n        uikit.modal.dialog(\r\n          `\r\n        <div class=\"uk-card uk-card-body\">\r\n        <h3> Payment canceled</h3>\r\n        <p>Redirecting you to order page to complete the payment</p>\r\n        </div>\r\n      `,\r\n          { \"bg-close\": false }\r\n        );\r\n        this.invoiceService\r\n          .updateStatus(ref, invoiceStatusEnums.paymentCanceled)\r\n          .subscribe((c) => {\r\n            setTimeout(() => {\r\n              this.store.dispatch(ClearCartItems());\r\n              // this.router.navigate([\"/orders\"]);\r\n              location.href = \"/orders\";\r\n            }, 2000);\r\n          });\r\n\r\n        // redirect user to orders page\r\n      },\r\n      callback: (response) => {\r\n        uikit.modal.dialog(\r\n          `\r\n        <div class=\"uk-card uk-card-body\">\r\n        <h3> Payment complete!</h3>\r\n        <p>Processing your transaction, please wait</p>\r\n        </div>\r\n\r\n\r\n      `,\r\n          { \"bg-close\": false }\r\n        );\r\n        this.invoiceService.verifyInvoice(ref).subscribe((a) => {\r\n          // this.router.navigate([\"/orders\"]);\r\n          this.store.dispatch(ClearCartItems());\r\n          location.href = \"/orders\";\r\n        });\r\n\r\n        // this.invoiceService.verifyInvoice(ref)\r\n        // redirect user to orders page\r\n      },\r\n    });\r\n    handler.openIframe();\r\n  }\r\n}\r\n","<div class=\"uk-section uk-section-large\">\r\n  <div class=\"uk-container\">\r\n    <h1>CHECK OUT</h1>\r\n    <div class=\"uk-grid\">\r\n      <div class=\"uk-width-expand@s\">\r\n        <div class=\"uk-card uk-background-muted uk-card-body\">\r\n          <div *ngIf=\"(user$ | async) == null\" class=\"uk-text-center\">\r\n            <h2>Please login to continue</h2>\r\n            <button class=\"btn-default\" routerLink=\"/login\">\r\n              Login to Continue\r\n            </button>\r\n          </div>\r\n          <div class=\"\" *ngIf=\"(user$ | async) != null\">\r\n            <h3>Billing Details</h3>\r\n\r\n            <form [formGroup]=\"checkoutForm\" (ngSubmit)=\"checkout()\">\r\n              <div class=\"uk-grid uk-child-width-1-2@s\">\r\n                <div>\r\n                  <span\r\n                    *ngIf=\"\r\n                      f.firstname.invalid &&\r\n                      (f.firstname.dirty || f.firstname.touched)\r\n                    \"\r\n                  >\r\n                    <span\r\n                      class=\"uk-text-warning\"\r\n                      *ngIf=\"f.firstname.errors.required\"\r\n                    >\r\n                      firstname required\r\n                    </span>\r\n                  </span>\r\n                  <mat-form-field class=\"uk-width-expand\">\r\n                    <mat-label>First Name</mat-label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value=\"{{ f.firstname.value }}\"\r\n                      matInput\r\n                      disabled\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div>\r\n                  <span\r\n                    *ngIf=\"\r\n                      f.lastname.invalid &&\r\n                      (f.lastname.dirty || f.lastname.touched)\r\n                    \"\r\n                  >\r\n                    <span\r\n                      class=\"uk-text-warning\"\r\n                      *ngIf=\"f.lastname.errors.required\"\r\n                    >\r\n                      Lastname required\r\n                    </span>\r\n                  </span>\r\n                  <mat-form-field class=\"uk-width-expand\">\r\n                    <mat-label>Last Name</mat-label>\r\n                    <input\r\n                      value=\"{{ f.lastname.value }}\"\r\n                      type=\"text\"\r\n                      matInput\r\n                      disabled\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div>\r\n                  <mat-form-field class=\"uk-width-expand\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input\r\n                      value=\"{{ f.email.value }}\"\r\n                      type=\"email\"\r\n                      matInput\r\n                      disabled\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div> \r\n                     <span\r\n                    *ngIf=\"\r\n                      f.phoneNumber.invalid &&\r\n                      (f.phoneNumber.dirty || f.phoneNumber.touched)\r\n                    \"\r\n                  >\r\n                    <span\r\n                      class=\"uk-text-warning\"\r\n                      *ngIf=\"f.phoneNumber.errors.required\"\r\n                    >\r\n                      Phone number is required\r\n                    </span>\r\n                  </span>\r\n                  <mat-form-field class=\"uk-width-expand\">\r\n                    <mat-label>Phone number</mat-label>\r\n                    <input\r\n                      formControlName=\"phoneNumber\"\r\n                      type=\"tel\"\r\n                      matInput\r\n                      required\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"uk-grid uk-child-width-1-3@s uk-margin-remove-top\">\r\n                <div>\r\n                  <mat-form-field class=\"uk-width-expand\">\r\n                    <mat-label>Country</mat-label>\r\n                    <mat-select formControlName=\"country\" required>\r\n                      <mat-option value=\"ng\">Nigeria</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div>\r\n                  \r\n                  <mat-form-field class=\"uk-width-expand\">\r\n                    <mat-label>State</mat-label>\r\n                    <mat-select formControlName=\"state\" required>\r\n                      <mat-option>Select</mat-option>\r\n\r\n                      <mat-option\r\n                        *ngFor=\"let state of states\"\r\n                        value=\"{{ state.toLowerCase() }}\"\r\n                        >{{ state }}</mat-option\r\n                      >\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div>\r\n                  <mat-form-field class=\"uk-width-expand\">\r\n                    <mat-label>City / town</mat-label>\r\n                    <input\r\n                      formControlName=\"city\"\r\n                      type=\"text\"\r\n                      matInput\r\n                      required\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <mat-form-field class=\"uk-width-expand\">\r\n                  <mat-label>Address</mat-label>\r\n                  <textarea\r\n                    matInput\r\n                    placeholder=\"Delivery Address  ......\"\r\n                    required\r\n                    formControlName=\"address\"\r\n                  ></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n              <!-- <div>\r\n                <mat-form-field class=\"uk-width-expand\">\r\n                  <mat-label>Additional Information</mat-label>\r\n                  <textarea\r\n                    matInput\r\n                    placeholder=\"Additional Info  ...... \"\r\n                    formControlName=\"additionalInfo\"\r\n                  ></textarea>\r\n                </mat-form-field>\r\n              </div> -->\r\n                <div class='uk-alert uk-alert-warning' *ngIf=\"hasOnlinePaymentItems\">\r\n              <p>Some Item on your cart requires online payment, you will be required to make payment online. </p>\r\n            </div>\r\n              <div class=\"uk-text-center\">\r\n                <button\r\n                  [disabled]=\"checkoutForm.invalid || isSubmited\"\r\n                  type=\"submit\"\r\n                  class=\"btn-default\"\r\n                >\r\n                  <img\r\n                    *ngIf=\"isSubmited\"\r\n                    width=\"30\"\r\n                    src=\"assets/svg/loader-icon.svg\"\r\n                  />\r\n                  Place Order\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"uk-width-1-3@s\">\r\n        <div class=\"uk-padding\">\r\n          <h3>Order Summary</h3>\r\n          <div *ngFor=\"let cart of carts$ | async\">\r\n            <div>\r\n              <span class=\"uk-text-light uk-text-large\">\r\n                {{ cart.name }}\r\n              </span>\r\n            </div>\r\n            <div class=\"uk-grid\">\r\n              <div>\r\n                <span class=\"uk-text-bold text-dark-green uk-text-right\">\r\n                  N{{ cart.price.toLocaleString() }}</span\r\n                >\r\n                <span style=\"font-size: medium; margin-left: 5px\"\r\n                  >x {{ cart.orderedUnit }}</span\r\n                >\r\n              </div>\r\n\r\n              <div>\r\n                <span class=\"uk-text-bold uk-text-right\">\r\n                  N{{ (cart.price * cart.orderedUnit).toLocaleString() }}</span\r\n                >\r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n          <div class=\"uk-text-center uk-text-capitalize\">\r\n            <h4>\r\n              Total\r\n              <span class=\"uk-text-bold\"\r\n                >N{{ cartTotal.toLocaleString() }}</span\r\n              >\r\n            </h4> \r\n          \r\n            <br />\r\n            <button routerLink=\"/cart\" class=\"btn-default\">Go to cart</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"uk-section uk-section-default\" style=\"padding: 0\">\r\n  <div class=\"uk-container\">\r\n    <app-slider></app-slider>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"uk-section uk-section-default\" style=\"padding-top: 10px\">\r\n  <div class=\"uk-container\">\r\n    <app-category-home-grid></app-category-home-grid>\r\n    <app-new-product-list></app-new-product-list>\r\n  </div>\r\n</div>\r\n<div class=\"uk-section uk-section-default\" style=\"padding-top: 0px\">\r\n  <div class=\"uk-container\">\r\n    <h2>Featured Products</h2>\r\n    <app-products></app-products>\r\n  </div>\r\n \r\n","import { ProductsService } from \"src/app/services/products/products.service\";\r\nimport { ProductModel } from \"src/app/models/products.model\";\r\nimport { Options, LabelType } from '@angular-slider/ngx-slider';\r\nimport { Component, OnInit, ViewChild, ElementRef} from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { CatgoryService } from './../../../services/category/catgory.service';\r\nimport { CategoryResponse } from './../../../models/CategoryModels';\r\nimport { ToastrService } from \"./../../../services/toastr.service\"\r\nimport { Observable } from 'rxjs';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: \"app-list-product\",\r\n  templateUrl: \"./list-product.component.html\",\r\n  styleUrls: [\"./list-product.component.css\"],\r\n})\r\nexport class ListProductComponent implements OnInit {\r\n  @ViewChild('categoryItem') categoryItem: ElementRef<HTMLElement>;\r\n  categories$: Observable<CategoryResponse>\r\n  products: ProductModel[] = [];\r\n  totalItemCount: number;\r\n  maximumItem: number = 20;\r\n  defaultPage:number = 1;\r\n  pageNumber: number;\r\n  search:string = \"\";\r\n  categoryId:string = \"\";\r\n  minValue: number = 10;\r\n  maxValue: number = 500000;\r\n  options:Options;\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private productService: ProductsService,\r\n    private categoryService: CatgoryService,\r\n    private route: ActivatedRoute,\r\n    private toast: ToastrService,\r\n    private fb: FormBuilder \r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.categories$ = this.categoryService.GetCategory();\r\n    let search = this.route.snapshot.queryParamMap.get(\"search\");\r\n    this.search = search ? search : \"\";\r\n    let categoryId = this.route.snapshot.queryParamMap.get(\"categoryId\");\r\n    this.categoryId = categoryId ? categoryId : \"\";\r\n    this.fetchNextProducts(this.defaultPage)\r\n    this.form = this.fb.group({\r\n      keyword: [\"\", []],\r\n      category: [\"\", []],\r\n      minPrice: [10, []],\r\n      maxPrice: [500000, []],\r\n    })\r\n  }\r\n\r\n\r\n  fetchNextProducts(pageNumber:number){\r\n      this.productService.getProducts(\r\n        pageNumber, this.maximumItem, this.search, this.categoryId, \r\n        this.minValue, this.maxValue\r\n      ).subscribe((products) => {\r\n          this.products = products.data.data;\r\n          this.pageNumber = products.data.pager.pageNumber;\r\n          this.totalItemCount = products.data.pager.totalItemCount;\r\n        },error => console.error(error)\r\n      );\r\n  }\r\n\r\n  onSearch(){\r\n    this.search = this.form.get('keyword').value\r\n    this.categoryId = this.form.get('category').value\r\n    this.minValue = this.form.get('minPrice').value\r\n    this.maxValue = this.form.get('maxPrice').value\r\n    this.fetchNextProducts(this.defaultPage)\r\n  }\r\n\r\n  onClear(){\r\n    this.form.get('keyword').setValue('')\r\n    this.form.get('category').setValue('')\r\n    this.form.get('minPrice').setValue(10)\r\n    this.form.get('maxPrice').setValue(500000)\r\n    this.categoryItem.nativeElement.innerText = ''\r\n  }\r\n\r\n  onChangeMinPrice(){\r\n    this.resetPrice()\r\n  }\r\n\r\n  onChangeMaxPrice(){\r\n    if(this.resetPrice()){\r\n      this.toast.error(\"Maximum price must be greater than minimum price\")\r\n    }\r\n  }\r\n\r\n  resetPrice():boolean{\r\n    const minPrice:number = this.form.get('minPrice').value\r\n    const maxPrice:number = this.form.get('maxPrice').value\r\n    if(minPrice > maxPrice){\r\n      this.form.get('maxPrice').setValue(minPrice)\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n}\r\n","<div class=\"uk-section uk-section-default\" style=\"padding: 0\">\r\n  <div class=\"uk-container\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSearch()\">\r\n      <div class=\"uk-grid-small uk-child-width-expand@s\" uk-grid>\r\n        <div class=\"uk-width-3-4@s\">\r\n          <label for=\"category\">Search keyword:</label>\r\n          <input class=\"uk-input\" type=\"text\" placeholder=\"enter search product ...\"\r\n            formControlName=\"keyword\">\r\n        </div>\r\n        <div class=\"uk-width-1-4@s\" *ngIf=\"categories$ | async as categories\">\r\n          <label for=\"category\">Select category:</label><br>\r\n          <div uk-form-custom=\"target: > * > span:first-child\">\r\n              <select formControlName=\"category\">\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"{{ category.id }}\" *ngFor=\"let category of categories.data\">\r\n                    {{ category.name }}\r\n                  </option>\r\n              </select>\r\n              <button class=\"uk-button uk-button-default\" type=\"button\" tabindex=\"-1\">\r\n                  <span #categoryItem></span>\r\n                  <span uk-icon=\"icon: chevron-down\"></span>\r\n              </button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"uk-grid-small uk-child-width-expand@s\" uk-grid>\r\n        <div class=\"uk-width-3-4@s\">\r\n          <div class=\"uk-grid-small uk-grid uk-child-width-1-2@s\">\r\n            <div>\r\n              <label for=\"minPrice\">Minimum Price:</label>\r\n              <input class=\"uk-input\" type=\"number\" placeholder=\"10\" \r\n                formControlName=\"minPrice\" (change)=\"onChangeMinPrice()\">\r\n            </div>\r\n            <div>\r\n              <label for=\"maxPrice\">Maximum Price:</label>\r\n              <input class=\"uk-input\" type=\"number\" placeholder=\"500000\"\r\n                formControlName=\"maxPrice\"  (change)=\"onChangeMaxPrice()\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"uk-width-1-4@s\" style=\"padding-top: 10px;\">\r\n          <button type=\"submit\" \r\n            class=\"uk-button uk-button-primary uk-margin-small-top uk-margin-small-right uk-margin-remove-top@m\" >\r\n            filter\r\n          </button>\r\n          <button  (click)=\"onClear()\" type=\"button\"\r\n            class=\"uk-button uk-button-default uk-margin-small-top uk-margin-remove-top@m\" >\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <hr/>\r\n    </form>\r\n    <h2>Products</h2>\r\n    <div\r\n      class=\"uk-grid uk-grid-small uk-grid-match uk-child-width-1-2 uk-child-width-1-4@s uk-child-width-1-5@m uk-margin\"\r\n    >\r\n      <app-single-product\r\n        *ngFor=\"let product of products | paginate: { itemsPerPage: maximumItem, currentPage: pageNumber, totalItems:totalItemCount}\"\r\n        [product]=\"product\"\r\n        class=\"uk-margin-bottom\"\r\n      >\r\n      </app-single-product>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"uk-flex uk-flex-center\">\r\n  <pagination-controls (pageChange)=\"fetchNextProducts($event)\"></pagination-controls>\r\n</div>","import { ProductModel } from \"./../../../models/products.model\";\r\nimport { ProductsService } from \"./../../../services/products/products.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-new-product-list\",\r\n  templateUrl: \"./new-product-list.component.html\",\r\n  styleUrls: [\"./new-product-list.component.css\"],\r\n})\r\nexport class NewProductListComponent implements OnInit {\r\n  constructor(private productService: ProductsService) {}\r\n  products: ProductModel[] = [];\r\n  ngOnInit(): void {\r\n    this.productService.getNewProducts().subscribe((a) => {\r\n      this.products = a.data.data;\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"products.length > 0\">\r\n  <h3>New Products</h3>\r\n  <div\r\n    class=\"uk-grid uk-grid-small uk-grid-match uk-child-width-1-2 uk-child-width-1-3@s uk-child-width-1-4@m uk-margin\"\r\n  >\r\n    <app-single-product\r\n      *ngFor=\"let product of products\"\r\n      [product]=\"product\"\r\n      class=\"uk-margin-bottom\"\r\n    >\r\n    </app-single-product>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search-product',\r\n  templateUrl: './search-product.component.html',\r\n  styleUrls: ['./search-product.component.css']\r\n})\r\nexport class SearchProductComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>search-product works!</p>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-slider\",\r\n  templateUrl: \"./slider.component.html\",\r\n  styleUrls: [\"./slider.component.css\"],\r\n})\r\nexport class SliderComponent implements OnInit {\r\n  searchForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.searchForm = this.fb.group({\r\n      text: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.searchForm.controls;\r\n  }\r\n  search() {\r\n    console.log(\"search : \", this.f.text.value);\r\n    if (this.searchForm.valid) {\r\n      location.href = \"/products?search=\" + this.f.text.value;\r\n    }\r\n  }\r\n}\r\n","<div class=\"uk-cover-container uk-height-medium uk-box-shadow-large\">\r\n  <canvas width=\"1600\" height=\"500\"></canvas>\r\n  <img\r\n    src=\"https://source.unsplash.com/1600x500/?ecommerce, buy , sell, africa, nigeria, nature\"\r\n    class=\"\"\r\n    alt=\"\"\r\n    uk-cover\r\n  />\r\n\r\n  <div\r\n    class=\"uk-position-center-left uk-position-large uk-width-1-1 uk-width-1-2@s uk-overlay backgound-transparent-dark-green\"\r\n  >\r\n    <h1 class=\"text-white\">Rena Market</h1>\r\n    <h2 class=\"text-white\">Connecting Seller and Buyers</h2>\r\n    <form\r\n      [formGroup]=\"searchForm\"\r\n      (ngSubmit)=\"search()\"\r\n      class=\"uk-search uk-search-default uk-width-expand backgound-white\"\r\n    >\r\n      <a uk-search-icon></a>\r\n      <input\r\n        class=\"uk-search-input uk-width-expand\"\r\n        type=\"search\"\r\n        placeholder=\"Search for products\"\r\n        formControlName=\"text\"\r\n      />\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { formatProductOptions, formatShipmentOption } from './../../helpers/productOption';\r\nimport { getLoggedInUser } from \"./../../helpers/userUtility\";\r\nimport { InvoiceService } from \"src/app/services/invoice/invoice.service\";\r\nimport { InvoiceModel, invoiceStatus } from \"./../../models/invoice.model\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\ndeclare var PaystackPop: any;\r\nimport uikit from \"uikit\";\r\nimport { numberWithCommas } from './../../helpers/number-format';\r\n\r\n@Component({\r\n  selector: \"app-order-invoice\",\r\n  templateUrl: \"./order-invoice.component.html\",\r\n  styleUrls: [\"./order-invoice.component.css\"],\r\n})\r\nexport class OrderInvoiceComponent implements OnInit {\r\n  numberWithCommas:Function = numberWithCommas\r\n  formatProductOptions:Function = formatProductOptions\r\n  formatShipmentOption:Function = formatShipmentOption\r\n  user = getLoggedInUser();\r\n  invoice: InvoiceModel;\r\n  total: number;\r\n  filterType = invoiceStatus;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private invoiceService: InvoiceService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    let id = this.route.snapshot.paramMap.get(\"id\");\r\n    this.invoiceService.getById(id).subscribe((d) => {\r\n      this.invoice = d.data;\r\n      this.total = 0;\r\n      this.invoice.orders.forEach((a) => {\r\n        this.total += a.total;\r\n      });\r\n    });\r\n  }\r\n\r\n  pay(id) {\r\n    this.payWithPaystack(id);\r\n  }\r\n\r\n  payWithPaystack(ref) {\r\n    let handler = PaystackPop.setup({\r\n      key: environment.paystackPublicKey, // Replace with your public key\r\n      email: this.user.email,\r\n      amount: Math.ceil(this.total) * 100,\r\n      firstname: this.user.firstName,\r\n      lastname: this.user.lastName,\r\n      phone: this.user.phoneNumber,\r\n      ref: ref,\r\n      // generates a pseudo-unique reference. Please replace with a reference you generated. Or remove the line entirely so our API will generate one for you\r\n      // label: \"Optional string that replaces customer email\"\r\n      onClose: () => {\r\n        // set order status to  payment_canceled\r\n        uikit.modal.dialog(\r\n          `<div class=\"uk-card uk-card-body\">\r\n        <h3> Payment canceled</h3>\r\n        <p>Redirecting you to order page to complete the payment</p>\r\n        </div>`,\r\n          { \"bg-close\": false }\r\n        );\r\n\r\n\r\n        // redirect user to orders page\r\n      },\r\n      callback: (response) => {\r\n        let message = \"Payment complete! Reference: \" + response.reference;\r\n\r\n        uikit.modal.dialog(\r\n          `<div class=\"uk-card uk-card-body\">\r\n        <h3> Payment complete!</h3>\r\n        <p>Processing your transaction, please wait</p>\r\n        </div>`,\r\n          { \"bg-close\": false }\r\n        );\r\n        this.invoiceService.verifyInvoice(ref).subscribe((a) => {\r\n          // this.router.navigate([\"/orders\"]);\r\n          location.href = \"/orders\";\r\n        });\r\n\r\n        // this.invoiceService.verifyInvoice(ref)\r\n        // redirect user to orders page\r\n      },\r\n    });\r\n    handler.openIframe();\r\n  }\r\n}\r\n","<div class=\"uk-section uk-section-default\">\r\n  <div class=\"uk-container\" *ngIf=\"invoice\">\r\n    <h1>MY ORDER</h1>\r\n    <div class=\"uk-grid uk-child-width-1-2@s\">\r\n      <div>\r\n        <p>\r\n          Invoice No <span>#{{ invoice.id }}</span>\r\n        </p>\r\n        <p>Date <span>21 feb, 2020</span></p>\r\n        <h3>Customer Information</h3>\r\n        <p>\r\n          Name : <span>{{ user.firstName + \" \" + user.lastName }}</span>\r\n        </p>\r\n        <p>\r\n          Phone : <span>{{ user.phoneNumber }}</span>\r\n        </p>\r\n        <h3>Billing Address</h3>\r\n        <p>\r\n          Country : <span>{{ invoice.country }}</span>\r\n        </p>\r\n        <p>\r\n          State : <span>{{ invoice.state }}</span>\r\n        </p>\r\n        <p>\r\n          Address : <span>{{ invoice.billingAddress }}</span>\r\n        </p>\r\n        <h3>Additional Infomation</h3>\r\n        <p></p>\r\n      </div>\r\n      <div>\r\n        <h3>Status: {{ invoice.status }}</h3>\r\n        <h3>Reference No: {{ invoice.transReferenceNo }}</h3>\r\n        <button\r\n          *ngIf=\"\r\n            invoice.status.toLocaleLowerCase() !=\r\n            filterType.paid.toLocaleLowerCase()\r\n          \"\r\n          class=\"uk-button uk-button-default backgound-dark-green uk-button-small uk-align-right uk-text-right\"\r\n          (click)=\"pay(invoice.id)\"\r\n        >\r\n          Pay now\r\n        </button>\r\n        <h3>Cost Summary</h3>\r\n        <!-- <p>Total Item Cost: NGN 40,09902</p> -->\r\n        <!-- <p>Shipping cost: NGN 3,000</p>\r\n        <p>Discount: NGN 2000</p> -->\r\n        <p>\r\n          <b>Total: NGN {{ total.toLocaleString() }}</b>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"uk-margin-top\">\r\n      <hr />\r\n      <h1 class=\"uk-text-bold\">ITEMS</h1>\r\n      <div class=\"uk-overflow-auto\">\r\n        <table\r\n          class=\"uk-table uk-table-small uk-table-responsive uk-table-divider uk-table-divider\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>Order No</th>\r\n              <th>Item</th>\r\n              <th>Name</th>\r\n              <th>Option</th>\r\n              <th>Shipment</th>\r\n              <th>Unit</th>\r\n              <th>Cost</th>\r\n              <th>Status</th>\r\n              <th>Payment Option</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let order of invoice.orders\">\r\n              <td>{{ order.id }}</td>\r\n              <td>\r\n                <div>\r\n                  <img\r\n                    class=\"uk-img\"\r\n                    width=\"100\"\r\n                    src=\"{{ order.product.imageUrl }}\"\r\n                  />\r\n                </div>\r\n              </td>\r\n              <td>{{ order.product.name }}</td>\r\n              <td [innerHtml]=\"formatProductOptions(order.options)\"></td>\r\n              <td>{{formatShipmentOption(order.shipments)}}</td>\r\n              <td>{{ order.unit }}</td>\r\n              <td>NGN {{ numberWithCommas(order.price.toLocaleString()) }}</td>\r\n              <td>{{ order.status }}</td>\r\n              <td>{{ order.paymentOption }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { IPage } from \"./../../models/products.model\";\r\nimport { getLoggedInUser } from \"./../../helpers/userUtility\";\r\nimport { InvoiceService } from \"src/app/services/invoice/invoice.service\";\r\n\r\nimport { ProductsService } from \"src/app/services/products/products.service\";\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ProductModel } from \"src/app/models/products.model\";\r\nimport {\r\n  InvoiceModel,\r\n  OrderModel,\r\n  invoiceStatus,\r\n} from \"./../../models/invoice.model\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\n\r\nimport * as _ from \"lodash\";\r\nimport { numberWithCommas } from './../../helpers/number-format';\r\n@Component({\r\n  selector: \"app-order\",\r\n  templateUrl: \"./order.component.html\",\r\n  styleUrls: [\"./order.component.css\"],\r\n})\r\nexport class OrderComponent implements OnInit {\r\n  numberWithCommas:Function = numberWithCommas\r\n  filteredInvoice: InvoiceModel[];\r\n  filterType = invoiceStatus;\r\n  invoices: InvoiceModel[];\r\n  page: IPage;\r\n\r\n  user = getLoggedInUser()\r\n  maximumItem: number = 10;\r\n  defaultPage:number = 1;\r\n  pageNumber: number;\r\n  search:string = \"\";\r\n  categoryId:string = \"\";\r\n  minValue: number = 10;\r\n  maxValue: number = 500000;\r\n  products: ProductModel[] = [];\r\n  totalItemCount: number;\r\n  form: FormGroup;\r\n  keyword:string = ''\r\n  category:string = ''\r\n  // user: any;\r\n  \r\n  constructor(\r\n    // private productService: ProductsService,\r\n    private invoiceService: InvoiceService) {}\r\n  ngOnInit(): void {\r\n    // this.fetchNextProducts(this.defaultPage)\r\n    const user = getLoggedInUser();\r\n    if (user) {\r\n      this.invoiceService.getUserInvoices(user.id).subscribe((data) => {\r\n        this.invoices = data.data.data;\r\n        this.filteredInvoice = this.invoices;\r\n        this.page = data.data.pager;\r\n      });\r\n    }\r\n  }\r\n  sumOrders(orders: OrderModel[]) {\r\n    return _.sumBy(orders, (o) => o.total)\r\n      .toFixed(2)\r\n      .toLocaleString();\r\n  }\r\n  formatDate(date) {\r\n    return new Date(date).toLocaleString();\r\n  }\r\n\r\n  filter(filter) {\r\n    if (filter == invoiceStatus.paid) {\r\n      this.filteredInvoice = this.invoices.filter(\r\n        (a) => a.status == invoiceStatus.paid\r\n      );\r\n    } else if (filter == invoiceStatus.pending) {\r\n      this.filteredInvoice = this.invoices.filter(\r\n        (a) => a.status == invoiceStatus.pending\r\n      );\r\n    } else if (filter == \"others\") {\r\n      this.filteredInvoice = this.invoices.filter(\r\n        (a) =>\r\n          a.status != invoiceStatus.pending &&\r\n          a.status != invoiceStatus.paid &&\r\n          a.status != invoiceStatus.pending\r\n      );\r\n    } else if (filter == \"all\") {\r\n      this.filteredInvoice = this.invoices;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  fetchNextProducts(pageNumber:number){\r\n    this.invoiceService.getUserInvoices(\r\n       this.user.id,pageNumber,\r\n      this.maxValue\r\n    ).subscribe((invoices) => {\r\n        this.invoices = invoices.data.data;\r\n        this.pageNumber = invoices.data.pager.pageNumber;\r\n        this.totalItemCount = invoices.data.pager.totalItemCount;\r\n      },error => console.error(error)\r\n    );\r\n}\r\n\r\n\r\n\r\n// onSearch(data):void{\r\n//   this.keyword = data.keyword\r\n//   this.category = data.category\r\n//   this.minValue = data.minValue\r\n//   this.maxValue = data.maxValue\r\n//   this.fetchNextProducts(this.defaultPage)\r\n// }\r\n\r\n}\r\n","<div class=\"uk-section uk-section-large\">\r\n  <div class=\"uk-container\">\r\n    <h1>My Orders</h1>\r\n    <ul class=\"uk-tab-bottom\" data-uk-tab=\"media: @s\">\r\n      <li class=\"uk-active\"><a (click)=\"filter('all')\">All</a></li>\r\n      <li><a (click)=\"filter(filterType.pending)\">Pending</a></li>\r\n      <li><a (click)=\"filter(filterType.paid)\">Sucess</a></li>\r\n      <li><a (click)=\"filter('others')\">others</a></li>\r\n    </ul>\r\n    <div>\r\n      <div class=\"uk-overflow-auto\">\r\n        <table\r\n          class=\"uk-table uk-table-small uk-table-responsive uk-table-divider uk-table-divider\"\r\n        >\r\n          <thead>\r\n            <tr >\r\n              <th>invoice No</th>\r\n              <th>dates</th>\r\n              <th>status</th>\r\n              <th>items</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody *ngIf=\"invoices\">\r\n            <tr *ngFor=\"let invoice of filteredInvoice | paginate: { itemsPerPage: maximumItem, currentPage: pageNumber, totalItems:totalItemCount}\">\r\n              <td>#{{ invoice.id }}</td>\r\n              <td>{{ formatDate(invoice.createdOn) }}</td>\r\n              <td>{{ invoice.status }}</td>\r\n              <td>\r\n                <span class=\"uk-badge backgound-dark-green\">{{\r\n                  invoice.orders.length\r\n                }}</span>\r\n                <span> NGN {{ numberWithCommas(sumOrders(invoice.orders)) }} </span>\r\n              </td>\r\n\r\n              <td>\r\n                <button\r\n                  [routerLink]=\"['/order', invoice.id]\"\r\n                  class=\"uk-button uk-button-small\"\r\n                >\r\n                  view\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<div\r\nclass=\"uk-grid uk-grid-small uk-grid-match uk-child-width-1-2 uk-child-width-1-4@s uk-child-width-1-5@m uk-margin\"\r\n>\r\n<!-- <app-single-product\r\n        *ngFor=\"let invoice of filteredInvoice | paginate: { itemsPerPage: maximumItem, currentPage: pageNumber, totalItems:totalItemCount}\"\r\n        [product]=\"invoice\"\r\n        class=\"uk-margin-bottom\"\r\n      >\r\n      </app-single-product> -->\r\n\r\n</div>\r\n<div class=\"uk-flex uk-flex-center\">\r\n  <pagination-controls (pageChange)=\"fetchNextProducts($event)\"></pagination-controls>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-category-products',\r\n  templateUrl: './category-products.component.html',\r\n  styleUrls: ['./category-products.component.css']\r\n})\r\nexport class CategoryProductsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ul data-uk-tab>\r\n  <li class=\"uk-active\"><a href=\"#\">Most Purchased</a></li>\r\n  <li><a href=\"#\">Vegetables</a></li>\r\n  <li><a href=\"#\">Home Mades</a></li>\r\n  <li><a href=\"#\">Upcoming</a></li>\r\n</ul>\r\n\r\n<div uk-slider>\r\n  <ul class=\"uk-slider-items uk-child-width-1-3@s uk-child-width-1-4@\">\r\n    <li>\r\n      <img src=\"\" alt=\"\" />\r\n    </li>\r\n  </ul>\r\n</div>\r\n<app-products></app-products>\r\n","import { ProductModel } from \"./../../models/products.model\";\r\nimport { ProductsService } from \"../../services/products/products.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { NgxUiLoaderService } from \"ngx-ui-loader\";\r\n\r\n@Component({\r\n  selector: \"app-products\",\r\n  templateUrl: \"./products.component.html\",\r\n  styleUrls: [\"./products.component.css\"],\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n  constructor(\r\n    private productService: ProductsService,\r\n    private ngxService: NgxUiLoaderService\r\n  ) {}\r\n  products: ProductModel[] = [];\r\n  pageNumber: number;\r\n  maximumItem: number = 20;\r\n  hasNextPage: boolean;\r\n\r\n  ngOnInit(): void {\r\n    this.ngxService.startLoader(\"loader-01\");\r\n    this.fetchNextProducts(1);\r\n    this.ngxService.stopLoader(\"loader-01\");\r\n  }\r\n\r\n  fetchNextProducts(pageNumber: number) {\r\n    this.productService.getProducts(pageNumber, this.maximumItem).subscribe(\r\n      (product) => {\r\n        this.products = [...this.products, ...product.data.data];\r\n        this.pageNumber = product.data.pager.pageNumber;\r\n        this.hasNextPage = product.data.pager.hasNextPage;\r\n      },\r\n      (error) => console.error(error)\r\n    );\r\n  }\r\n}\r\n","<div *ngIf=\"products.length > 0 && products.length > 3\"\r\n    class=\"uk-grid uk-grid-small uk-grid-match uk-child-width-1-2 uk-child-width-1-3@s uk-child-width-1-4@m uk-margin\">\r\n  <app-single-product\r\n    *ngFor=\"let product of products\"\r\n    [product]=\"product\"\r\n    class=\"uk-margin-bottom\">\r\n  </app-single-product>\r\n</div>\r\n<!-- Load More -->\r\n<infinite-scroll (scrolled)=\"fetchNextProducts(pageNumber)\" *ngIf=\"hasNextPage\">\r\n    <p class=\"loading-history\">Loading more...</p>\r\n</infinite-scroll>\r\n","import { ToastrService } from \"src/app/services/toastr.service\";\r\nimport {\r\n  ProductModel,\r\n  Category,\r\n  ProductCartModel,\r\n} from \"./../../../models/products.model\";\r\nimport { Component, OnInit, Input, ViewChild, ElementRef} from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { AppState } from \"src/app/reducers\";\r\nimport { AddToCart } from \"src/app/reducers/action/cart.actions\";\r\nimport { numberWithCommas } from './../../../helpers/number-format';\r\n\r\n@Component({\r\n  selector: \"app-single-product\",\r\n  templateUrl: \"./single-product.component.html\",\r\n  styleUrls: [\"./single-product.component.css\"],\r\n})\r\nexport class SingleProductComponent implements OnInit {\r\n  constructor(private toast: ToastrService, private store: Store<AppState>) {}\r\n  @ViewChild('closeAddToCart') closeAddToCart: ElementRef<HTMLElement>\r\n  @Input() product;\r\n  numberWithCommas:Function = numberWithCommas\r\n  ngOnInit(): void {}\r\n\r\n  addToCart(productItem) {\r\n    const {\r\n      product,orderedUnit,shipmentOption,productOptions,paymentOption\r\n    } = productItem\r\n    const productCart: ProductCartModel = {\r\n      category: product.category,\r\n      categoryId: product.categoryId,\r\n      unit: product.unit,\r\n      createdOn: product.createdOn,\r\n      name: product.name,\r\n      paymentOptions: product.paymentOption,\r\n      description: \"\",\r\n      id: product.id,\r\n      imageUrl: product.imageUrl,\r\n      orderedUnit: orderedUnit,\r\n      previousPrice: product.previousPrice,\r\n      price: product.price,\r\n      productImages: product.productImages,\r\n      shipmentOption,\r\n      productOptions,\r\n      paymentOption,\r\n    };\r\n    this.store.dispatch(AddToCart(productCart));\r\n    this.toast.success(\"product added to cart\");\r\n    this.closeAddToCartModal();\r\n  }\r\n\r\n  closeAddToCartModal():void{\r\n    this.closeAddToCart.nativeElement.click()\r\n  }\r\n}\r\n","<!--=======  single product  =======-->\r\n<div class=\"uk-card uk-card-default uk-card-hover uk-card-small\">\r\n  <div\r\n    class=\"uk-card-media-top uk-inline-clip uk-transition-toggle\"\r\n    tabindex=\"0\" style=\"height: 200px;\"\r\n  >\r\n    <img\r\n      src=\"https://res.cloudinary.com/votel/image/fetch/c_pad,b_auto/{{product.imageUrl}}\" \r\n      class=\"uk-transition-scale-up uk-transition-opaque\"\r\n      data-src=\"https://res.cloudinary.com/votel/image/fetch/c_pad,b_auto/{{product.imageUrl}}\"\r\n      alt=\"{{product.name}}\" \r\n    />\r\n  </div>\r\n  <div\r\n    class=\"uk-card-badge uk-label backgound-dark-green\"\r\n    *ngIf=\"product.unit <= 0\"\r\n  >\r\n    out of stock\r\n  </div>\r\n  <div class=\"uk-card-body uk-padding-small\">\r\n    <div class=\"uk-text-center\">\r\n      <h3 class=\"uk-card-title uk-margin-small uk-margin-remove\">\r\n        {{ product.name }}\r\n      </h3>\r\n      <span\r\n        class=\"uk-text-muted uk-text-small\"\r\n        style=\"text-decoration: line-through\"\r\n        *ngIf=\"product.price > product.previousPrice\"\r\n      >\r\n        N{{ numberWithCommas(product.previousPrice) }}\r\n      </span>\r\n      |\r\n      <span class=\"uk-text-bold\">N {{ numberWithCommas(product.price) }}</span>\r\n      <br />\r\n    </div>\r\n    <div class=\"uk-text-center\">\r\n      <button attr.data-uk-toggle=\"target: #modal-add-to-cart-{{product.id}}\" \r\n        class=\"btn-default btn-default-small uk-margin-small\">\r\n        Add to Cart\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  id=\"modal-add-to-cart-{{ product.id }}\"\r\n  uk-modal=\"bg-close: false\"\r\n  class=\"uk-modal-container\"\r\n>\r\n  <div class=\"uk-modal-dialog uk-modal-body\">\r\n    <button class=\"uk-modal-close-outside\" type=\"button\" uk-close #closeAddToCart></button>\r\n    <app-add-to-cart [productId]=\"product.id\" \r\n      (addedToCart)=\"addToCart($event)\"   \r\n      (closed)=\"closeAddToCartModal()\">\r\n    </app-add-to-cart>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-slider-products',\r\n  templateUrl: './slider-products.component.html',\r\n  styleUrls: ['./slider-products.component.css']\r\n})\r\nexport class SliderProductsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-view-product',\r\n  templateUrl: './view-product.component.html',\r\n  styleUrls: ['./view-product.component.css']\r\n})\r\nexport class ViewProductComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>view-product works!</p>\r\n","import { ToastrService } from \"./../../../services/toastr.service\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\n\r\nimport { IUpdatePassword } from \"./../../../models/auth-model\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { nigeriaSates } from \"src/app/data/nigeriastates\";\r\nimport { MustMatch } from \"src/app/helpers/control-validators\";\r\nimport { getLoggedInUser } from \"src/app/helpers/userUtility\";\r\n\r\n@Component({\r\n  selector: \"app-change-password\",\r\n  templateUrl: \"./change-password.component.html\",\r\n  styleUrls: [\"./change-password.component.css\"],\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  profileForm: FormGroup;\r\n\r\n  isSubmited = false;\r\n  errors: string[] = [];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private toast: ToastrService\r\n  ) {}\r\n\r\n  get f() {\r\n    return this.profileForm.controls;\r\n  }\r\n  ngOnInit(): void {\r\n    this.profileForm = this.fb.group(\r\n      {\r\n        currentPassword: [\"\", [Validators.required]],\r\n        password: [\"\", [Validators.required, Validators.minLength(6)]],\r\n        confirmPassword: [\"\", [Validators.required]],\r\n      },\r\n      {\r\n        validators: MustMatch(\"password\", \"confirmPassword\"),\r\n      }\r\n    );\r\n  }\r\n\r\n  update() {\r\n    if (this.profileForm.invalid) {\r\n      console.log(this.profileForm.errors);\r\n      return;\r\n    }\r\n    const updatePassword: IUpdatePassword = {\r\n      currentPassword: this.profileForm.get(\"currentPassword\").value,\r\n      newPassword: this.profileForm.get(\"confirmPassword\").value,\r\n    };\r\n    this.isSubmited = true;\r\n    this.errors = [];\r\n    this.authService.UpdatePassword(updatePassword).subscribe(\r\n      (a) => {\r\n        this.isSubmited = false;\r\n        console.log(\"success\", a);\r\n        this.toast.success(\"password updated successfully\");\r\n      },\r\n      (error) => {\r\n        this.isSubmited = false;\r\n\r\n        this.errors = error.error.errors.map((a) => a.description);\r\n        console.log(\"error\", error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"uk-container\">\r\n  <div\r\n    class=\"uk-margin uk-padding uk-padding-top-remove uk-card uk-card-default\"\r\n  >\r\n    <form [formGroup]=\"profileForm\" (ngSubmit)=\"update()\">\r\n      <div class=\"uk-alert uk-alert-danger\" *ngIf=\"errors.length > 0\">\r\n        <p *ngFor=\"let error of errors\">{{ error }}</p>\r\n      </div>\r\n      <div>\r\n        <span\r\n          *ngIf=\"\r\n            f.currentPassword.invalid &&\r\n            (f.currentPassword.dirty || f.currentPassword.touched)\r\n          \"\r\n        >\r\n          <span\r\n            class=\"uk-text-warning\"\r\n            *ngIf=\"f.currentPassword.errors.required\"\r\n          >\r\n            Password required <br\r\n          /></span>\r\n          <span\r\n            class=\"uk-text-warning\"\r\n            *ngIf=\"f.currentPassword.value.length < 6\"\r\n          >\r\n            Password should be at least 6 charaters <br\r\n          /></span>\r\n        </span>\r\n\r\n        <mat-form-field class=\"uk-width-expand\">\r\n          <mat-label>Current Password</mat-label>\r\n          <input\r\n            type=\"password\"\r\n            minlength=\"6\"\r\n            formControlName=\"currentPassword\"\r\n            matInput\r\n            placeholder=\"Current Password\"\r\n            required\r\n          />\r\n        </mat-form-field>\r\n\r\n        <span\r\n          *ngIf=\"f.password.invalid && (f.password.dirty || f.password.touched)\"\r\n        >\r\n          <span class=\"uk-text-warning\" *ngIf=\"f.password.errors.required\">\r\n            Password required <br\r\n          /></span>\r\n          <span class=\"uk-text-warning\" *ngIf=\"f.password.value.length < 6\">\r\n            Password should be at least 6 charaters <br\r\n          /></span>\r\n        </span>\r\n\r\n        <mat-form-field class=\"uk-width-expand\">\r\n          <mat-label>Password</mat-label>\r\n          <input\r\n            type=\"password\"\r\n            minlength=\"6\"\r\n            formControlName=\"password\"\r\n            matInput\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n        </mat-form-field>\r\n\r\n        <span\r\n          *ngIf=\"\r\n            f.confirmPassword.invalid &&\r\n            (f.confirmPassword.dirty || f.confirmPassword.touched)\r\n          \"\r\n        >\r\n          <span\r\n            class=\"uk-text-warning\"\r\n            *ngIf=\"f.confirmPassword.errors.required\"\r\n          >\r\n            Confirm Password required <br\r\n          /></span>\r\n          <span\r\n            class=\"uk-text-warning\"\r\n            *ngIf=\"f.confirmPassword.errors.mustMatch\"\r\n          >\r\n            Confirm Password must match <br\r\n          /></span>\r\n        </span>\r\n\r\n        <mat-form-field class=\"uk-width-expand\">\r\n          <mat-label>Confirm Password</mat-label>\r\n          <input\r\n            type=\"password\"\r\n            formControlName=\"confirmPassword\"\r\n            matInput\r\n            placeholder=\"Confirm password\"\r\n            required\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"uk-text-center\">\r\n        <button\r\n          [disabled]=\"profileForm.invalid\"\r\n          type=\"submit\"\r\n          class=\"uk-button uk-button-primary\"\r\n        >\r\n          <img *ngIf=\"isSubmited\" width=\"30\" src=\"assets/svg/loader-icon.svg\" />\r\n          Update Password\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile-dashboard',\r\n  templateUrl: './profile-dashboard.component.html',\r\n  styleUrls: ['./profile-dashboard.component.css']\r\n})\r\nexport class ProfileDashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"uk-section uk-section-large\">\r\n  <div class=\"uk-container\">\r\n    <h1>My Profile</h1>\r\n    <ul class=\"uk-tab-bottom\" data-uk-tab=\"media: @s\">\r\n\r\n      <li class=\"uk-active\" routerLink=\"my\"><a>Profile</a></li>\r\n      <li><a routerLink=\"manage-account\">Manage Account</a></li>\r\n      \r\n    </ul>\r\n\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { AuthService } from \"src/app/services/auth.service\";\r\nimport { ToastrService } from \"./../../../services/toastr.service\";\r\nimport { UserService } from \"./../../../services/user/user.service\";\r\nimport { getLoggedInUser } from \"./../../../helpers/userUtility\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { nigeriaSates } from \"src/app/data/nigeriastates\";\r\nimport { IUpdateUser, IUser } from \"src/app/models/IUserModel\";\r\n\r\n@Component({\r\n  selector: \"app-profile\",\r\n  templateUrl: \"./profile.component.html\",\r\n  styleUrls: [\"./profile.component.css\"],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  profileForm: FormGroup;\r\n  states = nigeriaSates.map((a) => a.name);\r\n  isSubmited = false;\r\n\r\n  user = getLoggedInUser();\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private toast: ToastrService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  get f() {\r\n    return this.profileForm.controls;\r\n  }\r\n  ngOnInit(): void {\r\n    const userJson = this.user;\r\n    this.profileForm = this.fb.group({\r\n      firstname: [userJson.firstName, [Validators.required]],\r\n      lastname: [userJson.lastName, [Validators.required]],\r\n      email: [userJson.email, [Validators.required, Validators.email]],\r\n      phoneNumber: [userJson.phoneNumber, [Validators.required]],\r\n      address: [userJson.address, [Validators.required]],\r\n      country: [userJson.alpha2CountryCode, [Validators.required]],\r\n      state: [userJson.state, [Validators.required]],\r\n      city: [userJson.city, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  updateProfile() {\r\n    const ctrl = this.f;\r\n    const userProfile: IUpdateUser = {\r\n      id: this.user.id,\r\n      firstName: ctrl.firstname.value,\r\n      lastName: ctrl.lastname.value,\r\n      address: ctrl.address.value,\r\n      alpha2CountryCode: ctrl.country.value,\r\n      phoneNumber: ctrl.phoneNumber.value,\r\n      state: ctrl.state.value,\r\n      city: ctrl.state.value,\r\n      scope: this.user.scope.split(\",\"),\r\n    };\r\n    this.isSubmited = true;\r\n    this.userService.updateUser(userProfile).subscribe(\r\n      (a) => {\r\n        this.toast.success(\"profile updated\");\r\n        const userUpdate: IUser = {\r\n          id: userProfile.id,\r\n          address: userProfile.address,\r\n          alpha2CountryCode: userProfile.alpha2CountryCode,\r\n          city: userProfile.city,\r\n          email: this.user.email,\r\n          phoneNumber: userProfile.phoneNumber,\r\n          scope: this.user.scope,\r\n          state: userProfile.state,\r\n          firstName: userProfile.firstName,\r\n          lastName: userProfile.lastName,\r\n          profileImageUrl: this.user.profileImageUrl,\r\n        };\r\n        this.authService.UpdateUser(userUpdate);\r\n        this.isSubmited = false;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.isSubmited = false;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"uk-container\">\r\n  <div\r\n    class=\"uk-margin uk-padding uk-padding-top-remove uk-card uk-card-default\"\r\n  >\r\n    <form [formGroup]=\"profileForm\" (ngSubmit)=\"updateProfile()\">\r\n      <div class=\"uk-grid uk-child-width-1-2@s\">\r\n        <div>\r\n          <span\r\n            *ngIf=\"\r\n              f.firstname.invalid && (f.firstname.dirty || f.firstname.touched)\r\n            \"\r\n          >\r\n            <span class=\"uk-text-warning\" *ngIf=\"f.firstname.errors.required\">\r\n              firstname required\r\n            </span>\r\n          </span>\r\n          <mat-form-field class=\"uk-width-expand\">\r\n            <mat-label>First Name</mat-label>\r\n            <input formControlName=\"firstname\" type=\"text\" matInput />\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <span\r\n            *ngIf=\"\r\n              f.lastname.invalid && (f.lastname.dirty || f.lastname.touched)\r\n            \"\r\n          >\r\n            <span class=\"uk-text-warning\" *ngIf=\"f.lastname.errors.required\">\r\n              Lastname required\r\n            </span>\r\n          </span>\r\n          <mat-form-field class=\"uk-width-expand\">\r\n            <mat-label>Last Name</mat-label>\r\n            <input formControlName=\"lastname\" type=\"text\" matInput required />\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field class=\"uk-width-expand\">\r\n            <mat-label>Email</mat-label>\r\n            <input type=\"email\" value=\"{{ user.email }}\" matInput disabled />\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field class=\"uk-width-expand\">\r\n            <mat-label>Phone number</mat-label>\r\n            <input formControlName=\"phoneNumber\" type=\"tel\" matInput required />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"uk-grid uk-child-width-1-3@s uk-margin-remove-top\">\r\n        <div>\r\n          <mat-form-field class=\"uk-width-expand\">\r\n            <mat-label>Country</mat-label>\r\n            <mat-select formControlName=\"country\" required>\r\n              <mat-option value=\"ng\">Nigeria</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field class=\"uk-width-expand\">\r\n            <mat-label>State</mat-label>\r\n            <mat-select formControlName=\"state\" required>\r\n              <mat-option>Select</mat-option>\r\n\r\n              <mat-option\r\n                *ngFor=\"let state of states\"\r\n                value=\"{{ state.toLowerCase() }}\"\r\n                >{{ state }}</mat-option\r\n              >\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field class=\"uk-width-expand\">\r\n            <mat-label>City / town</mat-label>\r\n            <input formControlName=\"city\" type=\"text\" matInput required />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <mat-form-field class=\"uk-width-expand\">\r\n          <mat-label>Address</mat-label>\r\n          <textarea\r\n            matInput\r\n            placeholder=\"Delivery Address  ......\"\r\n            required\r\n            formControlName=\"address\"\r\n          ></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"uk-text-center\">\r\n        <button\r\n          [disabled]=\"profileForm.invalid || isSubmited\"\r\n          type=\"submit\"\r\n          class=\"uk-button uk-button-primary\"\r\n        >\r\n          <img *ngIf=\"isSubmited\" width=\"30\" src=\"assets/svg/loader-icon.svg\" />\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { IUser } from \"src/app/models/IUserModel\";\r\nimport { SellerService } from \"src/app/services/seller/seller.service\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.css\"],\r\n})\r\nexport class DashboardComponent implements OnInit, OnDestroy {\r\n  isSellerApproved: boolean = false;\r\n  routeData$: Subscription;\r\n  switching: string;\r\n  approved = this.sellerS.sellerRegisterationFormStatus.approved;\r\n  pending = this.sellerS.sellerRegisterationFormStatus.pending;\r\n  loggedInUser: IUser;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sellerS: SellerService\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.routeData$ = this.route.data.subscribe((res) => {\r\n      this.switching = res.data;\r\n    });\r\n    this.loggedInUser = this.sellerS.loggedInUser;\r\n  }\r\n  modalStatus(d: any) {\r\n    if (d.isModalClose) {\r\n      if (d.isFormSubmit) {\r\n        this.switching = \"pending\";\r\n      } else {\r\n        this.router.navigate([\"/\"]);\r\n      }\r\n    }\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.routeData$.unsubscribe();\r\n  }\r\n}\r\n","<ng-container [ngSwitch]=\"switching\">\r\n  <ng-container *ngSwitchCase=\"approved\">\r\n    <ng-container *ngTemplateOutlet=\"dashboard\"></ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngSwitchCase=\"pending\">\r\n    <ng-container *ngTemplateOutlet=\"sellerPendingStatus\"></ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngSwitchDefault>\r\n    <ng-container *ngTemplateOutlet=\"sellerForm\"></ng-container>\r\n  </ng-container>\r\n</ng-container>\r\n\r\n<ng-template #dashboard>\r\n  <div class=\"uk-container uk-container-expand\">\r\n    <div class=\"uk-grid\" uk-grid>\r\n              <!-- Menu for large or desktop screen -->\r\n      <div\r\n        class=\"uk-width-1-5@m uk-visible@m uk-padding uk-background-secondary\"\r\n      >\r\n        <ul class=\"uk-nav uk-nav-default\">\r\n          <li ckass=\"uk-nav-header\">\r\n            <a class=\"\" href=\"#\" aria-label=\"Back to Home\">\r\n              <img\r\n                src=\"https://res.cloudinary.com/dbmgmudf0/image/upload/v1667540325/rena-market/Rena-Market-Transaprent-BLK-2_2_f7z6tu.png\"\r\n                alt=\"RENA MARKET\"\r\n                width=\"140\"\r\n              />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"/seller\">\r\n              <span uk-icon=\"home\" class=\"uk-padding-small\"></span> Dashboard</a\r\n            >\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"/seller/orders\">\r\n              <span uk-icon=\"cart\" class=\"uk-padding-small\"></span> Orders</a\r\n            >\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"/seller/products\">\r\n              <span uk-icon=\"list\" class=\"uk-padding-small\"></span> Products</a\r\n            >\r\n          </li>\r\n          <li>\r\n            <a [routerLink]=\"['/sellerproduct', loggedInUser.id]\"\r\n              ><span uk-icon=\"album\" class=\"uk-padding-small\"></span> My\r\n              Shelf</a\r\n            >\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div class=\"uk-width-2-3@s uk-width-4-5@m\">\r\n        <!-- Menu for mobile screen -->\r\n        <div class=\"uk-hidden@m\">\r\n          <nav class=\"uk-navbar-container\" uk-navbar>\r\n            <div class=\"uk-navbar-left\">\r\n              <ul class=\"uk-navbar-nav\">\r\n                <li class=\"uk-active\">\r\n                  <a class=\"\" href=\"#\" aria-label=\"Back to Home\">\r\n                    <img\r\n                      src=\"https://res.cloudinary.com/dbmgmudf0/image/upload/v1667540325/rena-market/Rena-Market-Transparent-WHT-2_1_a9kqoj.png\"\r\n                      alt=\"RENA MARKET\"\r\n                      width=\"100\"\r\n                    />\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div class=\"uk-navbar-right\">\r\n              <ul class=\"uk-navbar-nav\">\r\n                <li>\r\n                  <a href=\"#\"> <span uk-navbar-toggle-icon></span></a>\r\n                  <div class=\"uk-navbar-dropdown\">\r\n                    <ul class=\"uk-nav uk-navbar-dropdown-nav\">\r\n                        <li>\r\n            <a routerLink=\"/seller\">\r\n              <span uk-icon=\"home\" class=\"uk-padding-small\"></span> Dashboard</a\r\n            >\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"/seller/orders\">\r\n              <span uk-icon=\"cart\" class=\"uk-padding-small\"></span> Orders</a\r\n            >\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"/seller/products\">\r\n              <span uk-icon=\"list\" class=\"uk-padding-small\"></span> Products</a\r\n            >\r\n          </li>\r\n          <li>\r\n            <a [routerLink]=\"['/sellerproduct', loggedInUser.id]\"\r\n              ><span uk-icon=\"album\" class=\"uk-padding-small\"></span> My\r\n              Shelf</a\r\n            >\r\n          </li>\r\n                    </ul>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div> \r\n\r\n\r\n        <div class=\"uk-margin-large-top\">\r\n          <router-outlet></router-outlet>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- <div class=\"uk-section uk-section-large\">\r\n    <div class=\"uk-container\">\r\n      <h1>Dashboard</h1>\r\n      <div class=\"uk-grid\" uk-grid>\r\n        <div class=\"uk-width-1-3@s uk-width-1-5@m\">\r\n          <ul class=\"uk-nav uk-nav-default\">\r\n            <li class=\"uk-active\"><a routerLink=\"/seller\">Dashboard</a></li>\r\n            <li><a routerLink=\"/seller/orders\">Orders</a></li>\r\n            <li><a routerLink=\"/seller/products\">Products</a></li>\r\n            <li>\r\n              <a [routerLink]=\"['/sellerproduct', loggedInUser.id]\">My Shelf</a>\r\n            </li>\r\n       \r\n          </ul>\r\n        </div>\r\n        <div class=\"uk-width-2-3@s uk-width-4-5@m\">\r\n          <router-outlet></router-outlet>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n</ng-template>\r\n\r\n<!-- popup if user is not a seller yet -->\r\n<ng-template #sellerForm>\r\n  <app-seller-registeration-form\r\n    (modalStatus)=\"modalStatus($event)\"\r\n  ></app-seller-registeration-form>\r\n</ng-template>\r\n\r\n<ng-template #sellerPendingStatus>\r\n  <div class=\"uk-text-center\" uk-grid>\r\n    <div class=\"uk-width-expand\">\r\n      <div class=\"uk-card uk-card-default uk-card-body\">\r\n        <h1>Your Registeration is {{ pending }} Approval</h1>\r\n        <h1>Please check back later</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MostSelling } from \"../../../../models/products.model\";\r\nimport { ProductsService } from \"../../../../services/products/products.service\";\r\nimport { getLoggedInUser } from \"../../../../helpers/userUtility\"\r\nimport { IUser } from \"../../../../models/IUserModel\";\r\nimport { numberWithCommas } from './../../../../helpers/number-format';\r\n\r\n@Component({\r\n  selector: \"app-most-selling-product\",\r\n  templateUrl: \"./most-selling-product.component.html\",\r\n  styleUrls: [\"./most-selling-product.component.css\"],\r\n})\r\nexport class MostSellingProductComponent implements OnInit {\r\n\r\n  numberWithCommas:Function = numberWithCommas\r\n  productDetails: MostSelling[];\r\n  user = getLoggedInUser();\r\n  \r\n  constructor( private productService: ProductsService) {}\r\n  \r\n  ngOnInit(): void {\r\n    const users = this.user;\r\n    this.productService.getMostSelling(users.id).subscribe((productDetail) => {\r\n      this.productDetails = productDetail.data;\r\n    })\r\n\r\n    \r\n  }\r\n  \r\n}\r\n","<h3 class=\"headline\">Most Selling Products</h3>\r\n<table class=\"uk-table uk-table-responsive uk-table-divider\">\r\n  <thead>\r\n    <tr>\r\n      <td></td>\r\n      <th>Product</th>\r\n      <th>Category</th>\r\n      <th>Unit Sold</th>\r\n      <th>Amount Generated</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let productDetail of productDetails\">\r\n      <td>\r\n        <img\r\n          class=\"uk-img\"\r\n          src=\"{{ productDetail.imageUrl }}\" width=\"100\" height=\"100\"\r\n        />\r\n      </td>\r\n      <td>{{ productDetail.name }}</td>\r\n      <td>{{ productDetail.category }}</td>\r\n      <td>{{ productDetail.unitSold }}</td>\r\n      <td>NGN {{ numberWithCommas(productDetail.revenue) }}</td> \r\n    </tr>\r\n    <!-- <tr>\r\n      <td>\r\n        <img overview\r\n          class=\"uk-img\"\r\n          src=\"https://source.unsplash.com/100x100/?smart watch\"\r\n        />\r\n      </td>\r\n      <td>Smart watch</td>\r\n      <td>Men Acessories</td>\r\n      <td>10</td>\r\n      <td>NGN 40,000</td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <img\r\n          class=\"uk-img\"\r\n          src=\"https://source.unsplash.com/100x100/?smart watch\"\r\n        />\r\n      </td>\r\n      <td>Smart watch</td>\r\n      <td>Men Acessories</td>\r\n      <td>10</td>\r\n      <td>NGN 40,000</td>\r\n    </tr> -->\r\n  </tbody>\r\n</table>\r\n<div class=\"uk-text-center\">\r\n  <button class=\"uk-button uk-button-default\">View More</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recommended-product-to-sell',\r\n  templateUrl: './recommended-product-to-sell.component.html',\r\n  styleUrls: ['./recommended-product-to-sell.component.css']\r\n})\r\nexport class RecommendedProductToSellComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h3 class=\"headline\">Recommended Product to Sell</h3>\r\n\r\n<div class=\"uk-text-center\">\r\n  <h1>Coming soon .....</h1>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { getLoggedInUser } from \"src/app/helpers/userUtility\";\r\nimport { OverView, OverviewApiModel } from \"src/app/models/products.model\";\r\nimport { MostSelling } from \"../../../models/products.model\";\r\nimport { ProductsService } from \"../../../services/products/products.service\";\r\n\r\n@Component({\r\n  selector: \"app-seller-home\",\r\n  templateUrl: \"./seller-home.component.html\",\r\n  styleUrls: [\"./seller-home.component.css\"],\r\n})\r\nexport class SellerHomeComponent implements OnInit {\r\n  overview: OverView;\r\n\r\n  user = getLoggedInUser();\r\n\r\n  constructor(private productService: ProductsService) {}\r\n\r\n  ngOnInit(): void {\r\n    const users = this.user;\r\n    this.productService.getProductOverview(users.id).subscribe((view) => {\r\n      this.overview = view.data;\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"overview\"  uk-grid\r\n  class=\"uk-child-width-1-4@m uk-child-width-1-2@s uk-grid-small uk-grid-match\">\r\n  <div>\r\n    <div class=\"uk-card uk-background-muted uk-card-body\">\r\n      <h3 class=\"uk-card-title\">New Orders</h3>\r\n      <span\r\n        class=\"iconify\"\r\n        data-icon=\"icons8:add-shopping-cart\"\r\n        data-inline=\"false\"\r\n        style=\"width: 50px; height: 50px\"\r\n      ></span>\r\n      <span style=\"font-size: 1rem\">{{ overview.pendingOrders }}</span>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div class=\"uk-card uk-card-primary uk-card-body\">\r\n      <h3 class=\"uk-card-title\">Total Sales</h3>\r\n      <span\r\n        class=\"iconify\"\r\n        style=\"width: 30px; height: 30px\"\r\n        data-icon=\"whh:stocks\"\r\n        data-inline=\"false\"\r\n      ></span>\r\n      &nbsp;\r\n      <span style=\"font-size: 1rem\">NGN {{ overview.revenue }}</span>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div class=\"uk-card uk-card-secondary uk-card-body\">\r\n      <h3 class=\"uk-card-title\">Products</h3>\r\n      <span\r\n        class=\"iconify\"\r\n        data-icon=\"emojione-monotone:shopping-bags\"\r\n        style=\"width: 30px; height: 30px\"\r\n        data-inline=\"false\"\r\n      ></span>\r\n      &nbsp; &nbsp;\r\n      <span style=\"font-size: 1rem\">{{ overview.totalProducts }}</span>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div class=\"uk-card uk-card-secondary uk-card-body\">\r\n      <h3 class=\"uk-card-title\">Total Orders</h3>\r\n      <span\r\n        class=\"iconify\"\r\n        data-icon=\"icons8:add-shopping-cart\"\r\n        data-inline=\"false\"\r\n        style=\"width: 50px; height: 50px\"\r\n      ></span>\r\n      <span style=\"font-size: 1rem\">{{ overview.totalOrders }}</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<app-most-selling-product\r\n  class=\"uk-margin-large-top uk-padding-large\"\r\n></app-most-selling-product>\r\n\r\n<app-recommended-product-to-sell\r\n  class=\"uk-margin-large-top uk-padding-large\"\r\n></app-recommended-product-to-sell>\r\n","import { Component, OnInit, ViewChild, ElementRef} from '@angular/core';\r\nimport { InvoiceModel } from 'src/app/models/invoice.model';\r\nimport { OrderService } from \"../../../../services/order/order.service\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { InvoiceService } from './../../../../services/invoice/invoice.service';\r\nimport { fullInvoiceStatus } from './../../../../models/invoice.model';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from './../../../../services/user/user.service';\r\nimport { IUserResponse } from './../../../../models/IUserModel';\r\nimport { getLoggedInUser } from './../../../../helpers/userUtility';\r\nimport { ToastrService } from 'src/app/services/toastr.service';\r\nimport { Order, OrderStatus} from './../../../../models/order.model';\r\nimport { OrderViewMoreComponent } from './../order-view-more/order-view-more.component';\r\nimport { UpdateDeliveryStatusComponent } from './../update-delivery-status/update-delivery-status.component';\r\nimport uikit from 'uikit';\r\nimport { formatProductOptions, formatShipmentOption } from './../../../../helpers/productOption';\r\n\r\n@Component({\r\n  selector: 'app-order-detail',\r\n  templateUrl: './order-detail.component.html',\r\n  styleUrls: ['./order-detail.component.css']\r\n})\r\nexport class OrderDetailComponent implements OnInit {\r\n  @ViewChild(OrderViewMoreComponent) orderViewMore: OrderViewMoreComponent;\r\n  @ViewChild(UpdateDeliveryStatusComponent) updateDelivery: UpdateDeliveryStatusComponent;\r\n  @ViewChild('closeUpdateStatus') closeUpdateStatus: ElementRef;\r\n  formatProductOptions:Function = formatProductOptions\r\n  formatShipmentOption:Function = formatShipmentOption\r\n  user$: Observable<IUserResponse>\r\n  filterType = fullInvoiceStatus;\r\n  loginUser = getLoggedInUser();\r\n  invoice: InvoiceModel;\r\n  total: number;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private invoiceService: InvoiceService,\r\n    private userService: UserService,\r\n    private orderService: OrderService,\r\n    private toast: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    let id = this.route.snapshot.paramMap.get(\"id\")\r\n    let userId = this.route.snapshot.paramMap.get(\"user_id\")\r\n    this.invoiceService.getById(id).subscribe((d) => {\r\n      this.invoice = d.data\r\n      this.total = 0\r\n      this.invoice.orders.forEach((a) => {\r\n        this.total += a.total\r\n      });\r\n      this.user$ = this.userService.getUserById(userId)\r\n    });\r\n  }\r\n\r\n  setViewMore(order:Order):void{\r\n    this.orderViewMore.setOrder({order})\r\n  }\r\n\r\n  setOrderId(orderId:number,status:string):void{\r\n    this.updateDelivery.type = status\r\n    this.updateDelivery.setOrderId({orderId,status})\r\n  }\r\n\r\n  closeUpdateStatusModal():void{\r\n    this.closeUpdateStatus.nativeElement.click()\r\n  }\r\n\r\n  isUpdatable(status:string):boolean{\r\n    const blackList:string[] = ['pending','canceled']\r\n    return !blackList.includes(status)\r\n  }\r\n\r\n  updateLocation(orderId:string):void{\r\n    uikit.modal.prompt(\"Enter current location \", '')\r\n    .then(\r\n      (location)=>{\r\n        if(String(location) !== ''){\r\n          if(location !== null){\r\n            this.orderService.UpdateStatus(\r\n              orderId, {itemLocationInfo:String(location)} as OrderStatus\r\n            )\r\n            .subscribe((o)=>{\r\n              this.toast.success(\"Location updated successfully\")\r\n            })\r\n          }\r\n        }else{\r\n          this.toast.error(\"Update required location\")\r\n        }\r\n      },()=>{}\r\n    )\r\n  }\r\n\r\n  canCancel(status:string):boolean{\r\n    return status !== 'paid'\r\n  }\r\n}\r\n","<div class=\"uk-card uk-card-default uk-card-body uk-margin-small\">\r\n    <h1>ORDER INVOICE DETAIL</h1>\r\n    <div class=\"uk-grid uk-child-width-1-2@s\" *ngIf=\"invoice\">\r\n      <div *ngIf=\"user$ | async as user\">\r\n      <!-- <div> -->\r\n        <p>\r\n          Invoice No <span>#{{ invoice.id }}</span>\r\n        </p>\r\n        <p>Date <span>21 feb, 2020</span></p>\r\n        <h3>Customer Information</h3>\r\n        <p>\r\n          Name : <span>{{ user.data.firstName + \" \" + user.data.lastName }}</span>\r\n        </p>\r\n        <p>\r\n          Phone : <span>{{ user.data.phoneNumber }}</span>\r\n        </p>\r\n        <h3>Billing Address</h3>\r\n        <p>\r\n          Country : <span>{{ invoice.country }}</span>\r\n        </p>\r\n        <p>\r\n          State : <span>{{ invoice.state }}</span>\r\n        </p>\r\n        <p>\r\n          Address : <span>{{ invoice.billingAddress }}</span>\r\n        </p>\r\n        <h3>Additional Infomation</h3>\r\n        <p></p>\r\n      </div>\r\n      <div>\r\n        <h3>Status: {{ invoice.status }}</h3>\r\n        <h3>Reference No: {{ invoice.transReferenceNo }}</h3>\r\n        <!--<button\r\n          *ngIf=\"\r\n            invoice.status.toLocaleLowerCase() !=\r\n            filterType.paid.toLocaleLowerCase()\r\n          \"\r\n          class=\"uk-button uk-button-default backgound-dark-green uk-button-small uk-align-right uk-text-right\"\r\n          (click)=\"pay(invoice.id)\"\r\n        >\r\n          Pay now\r\n        </button>-->\r\n        <h3>Cost Summary</h3>\r\n        <!-- <p>Total Item Cost: NGN 40,09902</p> -->\r\n        <!-- <p>Shipping cost: NGN 3,000</p>\r\n        <p>Discount: NGN 2000</p> -->\r\n        <p>\r\n          <b>Total: NGN {{ total.toLocaleString() }}</b>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"uk-margin-top\" *ngIf=\"invoice\">\r\n      <hr />\r\n      <h1 class=\"uk-text-bold\">ITEMS</h1>\r\n      <div class=\"\">\r\n        <table class=\"uk-table uk-table-small uk-table-responsive uk-table-divider uk-table-divider\">\r\n          <thead>\r\n            <tr>\r\n              <th>Order No</th>\r\n              <th>Item</th>\r\n              <th>Name</th>\r\n              <th>Option</th>\r\n              <th>Shipment</th>\r\n              <th>Unit</th>\r\n              <th>Cost</th>\r\n              <th>Payment Option</th>\r\n              <th>Status</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let order of invoice.orders\">\r\n                <td>{{ order.id }}</td>\r\n                <td>\r\n                    <div>\r\n                      <img class=\"uk-img\" width=\"100\" src=\"{{ order.product.imageUrl }}\"/>\r\n                    </div>\r\n                </td>\r\n                <td>{{ order.product.name }}</td>\r\n                <td [innerHtml]=\"formatProductOptions(order.options)\"></td>\r\n                <td>{{formatShipmentOption(order.shipments)}}</td>\r\n                <td>{{ order.unit }}</td>\r\n                <td>NGN {{ order.price.toLocaleString() }}</td>\r\n                <td>{{ order.paymentOption }}</td>\r\n                <td>{{ order.status }}</td>\r\n                <td>\r\n                    <div class=\"uk-inline\">\r\n                        <button class=\"uk-button uk-button-default\" type=\"button\">\r\n                            Action\r\n                        </button>\r\n                        <div uk-dropdown=\"mode: click\" style=\"z-index:99\">\r\n                            <ul class=\"uk-list uk-list-divider\" style=\"z-index:99\">\r\n                                <li>\r\n                                    <a uk-toggle=\"target: #modal-view-more\" \r\n                                        (click)=\"setViewMore(order)\">\r\n                                        View More\r\n                                    </a>\r\n                                </li>\r\n                                <li *ngIf=\"isUpdatable(order.status)\">\r\n                                    <a uk-toggle=\"target: #modal-update-delivery-status\"\r\n                                        (click)=\"setOrderId(order.id,order.status)\">\r\n                                        Update Delivery Status\r\n                                    </a>\r\n                                </li>\r\n                                <li *ngIf=\"order.status === 'intransit'\">\r\n                                  <a (click)=\"updateLocation(order.id)\">Update Location</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n<div>\r\n\r\n<!-- This is the modal with the outside close button -->\r\n<div id=\"modal-view-more\" uk-modal=\"bg-close: false\">\r\n  <div class=\"uk-modal-dialog uk-modal-body\">\r\n    <button class=\"uk-modal-close-outside\" type=\"button\" uk-close></button>\r\n    <app-order-view-more></app-order-view-more>\r\n  </div>\r\n</div>\r\n\r\n<!-- This is the modal with the outside close button -->\r\n<div id=\"modal-update-delivery-status\" uk-modal=\"bg-close: false\">\r\n  <div class=\"uk-modal-dialog uk-modal-body\">\r\n    <button class=\"uk-modal-close-outside\" type=\"button\" uk-close #closeUpdateStatus>\r\n    </button>\r\n    <app-update-delivery-status (closed)=\"closeUpdateStatusModal()\">\r\n    </app-update-delivery-status>\r\n  </div>\r\n</div>","import { Component, OnInit} from '@angular/core';\r\nimport { getLoggedInUser } from \"src/app/helpers/userUtility\";\r\nimport { OrderService } from \"../../../../services/order/order.service\";\r\nimport { OrderDetail } from \"../../../../models/order.model\";\r\nimport { UserService } from './../../../../services/user/user.service';\r\nimport { fullInvoiceStatus } from './../../../../models/invoice.model';\r\nimport { formatDate } from './../../../../helpers/date-format';\r\nimport { numberWithCommas } from './../../../../helpers/number-format';\r\n\r\n@Component({\r\n  selector: 'app-order-list',\r\n  templateUrl: './order-list.component.html',\r\n  styleUrls: ['./order-list.component.css']\r\n})\r\nexport class OrderListComponent implements OnInit {\r\n  numberWithCommas:Function = numberWithCommas\r\n  status:string;\r\n  user = getLoggedInUser();\r\n  public orderList:OrderDetail[]; \r\n  pageNumber: number;\r\n  totalItemCount: number;\r\n  maximumItem: number = 8;\r\n  defaultPage:number = 1;\r\n\r\n  filterType = fullInvoiceStatus;\r\n  formatDate:Function;\r\n\r\n  constructor(public orderService:OrderService,public userService:UserService) {\r\n    this.formatDate = formatDate;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.status = this.filterType.Paid;\r\n    this.fetchCurrentOrders(this.defaultPage);\r\n  }\r\n\r\n  filter(status:string):void{\r\n    this.status = status;\r\n    this.fetchCurrentOrders(this.defaultPage);\r\n  }\r\n\r\n  fetchCurrentOrders(pageNumber:number){\r\n    this.orderService.getOrdersByStatus(this.user.id,this.status,pageNumber,this.maximumItem)\r\n      .subscribe((o)=>{\r\n        let oList:OrderDetail[] = o.data.data\r\n        this.orderList = oList.map((oi)=>{\r\n          oi.user$ = this.userService.getUserById(oi.userId)\r\n          return oi\r\n        });\r\n        this.pageNumber = o.data.pager.pageNumber;\r\n        this.totalItemCount = o.data.pager.totalItemCount;\r\n      },error => console.error(error));\r\n  }\r\n}\r\n","<div class=\"uk-card uk-card-default uk-card-body uk-margin-small\">\r\n    <h1>Orders</h1>\r\n    <ul class=\"uk-tab-bottom\" data-uk-tab=\"media: @s\">\r\n      <li class=\"uk-active\"><a (click)=\"filter(filterType.Paid)\">Paid</a></li>\r\n      <li><a (click)=\"filter(filterType.Confirmed)\">Confirmed</a></li>\r\n      <li><a (click)=\"filter(filterType.InTransit)\">InTransit</a></li>\r\n      <li><a (click)=\"filter(filterType.Refunded)\">Refunded</a></li>\r\n      <li><a (click)=\"filter(filterType.Deliver)\">Deliver</a></li>\r\n      <li><a (click)=\"filter(filterType.Canceled)\">Canceled</a></li>\r\n      <li><a (click)=\"filter(filterType.Pending)\">Pending Transactions</a></li>\r\n    </ul>\r\n    <div>\r\n      \r\n      <div class=\"uk-overflow-auto\">\r\n        <table class=\"uk-table uk-table-small uk-table-responsive uk-table-divider uk-table-divider\">\r\n          <thead>\r\n            <tr>\r\n              <th>invoice No</th>\r\n              <th>date</th>\r\n              <th>customer</th>\r\n              <th>items</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tbody *ngIf=\"orderList\">\r\n            <tr *ngFor=\"let invoice of orderList | paginate: { itemsPerPage: maximumItem, currentPage: pageNumber, totalItems:totalItemCount}\">\r\n              <td>#{{ invoice.id }}</td>\r\n              <td>{{ formatDate(invoice.createdOn) }}</td>\r\n              <td *ngIf=\"invoice.user$ | async as user\">\r\n                {{ user.data.firstName + \" \" + user.data.lastName }}\r\n              </td>\r\n              <td>\r\n                <span class=\"uk-badge backgound-dark-green\">{{invoice.orders.length}}</span>\r\n                <span> NGN {{numberWithCommas(orderService.getPrice(invoice.orders))}} </span>\r\n              </td>\r\n              <td>\r\n                <button [routerLink]=\"['detail', invoice.id,invoice.userId]\"\r\n                  class=\"uk-button uk-button-small\">\r\n                  view\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div class=\"uk-flex uk-flex-center\">\r\n            <pagination-controls (pageChange)=\"fetchCurrentOrders($event)\"></pagination-controls>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Order } from './../../../../models/order.model';\r\nimport { formatDate } from './../../../../helpers/date-format';\r\nimport { numberWithCommas } from './../../../../helpers/number-format';\r\n\r\n@Component({\r\n  selector: 'app-order-view-more',\r\n  templateUrl: './order-view-more.component.html',\r\n  styleUrls: ['./order-view-more.component.css']\r\n})\r\nexport class OrderViewMoreComponent implements OnInit {\r\n  numberWithCommas:Function = numberWithCommas\r\n  formatDate:Function;\r\n  order:Order;\r\n\r\n  constructor() {\r\n    this.formatDate = formatDate;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  setOrder({order}):void{\r\n    this.order = order;\r\n  }\r\n\r\n}\r\n","<div class=\"uk-card-body uk-padding-small\">\r\n    <div class=\"dashboard-title uk-margin-bottom\">Order Detail</div>\r\n    <table class=\"uk-table uk-table-responsive uk-table-divider\" *ngIf=\"order\">\r\n        <tbody>\r\n            <tr>\r\n                <td>Name: </td><td>{{order.product.name}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Unit: </td><td>{{order.unit}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Price: </td><td>NGN {{numberWithCommas(order.price)}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Discount: </td><td>{{order.discount}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Total: </td><td>NGN {{numberWithCommas(order.total)}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Status: </td><td>{{order.status}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Invoice Id: </td><td>{{order.invoiceId}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Product Id: </td><td>{{order.productId}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Created On: </td><td>{{formatDate(order.createdOn)}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-seller-orders',\r\n  templateUrl: './seller-orders.component.html',\r\n  styleUrls: ['./seller-orders.component.css']\r\n})\r\nexport class SellerOrdersComponent implements OnInit {\r\n  constructor() { }\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"uk-grid uk-child-width-1-1 uk-margin-small-left uk-margin-remove-left@m\" >\r\n    <router-outlet></router-outlet>\r\n</div>","import { Component, OnInit, Output, EventEmitter} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { OrderService } from './../../../../services/order/order.service';\r\nimport { OrderStatus } from \"./../../../../models/order.model\"\r\n\r\nimport { ToastrService } from 'src/app/services/toastr.service';\r\nimport uikit from 'uikit';\r\n\r\n@Component({\r\n  selector: 'app-update-delivery-status',\r\n  templateUrl: './update-delivery-status.component.html',\r\n  styleUrls: ['./update-delivery-status.component.css','../../../../shared/css/spinner.css']\r\n})\r\nexport class UpdateDeliveryStatusComponent implements OnInit {\r\n  type:string = \"\";\r\n  @Output() closed = new EventEmitter()\r\n  currentOrderId:string;\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toast: ToastrService,\r\n    private orderService:OrderService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      status: [\"\", [Validators.required]],\r\n      loading:false,\r\n    });\r\n  }\r\n\r\n  public setOrderId({orderId,status}):void{\r\n    this.form.get(\"status\").setValue(status.toLowerCase())\r\n    this.currentOrderId = orderId;\r\n  }\r\n\r\n  showPaid():boolean{\r\n    const tabs:string[] = [];\r\n    return tabs.includes(this.type.toLowerCase())\r\n  }\r\n\r\n  showConfirmed():boolean{\r\n    const tabs:string[] = ['paid'];\r\n    return tabs.includes(this.type.toLowerCase())\r\n  }\r\n\r\n  showCanceled():boolean{\r\n    const tabs:string[] = ['paid','confirmed','intransit']\r\n    return tabs.includes(this.type.toLowerCase())\r\n  }\r\n\r\n  showRefunded():boolean{\r\n    const tabs:string[] = [];\r\n    return tabs.includes(this.type.toLowerCase())\r\n  }\r\n\r\n  showDeliver():boolean{\r\n    const tabs:string[] = [];\r\n    return tabs.includes(this.type.toLowerCase())\r\n  }\r\n\r\n  showIntransit():boolean{\r\n    const tabs:string[] = ['confirmed'];\r\n    return tabs.includes(this.type.toLowerCase())\r\n  }\r\n\r\n  showPending():boolean{\r\n    const tabs:string[] = [];\r\n    return tabs.includes(this.type.toLowerCase())\r\n  }\r\n\r\n  onSubmit():void{\r\n    if (this.form.invalid) {\r\n      console.log(this.form.errors)\r\n      return;\r\n    }\r\n    const status = this.form.get(\"status\").value\r\n    this.form.get(\"loading\").setValue(true)\r\n    if(status == 'canceled'){\r\n      uikit.modal.prompt(\"Please briefly describe your reason for canceling \", '')\r\n      .then((reason)=>{\r\n        if(String(reason) !== ''){\r\n          if(reason !== null){\r\n            this.orderService.UpdateStatus(\r\n              this.currentOrderId, {status,reason:String(reason)} as OrderStatus\r\n            )\r\n            .subscribe((o)=>{\r\n              this.form.get(\"loading\").setValue(false)\r\n              if(this.type.toLowerCase() === 'intransit'){\r\n                this.toast.warining(\"This action will reduce your trust quality on the platform !!!\")\r\n              }\r\n              this.toast.success(\"Status updated successfully\")\r\n              this.closed.emit()\r\n            })\r\n          }else{this.form.get(\"loading\").setValue(false)}\r\n        }else{\r\n          this.toast.error(\"Order canceling required reason\")\r\n          this.form.get(\"loading\").setValue(false)\r\n        }\r\n      },()=>{this.form.get(\"loading\").setValue(false)})\r\n    }else{\r\n    this.orderService.UpdateStatus(this.currentOrderId,{status} as OrderStatus)\r\n      .subscribe((o)=>{\r\n        this.form.get(\"loading\").setValue(false)\r\n        this.toast.success(\"Status updated successfully\")\r\n        this.closed.emit()\r\n      })\r\n    }\r\n  }\r\n}\r\n","<div class=\"dashboard-title uk-margin-bottom\">Update Delivery Status</div>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n  <mat-form-field class=\"uk-width-expand\">\r\n    <mat-label>Status</mat-label>\r\n    <mat-select formControlName=\"status\" required>\r\n      <mat-option value=\"paid\" *ngIf=\"showPaid()\">Paid</mat-option>\r\n      <mat-option value=\"confirmed\" *ngIf=\"showConfirmed()\">Confirmed</mat-option>\r\n      <mat-option value=\"canceled\" *ngIf=\"showCanceled()\">Canceled</mat-option>\r\n      <mat-option value=\"refunded\" *ngIf=\"showRefunded()\">Refunded</mat-option>\r\n      <mat-option value=\"deliver\" *ngIf=\"showDeliver()\">Deliver</mat-option>\r\n      <mat-option value=\"intransit\" *ngIf=\"showIntransit()\">Intransit</mat-option>\r\n      <mat-option value=\"pending\" *ngIf=\"showPending()\">Pending</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <button mat-raised-button class=\"btn-default\" type=\"submit\" \r\n    [class.spinner]=\"form.get('loading').value\" \r\n    [disabled]=\"form.get('loading').value\">\r\n    Update\r\n  </button>\r\n</form>","import {\r\n  CreateProductResponse,\r\n} from \"./../../../../models/products.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { FormBuilder, FormGroup, FormArray, Validators } from \"@angular/forms\";\r\nimport { Component, OnInit, EventEmitter, Output } from \"@angular/core\";\r\nimport { CreateProductModel } from \"../../../../models/products.model\";\r\nimport { nigeriaSates } from \"src/app/data/nigeriastates\";\r\nimport { ProductsService } from \"../../../../services/products/products.service\";\r\nimport { CatgoryService } from \"../../../../services/category/catgory.service\";\r\nimport { ToastrService } from \"./../../../../services/toastr.service\";\r\nimport { getLoggedInUser } from \"src/app/helpers/userUtility\";\r\nimport { CategoryResponse } from \"./../../../../models/CategoryModels\";\r\n\r\ndeclare var cloudinary: any;\r\n@Component({\r\n  selector: \"app-add-product\",\r\n  templateUrl: \"./add-product.component.html\",\r\n  styleUrls: [\"./add-product.component.css\",\"../../../../shared/css/spinner.css\"],\r\n})\r\nexport class AddProductComponent implements OnInit {\r\n  \r\n  @Output() closed = new EventEmitter();\r\n  @Output() added = new EventEmitter();\r\n  errors: any[];\r\n  errorMessage: string;\r\n  form: FormGroup;\r\n  cproduct: CreateProductResponse;\r\n  categories$: Observable<CategoryResponse>;\r\n  loading: boolean = false;\r\n  uploadWidget: any;\r\n  images = [];\r\n  states: string[] = nigeriaSates.map((a) => a.name);\r\n  user = getLoggedInUser();\r\n\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    private toast: ToastrService,\r\n    private productService: ProductsService, \r\n    private catgoryService: CatgoryService\r\n  ){this.formInit()}\r\n  get f() {return this.form.controls;}\r\n\r\n  ngOnInit(): void {\r\n    this.categories$ = this.catgoryService.GetCategory();\r\n    this.uploadWidget = cloudinary.createUploadWidget(\r\n      {\r\n        cloudName: environment.cloudinaryName,\r\n        uploadPreset: environment.cloudinaryUploadPerset,\r\n        clientAllowedFormats: ['jpeg','jpg','png','gif'],\r\n      },\r\n      (error, result) => {\r\n        if (!error && result && result.event === \"success\") {\r\n          // console.log(\"Done! Here is the image info: \", result.info);\r\n          this.images.push(result.info.secure_url);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  formInit():void{\r\n    this.form = this.fb.group({\r\n      name: [\"\", [Validators.required]],\r\n      description: [\"\", [Validators.required]],\r\n      price: [0.0, [Validators.required]],\r\n      previousPrice: [0.0],\r\n      category: [\"\", [Validators.required]],\r\n      unit: [0, [Validators.required]],\r\n      shipments: this.fb.array([this.createShipment()]),\r\n      options: this.fb.array([]),\r\n      paymentOption: this.fb.array(this.setPaymentOption()),\r\n    });\r\n  }\r\n\r\n  paymentOption():FormArray{\r\n    return this.form.get('paymentOption') as FormArray;\r\n  }\r\n\r\n  setPaymentOption():FormGroup[]{\r\n    return [\r\n      this.fb.group({ method: [true, []], value:\"online\", label:\"Pay Online\" }),\r\n      this.fb.group({ method: [false, []], value:\"ondelivery\", label:\"Pay On Delivery\" }),\r\n    ]\r\n  }\r\n\r\n  shipments():FormArray{\r\n    return this.form.get('shipments') as FormArray;\r\n  }\r\n\r\n  createShipment():FormGroup{\r\n    return this.fb.group({\r\n      countryCode: [\"ng\",[Validators.required]],\r\n      state: [\"all\",[Validators.required]],\r\n      city: [\"all\",[Validators.required]],\r\n      cost: [0.0,[Validators.required]]\r\n    });\r\n  }\r\n\r\n  addShipment():void{ \r\n    this.shipments().push(this.createShipment());\r\n  }\r\n\r\n  removeShipment(index:number):void{\r\n    this.shipments().removeAt(index);\r\n  }\r\n\r\n  options():FormArray{\r\n    return this.form.get('options') as FormArray;\r\n  }\r\n\r\n  createOptions():FormGroup{\r\n    return this.fb.group({\r\n      title: [\"\",[Validators.required]],\r\n      shortDescription: [\"\",[]], \r\n      value: [\"\",[Validators.required]],\r\n      cost: [0.0,[Validators.required]]\r\n    });\r\n  }\r\n\r\n  addProductOption():void{\r\n    this.options().push(this.createOptions());\r\n  }\r\n\r\n  removeOption(index:number):void{\r\n    this.options().removeAt(index);\r\n  }\r\n  \r\n  upload():void{\r\n    this.uploadWidget.open();\r\n  }\r\n\r\n  removeImage(image_url):void{\r\n    this.images = this.images.filter(\r\n      (a) => a !== image_url\r\n    );\r\n  }\r\n  \r\n  onSubmit():void{\r\n    this.errors = []\r\n    this.errorMessage = \"\"\r\n    if (this.form.invalid) {\r\n      console.log(this.form.errors)\r\n      return\r\n    }\r\n    if(this.images.length < 1){\r\n      this.toast.error(\"product image is required\")\r\n      return\r\n    }\r\n    this.loading = true\r\n    const data: CreateProductModel  =  this.getProductData()\r\n    \r\n    this.productService.createProduct(data).subscribe( \r\n      (a) => {\r\n        this.images = []\r\n        this.added.emit(a.data)\r\n        this.toast.success(\"product created successfully\")\r\n        this.loading = false\r\n        this.closed.emit()\r\n      },\r\n      (error) => {\r\n        // this.errors = error.error.errors.map((a) => a.description);\r\n        console.log(\"error\", error)\r\n      }\r\n     )\r\n  }\r\n\r\n  flatPaymentOption(option:{method:boolean,value:string,label:string}[]){\r\n    return option.filter(opt=>opt.method).map(opt=>opt.value).join(',')\r\n  }\r\n\r\n  getProductData():CreateProductModel{\r\n    return {\r\n      name: this.form.get(\"name\").value,\r\n      price: this.form.get(\"price\").value,\r\n      previousPrice: this.form.get(\"previousPrice\").value,\r\n      description: this.form.get(\"description\").value,\r\n      unit: this.form.get(\"unit\").value,\r\n      imageUrl: this.images[0],\r\n      imageUrls: this.images,\r\n      shipments: this.form.get(\"shipments\").value,\r\n      options: this.form.get(\"options\").value,\r\n      categoryId: this.form.get('category').value,\r\n      userId: this.user.id,\r\n      paymentOptions:this.flatPaymentOption(this.form.get(\"paymentOption\").value)\r\n    } as CreateProductModel\r\n  }\r\n}\r\n","<div class=\"dashboard-title uk-margin-bottom\">Add New Product</div>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n  <mat-form-field class=\"uk-width-expand\">\r\n    <mat-label>\r\n      Product name\r\n      <span *ngIf=\"f.name.invalid && (f.name.dirty || f.name.touched)\">\r\n        <span\r\n          class=\"uk-text-warning\"\r\n          style=\"font-size: smaller\"\r\n          *ngIf=\"f.name.errors.required\"\r\n        >\r\n          Product Name required <br\r\n        /></span>\r\n      </span>\r\n    </mat-label>\r\n\r\n    <input\r\n      type=\"text\"\r\n      formControlName=\"name\"\r\n      matInput\r\n      placeholder=\"eg Samsung s11\"\r\n      formControlName=\"name\"\r\n      required\r\n    />\r\n  </mat-form-field>\r\n  <mat-form-field class=\"uk-width-expand\">\r\n    <mat-label\r\n      >Description\r\n\r\n      <span\r\n        *ngIf=\"\r\n          f.description.invalid &&\r\n          (f.description.dirty || f.description.touched)\r\n        \"\r\n      >\r\n        <span\r\n          class=\"uk-text-warning\"\r\n          style=\"font-size: smaller\"\r\n          *ngIf=\"f.description.errors.required\"\r\n        >\r\n          Product Description required <br\r\n        /></span>\r\n      </span>\r\n    </mat-label>\r\n    <textarea\r\n      matInput\r\n      placeholder=\"Ex. 100 Main St\"\r\n      formControlName=\"description\"\r\n      required\r\n    >\r\n   provide full detail of this product</textarea\r\n    >\r\n  </mat-form-field>\r\n  <mat-form-field\r\n    class=\"uk-width-expand\"\r\n    *ngIf=\"categories$ | async as categories\"\r\n  >\r\n    <mat-label>Category</mat-label>\r\n    <mat-select formControlName=\"category\" required>\r\n      <mat-option>Select</mat-option>\r\n      <mat-option\r\n        *ngFor=\"let category of categories.data\"\r\n        value=\"{{ category.id }}\"\r\n      >\r\n        {{ category.name }}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <div class=\"uk-grid-small uk-grid uk-child-width-1-3@s\">\r\n    <mat-form-field class=\"\">\r\n      <mat-label\r\n        >Price\r\n        <span *ngIf=\"f.price.invalid && (f.price.dirty || f.price.touched)\">\r\n          <span\r\n            class=\"uk-text-warning\"\r\n            style=\"font-size: smaller\"\r\n            *ngIf=\"f.price.errors.required\"\r\n          >\r\n            Price required <br\r\n          /></span>\r\n        </span>\r\n      </mat-label>\r\n\r\n      <input\r\n        type=\"number\"\r\n        matInput\r\n        formControlName=\"price\"\r\n        placeholder=\"eg 1000\"\r\n        formControlName=\"price\"\r\n        required\r\n      />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"\">\r\n      <mat-label>Previous Price</mat-label>\r\n      <input\r\n        type=\"number\"\r\n        formControlName=\"previousPrice\"\r\n        matInput\r\n        placeholder=\"eg 2000\"\r\n        formControlName=\"previousPrice\"\r\n      />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"\">\r\n      <mat-label\r\n        >Avaliable Unit\r\n        <span *ngIf=\"f.unit.invalid && (f.unit.dirty || f.unit.touched)\">\r\n          <span\r\n            class=\"uk-text-warning\"\r\n            style=\"font-size: smaller\"\r\n            *ngIf=\"f.unit.errors.required\"\r\n          >\r\n            unit required <br\r\n          /></span>\r\n        </span>\r\n      </mat-label>\r\n      <input\r\n        type=\"number\"\r\n        formControlName=\"unit\"\r\n        matInput\r\n        placeholder=\"200\"\r\n        formControlName=\"unit\"\r\n        required\r\n      />\r\n    </mat-form-field>\r\n    <!-- <mat-form-field class=\"uk-width-1-2@s\">\r\n    <mat-label>Default Shipping cost</mat-label>\r\n    <input type=\"number\" matInput placeholder=\"200\" required />\r\n  </mat-form-field> -->\r\n  </div>\r\n  <mat-label>Payment type *</mat-label>\r\n  <div class=\"uk-grid-small uk-grid uk-child-width-1-2@s\">\r\n    <div *ngFor=\"let paymentOpt of paymentOption()['controls']; let l = index\"\r\n      formArrayName=\"paymentOption\">\r\n      <div [formGroupName]=\"l\">\r\n        <mat-checkbox formControlName=\"method\">\r\n          {{paymentOpt.get('label').value}}\r\n        </mat-checkbox>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <hr />\r\n  <div\r\n    formArrayName=\"shipments\"\r\n    *ngFor=\"let shipment of shipments()['controls']; let i = index\"\r\n  >\r\n    <div class=\"uk-grid-small uk-grid uk-child-width-1-4@s\" [formGroupName]=\"i\">\r\n      <mat-form-field class=\"\">\r\n        <mat-label>State</mat-label>\r\n        <mat-select formControlName=\"state\" required>\r\n          <mat-option>Select</mat-option>\r\n          <mat-option value=\"all\">All</mat-option>\r\n          <mat-option\r\n            *ngFor=\"let state of states\"\r\n            value=\"{{ state.toLowerCase() }}\"\r\n            >{{ state }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"\">\r\n        <mat-label>City/Region/Area </mat-label>\r\n        <input\r\n          type=\"text\"\r\n          matInput\r\n          placeholder=\"all, lagos, ikeja, ajah\"\r\n          formControlName=\"city\"\r\n          required\r\n        />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"\">\r\n        <mat-label>Cost </mat-label>\r\n        <input\r\n          type=\"number\"\r\n          matInput\r\n          placeholder=\"200\"\r\n          formControlName=\"cost\"\r\n          required\r\n        />\r\n      </mat-form-field>\r\n      <div>\r\n        <button\r\n          mat-raised-button\r\n          (click)=\"removeShipment(i)\"\r\n          color=\"warn\"\r\n          type=\"button\"\r\n        >\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- <mat-form-field class=\"uk-width-1-2@s\">\r\n      <mat-label>Default Shipping cost</mat-label>\r\n      <input type=\"number\" matInput placeholder=\"200\" required />\r\n    </mat-form-field> -->\r\n    </div>\r\n  </div>\r\n\r\n  <button\r\n    mat-raised-button\r\n    matTooltip=\"Add Location Where you can provide shipping\"\r\n    aria-label=\"Add Shipping Cost\"\r\n    color=\"primary\"\r\n    (click)=\"addShipment()\"\r\n    class=\"uk-margin\"\r\n    type=\"button\"\r\n  >\r\n    Add Shipping Cost\r\n  </button>\r\n  <hr />\r\n\r\n  <div\r\n    formArrayName=\"options\"\r\n    *ngFor=\"let option of options()['controls']; let j = index\"\r\n  >\r\n    <div class=\"uk-grid-small uk-grid uk-child-width-1-3@s\" [formGroupName]=\"j\">\r\n      <mat-form-field class=\"\">\r\n        <mat-label>Title/Name</mat-label>\r\n        <input\r\n          type=\"text\"\r\n          matTooltip=\"Provide Product Option Title such as Color or size, for customer to select option\"\r\n          matInput\r\n          placeholder=\"eg color, size \"\r\n          formControlName=\"title\"\r\n          required\r\n        />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"\">\r\n        <mat-label>Value</mat-label>\r\n        <input\r\n          type=\"text\"\r\n          matInput\r\n          matTooltip=\"Enter Value for the title , eg XXL for size\"\r\n          placeholder=\"eg Select color value such red, yellow, blue\"\r\n          formControlName=\"value\"\r\n          required\r\n        />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"\">\r\n        <mat-label>Cost</mat-label>\r\n        <input\r\n          type=\"number\"\r\n          matInput\r\n          matTooltip=\"Enter cost for this option\"\r\n          placeholder=\"eg Enter cost for this option\"\r\n          formControlName=\"cost\"\r\n        />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"\">\r\n        <mat-label>Short Description</mat-label>\r\n        <textarea\r\n          type=\"text\"\r\n          matInput\r\n          placeholder=\"provide short description  of this option\"\r\n          formControlName=\"shortDescription\"\r\n        ></textarea>\r\n      </mat-form-field>\r\n\r\n      <div>\r\n        <button\r\n          mat-raised-button\r\n          (click)=\"removeOption(j)\"\r\n          color=\"warn\"\r\n          class=\"uk-margin\"\r\n          type=\"button\"\r\n        >\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <button\r\n    mat-raised-button\r\n    matTooltip=\"Add option related to product such as Size, Color, Shape and others\"\r\n    aria-label=\"Add Item Option\"\r\n    color=\"accent\"\r\n    (click)=\"addProductOption()\"\r\n    class=\"uk-margin\"\r\n    type=\"button\"\r\n  >\r\n    Add Options\r\n  </button>\r\n  <div class=\"js-upload uk-placeholder uk-text-center\" (click)=\"upload()\">\r\n    <span uk-icon=\"icon: cloud-upload\"></span>\r\n    <span class=\"uk-text-middle\">Add Photos of Product</span>\r\n    <div uk-form-custom>\r\n      <!-- <input type=\"file\" multiple /> -->\r\n      &nbsp;\r\n      <span class=\"uk-link\">Click to add</span>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"uk-margin uk-child-width-1-2 uk-child-width-1-3@s uk-child-width-1-4@m uk-grid-small uk-grid\"\r\n  >\r\n    <div class=\"uk-margin-small-bottom\" *ngFor=\"let image of images\">\r\n      <div class=\"uk-inline uk-dark\">\r\n        <img style=\"max-height: 90px\" src=\"{{ image }}\" alt=\"{{ image }}\" />\r\n        <div\r\n          class=\"uk-position-center uk-overlay uk-overlay-primary\"\r\n          style=\"padding: 5px; border-radius: 20px\"\r\n          (click)=\"removeImage(image)\"\r\n        >\r\n          <span\r\n            class=\"iconify\"\r\n            data-icon=\"ri:delete-bin-6-line\"\r\n            data-inline=\"false\"\r\n            style=\"color: rgb(177, 55, 55)\"\r\n          >\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <button mat-raised-button type=\"submit\" class=\"btn-default\" \r\n    [class.spinner]=\"loading\" [disabled]=\"loading\">\r\n    Add Product\r\n  </button>\r\n</form>\r\n","import {\r\n  CreateProductOption,\r\n  CreateShipmentModel,\r\n  EditProductModel,\r\n} from \"./../../../../models/products.model\";\r\nimport { CreateProductModel } from \"../../../../models/products.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { FormBuilder, FormGroup, FormArray, Validators } from \"@angular/forms\";\r\nimport { Component, OnInit, EventEmitter, Output} from \"@angular/core\";\r\nimport { nigeriaSates } from \"src/app/data/nigeriastates\";\r\nimport { ProductsService } from \"../../../../services/products/products.service\";\r\nimport { CatgoryService } from \"../../../../services/category/catgory.service\";\r\nimport { ToastrService } from \"./../../../../services/toastr.service\";\r\nimport { getLoggedInUser } from \"src/app/helpers/userUtility\";\r\nimport { CategoryResponse } from \"./../../../../models/CategoryModels\";\r\n\r\ndeclare var cloudinary: any;\r\n@Component({\r\n  selector: \"app-edit-product\",\r\n  templateUrl: \"./edit-product.component.html\",\r\n  styleUrls: [\"./edit-product.component.css\"],\r\n})\r\nexport class EditProductComponent implements OnInit{\r\n  @Output() closed = new EventEmitter();\r\n  @Output() edited = new EventEmitter();\r\n\r\n  form: FormGroup;\r\n  categories$: Observable<CategoryResponse>;\r\n  uploadWidget: any;\r\n  productId: number;\r\n  states: string[] = nigeriaSates.map((a) => a.name);\r\n  images: string[] = [];\r\n  productOptions: CreateProductOption[];\r\n  productShipments: CreateShipmentModel[];\r\n  user = getLoggedInUser();\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toast: ToastrService,\r\n    private catgoryService: CatgoryService,\r\n    private productService: ProductsService, \r\n  ) {this.formInit()}\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.categories$ = this.catgoryService.GetCategory();\r\n    this.uploadWidget = this.cloudinaryWidget();\r\n  }\r\n\r\n  cloudinaryWidget():any{\r\n    return cloudinary.createUploadWidget(\r\n      {\r\n        cloudName: environment.cloudinaryName,\r\n        uploadPreset: environment.cloudinaryUploadPerset,\r\n        clientAllowedFormats:['jpeg','jpg','png','gif'],\r\n        // resourceType: 'image',\r\n      },\r\n      (error, result) => {\r\n        if (!error && result && result.event === \"success\") {\r\n          console.log(\"Done! Here is the image info: \", result.info);\r\n          this.images.push(result.info.secure_url);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  formInit():void{\r\n    this.form = this.fb.group({\r\n      name: [\"\", [Validators.required]],\r\n      description: [\"\", [Validators.required]],\r\n      price: [0.0, [Validators.required]],\r\n      category: [\"\", [Validators.required]],\r\n      unit: [0, [Validators.required]],\r\n      previousPrice: [0.0],\r\n      paymentOption: this.fb.array(this.setPaymentOption()),\r\n    });\r\n  }\r\n\r\n  paymentOption():FormArray{\r\n    return this.form.get('paymentOption') as FormArray;\r\n  }\r\n\r\n  setPaymentOption():FormGroup[]{\r\n    return [\r\n      this.fb.group({ method: [true, []], value:\"online\", label:\"Pay Online\" }),\r\n      this.fb.group({ method: [false, []], value:\"ondelivery\", label:\"Pay On Delivery\" }),\r\n    ]\r\n  }\r\n\r\n  upload() {\r\n    this.uploadWidget.open();\r\n  }\r\n\r\n  removeImage(image_url):void{\r\n    this.images = this.images.filter(\r\n      (a) => a !== image_url\r\n    );\r\n  }\r\n\r\n  setProduct({productId}):void{\r\n    // productId = 148 //145\r\n    // productId = 23\r\n    this.productId = productId\r\n    this.productService.getProductById(productId).subscribe((a)=>{\r\n      const data:EditProductModel = a.data;\r\n      this.form.setValue({\r\n        \"name\":data.name,\r\n        \"description\":data.description || '',\r\n        \"price\":data.price,\r\n        \"previousPrice\":data.previousPrice,\r\n        \"category\":data.category.id,\r\n        \"unit\":data.unit,\r\n        \"paymentOption\":[ //Todo: need to reset payment option from api data\r\n          {method:true, value:\"online\", label:\"Pay Online\"}, \r\n          {method:false, value:\"ondelivery\", label:\"Pay On Delivery\"}\r\n        ]\r\n      });\r\n      this.images = data.productImages;\r\n\r\n      // this.productOptions = data.productOptions;\r\n      this.productOptions = data.productOptions.reduce(\r\n        (accumulator, value) => accumulator.concat(value), []\r\n      );\r\n      this.productShipments = data.productShipments;\r\n    });\r\n  }\r\n\r\n  onSubmit():void{\r\n    if (this.form.invalid) {\r\n      console.log(this.form.errors);\r\n      return;\r\n    }\r\n    const data: CreateProductModel  =  this.getProductUpdatedData();\r\n    this.productService.UpdateProduct(this.productId,data).subscribe( \r\n      (a) => {\r\n        // if(!a.data.category)\r\n        // {\r\n        //    a.data.category = {id:0,name:'no category set',imageUrl:'',createdOn:''};\r\n        // }\r\n        this.images = [];\r\n        this.edited.emit(a.data);\r\n        this.toast.success(\"product updated successfully\");\r\n        this.closed.emit();\r\n      },\r\n      (error) => {\r\n        console.log(\"error\", error);\r\n      }\r\n     )\r\n  }\r\n\r\n  flatPaymentOption(option:{method:boolean,value:string,label:string}[]){\r\n    return option.filter(opt=>opt.method).map(opt=>opt.value).join(',')\r\n  }\r\n\r\n  getProductUpdatedData():CreateProductModel{\r\n    return {\r\n      name: this.form.get(\"name\").value,\r\n      price: this.form.get(\"price\").value,\r\n      previousPrice: this.form.get(\"previousPrice\").value,\r\n      description: this.form.get(\"description\").value,\r\n      unit: this.form.get(\"unit\").value,\r\n      imageUrl: this.images[0],\r\n      imageUrls: this.images,\r\n      categoryId: this.form.get('category').value,\r\n      userId: this.user.id,\r\n      paymentOptions:this.flatPaymentOption(this.form.get(\"paymentOption\").value),\r\n      shipments: [],\r\n      options: [],\r\n    } as CreateProductModel\r\n  }\r\n}\r\n\r\n","<div class=\"dashboard-title uk-margin-bottom\">Edit Product</div>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n  <mat-form-field class=\"uk-width-expand\">\r\n    <mat-label>\r\n      Product name\r\n      <span *ngIf=\"f.name.invalid && (f.name.dirty || f.name.touched)\">\r\n        <span\r\n          class=\"uk-text-warning\"\r\n          style=\"font-size: smaller\"\r\n          *ngIf=\"f.name.errors.required\"\r\n        >\r\n          Product Name required <br\r\n        /></span>\r\n      </span>\r\n    </mat-label>\r\n\r\n    <input\r\n      type=\"text\"\r\n      formControlName=\"name\"\r\n      matInput\r\n      placeholder=\"eg Samsung s11\"\r\n      formControlName=\"name\"\r\n      required\r\n    />\r\n  </mat-form-field>\r\n  <mat-form-field class=\"uk-width-expand\">\r\n    <mat-label\r\n      >Description\r\n\r\n      <span\r\n        *ngIf=\"\r\n          f.description.invalid &&\r\n          (f.description.dirty || f.description.touched)\r\n        \"\r\n      >\r\n        <span\r\n          class=\"uk-text-warning\"\r\n          style=\"font-size: smaller\"\r\n          *ngIf=\"f.description.errors.required\"\r\n        >\r\n          Product Description required <br\r\n        /></span>\r\n      </span>\r\n    </mat-label>\r\n    <textarea\r\n      matInput\r\n      placeholder=\"Ex. 100 Main St\"\r\n      formControlName=\"description\"\r\n      required\r\n    >\r\n   provide full detail of this product</textarea\r\n    >\r\n  </mat-form-field>\r\n  <mat-form-field class=\"uk-width-expand\" *ngIf=\"categories$ | async as categories\">\r\n    <mat-label>Category</mat-label>\r\n    <mat-select formControlName=\"category\" required>\r\n      <mat-option *ngFor=\"let category of categories.data\" [value]=\"category.id\">\r\n        {{ category.name }}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <div class=\"uk-grid-small uk-grid uk-child-width-1-3@s\">\r\n    <mat-form-field class=\"\">\r\n      <mat-label\r\n        >Price\r\n        <span *ngIf=\"f.price.invalid && (f.price.dirty || f.price.touched)\">\r\n          <span\r\n            class=\"uk-text-warning\"\r\n            style=\"font-size: smaller\"\r\n            *ngIf=\"f.price.errors.required\"\r\n          >\r\n            Price required <br\r\n          /></span>\r\n        </span>\r\n      </mat-label>\r\n\r\n      <input\r\n        type=\"number\"\r\n        matInput\r\n        formControlName=\"price\"\r\n        placeholder=\"eg 1000\"\r\n        formControlName=\"price\"\r\n        required\r\n      />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"\">\r\n      <mat-label>Previous Price</mat-label>\r\n      <input\r\n        type=\"number\"\r\n        formControlName=\"previousPrice\"\r\n        matInput\r\n        placeholder=\"eg 2000\"\r\n        formControlName=\"previousPrice\"\r\n      />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"\">\r\n      <mat-label\r\n        >Avaliable Unit\r\n        <span *ngIf=\"f.unit.invalid && (f.unit.dirty || f.unit.touched)\">\r\n          <span\r\n            class=\"uk-text-warning\"\r\n            style=\"font-size: smaller\"\r\n            *ngIf=\"f.unit.errors.required\"\r\n          >\r\n            unit required <br\r\n          /></span>\r\n        </span>\r\n      </mat-label>\r\n      <input\r\n        type=\"number\"\r\n        formControlName=\"unit\"\r\n        matInput\r\n        placeholder=\"200\"\r\n        formControlName=\"unit\"\r\n        required\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n  <mat-label>Payment type *</mat-label>\r\n  <div class=\"uk-grid-small uk-grid uk-child-width-1-2@s\">\r\n    <div *ngFor=\"let paymentOpt of paymentOption()['controls']; let l = index\"\r\n      formArrayName=\"paymentOption\">\r\n      <div [formGroupName]=\"l\">\r\n        <mat-checkbox formControlName=\"method\">\r\n          {{paymentOpt.get('label').value}}\r\n        </mat-checkbox>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <hr />\r\n\r\n  <app-product-shipment [shipments]=\"productShipments\" [productId]=\"productId\">\r\n  </app-product-shipment>\r\n  <hr/>\r\n  <app-product-option  [options]=\"productOptions\" [productId]=\"productId\">\r\n  </app-product-option>\r\n  <hr/>\r\n  \r\n  <div class=\"js-upload uk-placeholder uk-text-center\" (click)=\"upload()\">\r\n    <span uk-icon=\"icon: cloud-upload\"></span>\r\n    <span class=\"uk-text-middle\">Add Photos of Product</span>\r\n    <div uk-form-custom>\r\n      &nbsp;\r\n      <span class=\"uk-link\">Click to add</span>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"uk-margin uk-child-width-1-2 uk-child-width-1-3@s uk-child-width-1-4@m uk-grid-small uk-grid\"\r\n  >\r\n    <div class=\"uk-margin-small-bottom\" *ngFor=\"let image of images\">\r\n      <div class=\"uk-inline uk-dark\">\r\n        <img style=\"max-height: 90px\" src=\"{{ image }}\" alt=\"{{ image }}\" />\r\n        <div\r\n          class=\"uk-position-center uk-overlay uk-overlay-primary\"\r\n          style=\"padding: 5px; border-radius: 20px\" (click)=\"removeImage(image)\">\r\n          <span\r\n            class=\"iconify\"\r\n            data-icon=\"ri:delete-bin-6-line\"\r\n            data-inline=\"false\"\r\n            style=\"color: rgb(177, 55, 55)\">\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn-default\">\r\n    <!-- <img\r\n\r\n    width=\"30\"\r\n    src=\"assets/svg/loader-icon.svg\"\r\n  /> -->\r\n    Update Product\r\n  </button>\r\n</form>\r\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { ProductModel } from \"../../../../models/products.model\";\r\nimport { ProductsService } from \"../../../../services/products/products.service\";\r\nimport { ToastrService } from \"./../../../../services/toastr.service\";\r\nimport { getLoggedInUser } from \"src/app/helpers/userUtility\";\r\nimport { numberWithCommas } from \"./../../../../helpers/number-format\";\r\nimport { formatDateToLocal } from \"./../../../../helpers/date-format\";\r\nimport uikit from \"uikit\";\r\n\r\n@Component({\r\n  selector: \"app-product-item\",\r\n  templateUrl: \"./product-item.component.html\",\r\n  styleUrls: [\"./product-item.component.css\"],\r\n})\r\nexport class ProductItemComponent implements OnInit {\r\n  @Output() productIdSend = new EventEmitter();\r\n  @Output() viewedMore = new EventEmitter();\r\n  numberWithCommas: Function = numberWithCommas;\r\n  user = getLoggedInUser();\r\n  productDetails: ProductModel[];\r\n  formatDateToLocal: Function;\r\n  productSort: string = \"Date\"; //Date or UnitSold\r\n  byAscending: boolean = false;\r\n  pageNumber: number;\r\n  totalItemCount: number;\r\n  maximumItem: number = 4;\r\n  defaultPage: number = 1;\r\n  keyword: string = \"\";\r\n  category: string = \"\";\r\n  type: string = \"All\"; //All or Custom\r\n  startDate: string = \"\";\r\n  endDate: string = \"\";\r\n  minValue: number = 10;\r\n  maxValue: number = 500000;\r\n\r\n  constructor(\r\n    private productService: ProductsService,\r\n    private toast: ToastrService\r\n  ) {\r\n    this.formatDateToLocal = formatDateToLocal;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchNextProducts(this.defaultPage);\r\n  }\r\n\r\n  onDelete(productId: number): void {\r\n    uikit.modal.confirm(\"Are you sure that you want to remove this ?\").then(\r\n      () => {\r\n        this.productService.deleteProduct(productId).subscribe((a) => {\r\n          this.productDetails = this.productDetails.filter(\r\n            (b) => b.id !== productId\r\n          );\r\n        });\r\n        this.toast.success(\"product removed successfully\");\r\n      },\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  public addProduct(product: ProductModel): void {\r\n    this.productDetails.push(product);\r\n  }\r\n\r\n  public updateProduct(product: ProductModel): void {\r\n    const index = this.productDetails.findIndex((p) => p.id === product.id);\r\n    this.productDetails[index] = product;\r\n  }\r\n\r\n  setProductId(productId: string): void {\r\n    this.productIdSend.emit({ productId });\r\n  }\r\n\r\n  setViewMore(productId: string): void {\r\n    this.viewedMore.emit({ productId });\r\n  }\r\n\r\n  fetchNextProducts(pageNumber: number) {\r\n    this.productService\r\n      .getSellerProducts(\r\n        this.user.id,\r\n        pageNumber,\r\n        this.maximumItem,\r\n        this.keyword,\r\n        this.category,\r\n        this.minValue,\r\n        this.maxValue,\r\n        this.type,\r\n        this.startDate,\r\n        this.endDate,\r\n        this.productSort,\r\n        this.byAscending\r\n      )\r\n      .subscribe(\r\n        (productDetail) => {\r\n          this.productDetails = productDetail.data.data;\r\n          this.pageNumber = productDetail.data.pager.pageNumber;\r\n          this.totalItemCount = productDetail.data.pager.totalItemCount;\r\n        },\r\n        (error) => console.error(error)\r\n      );\r\n  }\r\n\r\n  onSearch(data): void {\r\n    this.keyword = data.keyword;\r\n    this.category = data.category;\r\n    this.startDate = data.startDate ? data.startDate.toLocaleDateString() : \"\";\r\n    this.endDate = data.endDate ? data.startDate.toLocaleDateString() : \"\";\r\n    this.minValue = data.minValue;\r\n    this.maxValue = data.maxValue;\r\n    if (this.startDate !== \"\") {\r\n      this.type = \"Custom\";\r\n    }\r\n    this.fetchNextProducts(this.defaultPage);\r\n  }\r\n\r\n  onSearchClear(data): void {\r\n    this.keyword = \"\";\r\n    this.category = \"\";\r\n    this.startDate = \"\";\r\n    this.endDate = \"\";\r\n    this.minValue = 10;\r\n    this.maxValue = 500000;\r\n  }\r\n\r\n  sortBy(field: string, asc: boolean = true): void {\r\n    this.productSort = field;\r\n    this.byAscending = asc;\r\n    this.fetchNextProducts(this.defaultPage);\r\n  }\r\n\r\n  // sortByUnitLeft(reverse:boolean = false):void{\r\n  //   this.productDetails.sort((a:ProductModel,b:ProductModel)=>{\r\n  //     if(reverse){\r\n  //       return b.unit - a.unit\r\n  //     }\r\n  //     return a.unit - b.unit\r\n  //   })\r\n  // }\r\n}\r\n","<div>\r\n    <app-search-item (onSearch)=\"onSearch($event)\" (onSearchClear)=\"onSearchClear($event)\"></app-search-item>\r\n    <div class=\"dashboard-title\">My Products</div>\r\n    <table class=\"uk-table uk-table-responsive uk-table-divider\">\r\n      <thead>\r\n        <tr>\r\n          <td></td>\r\n          <th>Product</th>\r\n          <th>Cost</th>\r\n          <th class=\"product-unit\">\r\n            <span class=\"unit-caption\">Unit Sold</span> \r\n            <p class=\"unit-wrap\">\r\n              <span (click)=\"sortBy('UnitSold', true)\" class=\"sort-asc\"></span>\r\n              <span (click)=\"sortBy('UnitSold', false)\" class=\"sort-desc\"></span>\r\n            </p> \r\n          </th>\r\n          <th class=\"product-unit\">\r\n            <span class=\"unit-caption\">Unit Left </span>\r\n            <!-- <p class=\"unit-wrap\">\r\n              <span (click)=\"sortBy('UnitSold', true)\" class=\"sort-asc\"></span>\r\n              <span (click)=\"sortBy('UnitSold', false)\" class=\"sort-desc\"></span>\r\n            </p> -->\r\n          </th>\r\n          <th>Income Generated</th>\r\n          <th class=\"product-unit\">\r\n            <span id=\"created-at\">Created At</span>  \r\n            <p id=\"created-at-wrap\">\r\n              <span (click)=\"sortBy('Date', true)\" class=\"sort-asc\"></span>\r\n              <span (click)=\"sortBy('Date', false)\" class=\"sort-desc\"></span>\r\n            </p>\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let productDetail of productDetails | paginate: { itemsPerPage: maximumItem, currentPage: pageNumber, totalItems:totalItemCount}\">\r\n          <td>\r\n            <img class=\"uk-img\" src=\"{{ productDetail.imageUrl }}\" width=\"100\" height=\"100\" />\r\n          </td>\r\n          <td>\r\n            <span class=\"uk-text-muted\"> {{ productDetail.category.name }} </span> <br />\r\n            {{ productDetail.name }}\r\n          </td>\r\n          <td>NGN {{ numberWithCommas(productDetail.price) }}</td>\r\n          <td>{{ productDetail.unitSold }}</td>\r\n          <td>{{ productDetail.unit }}</td>\r\n          <td>NGN {{ numberWithCommas(productDetail.price * productDetail.unit) }}</td>\r\n          <td>{{ formatDateToLocal(productDetail.createdOn) }}</td>\r\n          <td>\r\n            <div class=\"uk-inline\">\r\n              <button class=\"uk-button uk-button-default\" type=\"button\">\r\n                Action\r\n              </button>\r\n              <div uk-dropdown=\"mode: click\">\r\n                <ul class=\"uk-list uk-list-divider\">\r\n                  <li>\r\n                    <a id=\"js-modal-prompt\" \r\n                       uk-toggle=\"target: #modal-edit-product\"\r\n                       (click)=\"setProductId(productDetail.id)\">\r\n                        Edit\r\n                    </a>\r\n                  </li>\r\n                  <li><a (click)=\"onDelete(productDetail.id)\"> Remove</a></li>\r\n                  <li>\r\n                    <a uk-toggle=\"target: #modal-view-more\" \r\n                      (click)=\"setViewMore(productDetail.id)\">\r\n                      View More\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div class=\"uk-flex uk-flex-center\">\r\n      <pagination-controls (pageChange)=\"fetchNextProducts($event)\"></pagination-controls>\r\n    </div>\r\n</div>_","import { Component, OnInit, Input, OnChanges, SimpleChanges} from '@angular/core';\r\nimport { CreateProductOption, ProductOption} from 'src/app/models/products.model';\r\nimport { FormBuilder, FormGroup, FormArray, Validators, AbstractControl} from '@angular/forms';\r\nimport { ErrorService } from './../../../../services/error.service';\r\nimport { ProductsService } from './../../../../services/products/products.service';\r\n\r\n@Component({\r\n  selector: 'app-product-option',\r\n  templateUrl: './product-option.component.html',\r\n  styleUrls: ['./product-option.component.css','../../../../shared/css/spinner.css']\r\n})\r\nexport class ProductOptionComponent implements OnInit, OnChanges {\r\n  @Input() options: ProductOption[];\r\n  @Input() productId:number;\r\n  optionForm: FormGroup;\r\n  optionEditForm: FormGroup;\r\n  errs: string[] = [];\r\n  loading: boolean = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private errorService:ErrorService,\r\n    private productService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit():void{\r\n    this.optionForm = this.fb.group({\r\n      ShortDescription: [\"\", []],\r\n      Title: [\"\", [Validators.required]],\r\n      Value: [\"\", [Validators.required]],\r\n      Cost: [\"\", [Validators.required]],\r\n    });\r\n    this.optionEditForm = this.fb.group({\r\n      options: this.fb.array([])\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes:SimpleChanges):void{\r\n    if(changes['options'] && changes['options'].currentValue){\r\n        this.optionArray().clear();\r\n        this.setEditForm(\r\n          changes['options'].currentValue as ProductOption[]\r\n        );\r\n    }\r\n  }\r\n\r\n  optionArray():FormArray{\r\n    return this.optionEditForm.get('options') as FormArray;\r\n  }\r\n\r\n  setEditForm(options:ProductOption[]):void{\r\n    options.forEach((option) => {\r\n      this.optionArray().push(\r\n        this.setEditFormGroup(option)\r\n      )\r\n    });\r\n  }\r\n\r\n  setEditFormGroup(option:ProductOption):FormGroup{\r\n    return this.fb.group({\r\n      id:option.id,\r\n      title:[option.title,[Validators.required]],\r\n      value:[option.value,[Validators.required]],\r\n      cost:[option.cost,[Validators.required]],\r\n      shortDescription:option.shortDescription,\r\n      productId:option.productId,editable:false,\r\n      loading:false,editLoading:false,\r\n    });\r\n  }\r\n\r\n  addProductOption():void{\r\n    if(this.controlsErrorExist()) return;\r\n    let data:CreateProductOption;\r\n    data = this.getProductOption();\r\n    this.loading = true;\r\n    this.productService.createProductOption(this.productId,data)\r\n      .subscribe((a)=>{\r\n      this.optionArray().push(this.setEditFormGroup(a.data));\r\n      this.resetForm();\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  editOption(index:number):void{\r\n    this.optionArray().at(index).get('editable').setValue(true);\r\n  }\r\n\r\n  updateOption(optionId:number,index:number):void{\r\n    let optionControl:AbstractControl = this.optionArray().at(index);\r\n    if(optionControl.invalid){\r\n      this.errs = this.errorService.setControlEditError(\r\n        [\"Title\",\"Value\",\"Cost\"],optionControl\r\n      );\r\n      return\r\n    }\r\n    optionControl.get('editLoading').setValue(true);\r\n    const optionData = (({title,value,cost})=>({title,value,cost}))\r\n    (optionControl.value) as ProductOption;\r\n\r\n    this.productService.UpdateProductOption(optionId,optionData)\r\n      .subscribe((a)=>{\r\n        optionControl.patchValue({\r\n          title:a.data.title,value:a.data.value,\r\n          cost:a.data.cost,editable:false,editLoading:false\r\n        });\r\n    });\r\n  }\r\n\r\n  removeOption(optionId:number,index:number):void{\r\n    this.optionArray().at(index).get('loading').setValue(true)\r\n    this.productService.deleteProductOption(optionId)\r\n    .subscribe((a)=>{this.optionArray().removeAt(index);});\r\n  }\r\n\r\n  controlsErrorExist():number{\r\n    const controls = this.optionForm.controls;\r\n    this.errs = this.errorService.getControlError(controls);\r\n    return this.errs.length;\r\n  }\r\n\r\n  resetForm():void{\r\n    this.optionForm.reset();\r\n    Object.keys(this.optionForm.controls).forEach(key => {\r\n      this.optionForm.get(key).setErrors(null);\r\n      this.optionForm.get(key).updateValueAndValidity();\r\n    });\r\n  }\r\n\r\n  getProductOption():CreateProductOption{\r\n    return {\r\n      \"title\":this.optionForm.get(\"Title\").value,\r\n      \"value\":this.optionForm.get(\"Value\").value,\r\n      \"cost\":this.optionForm.get(\"Cost\").value,\r\n      \"shortDescription\":this.optionForm\r\n      .get(\"ShortDescription\").value,\r\n    } as CreateProductOption;\r\n  }\r\n}\r\n","<h3 class=\"uk-heading-line uk-text-center\"><span>Product Options</span></h3>\r\n\r\n<div [formGroup]=\"optionEditForm\">\r\n    <div formArrayName=\"options\" \r\n        *ngFor=\"let option of optionArray()['controls']; let j=index;\">\r\n        <div class=\"uk-grid-small uk-grid uk-child-width-1-4@s\"   \r\n            [formGroupName]=\"j\">\r\n            <mat-form-field class=\"\">\r\n                <mat-label>Title/Name</mat-label>\r\n                <input type=\"text\" matInput placeholder=\"eg color, size\" formControlName=\"title\"\r\n                    [matTooltip]=\"option.get('editable').value?'Provide Product Option Title such as Color or size, for customer to select option':''\"\r\n                    [readonly]=\"!option.get('editable').value\" (focus)=\"errs = []\"  required\r\n                />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n                <mat-label>Value</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"value\" \r\n                    [matTooltip]=\"option.get('editable').value?'Enter Value for the title , eg XXL for size':''\"\r\n                    placeholder=\"eg red, xx\"  \r\n                    [readonly]=\"!option.get('editable').value\" (focus)=\"errs = []\" required \r\n                />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n                <mat-label>Cost</mat-label>\r\n                <input type=\"number\" matInput [matTooltip]=\"option.get('editable').value?'Enter cost for this option':''\"\r\n                    placeholder=\"eg 2000, 6000\" formControlName=\"cost\" \r\n                    [readonly]=\"!option.get('editable').value\" (focus)=\"errs = []\" required\r\n                />\r\n            </mat-form-field>\r\n            <div class=\"uk-flex uk-margin-small-bottom uk-margin-remove-bottom@m\" >\r\n                <div  *ngIf=\"!option.get('editable').value\">\r\n                    <button mat-raised-button color=\"info\" type=\"button\" class=\"action-btn\"\r\n                        (click)=\"editOption(j)\">\r\n                        <mat-icon>edit</mat-icon><span class=\"icon-text\">edit</span>\r\n\r\n                    </button>\r\n                </div>\r\n                <div *ngIf=\"option.get('editable').value\">\r\n                    <button mat-raised-button color=\"primary\" type=\"button\" class=\"action-btn\"\r\n                        [class.spinner]=\"option.get('editLoading').value\" \r\n                        [disabled]=\"option.get('editLoading').value\"\r\n                        (click)=\"updateOption(option.get('id').value,j)\" >\r\n                        <mat-icon>save</mat-icon><span class=\"icon-text\">save</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"uk-margin-small-left\">\r\n                    <button mat-raised-button color=\"warn\" type=\"button\" class=\"action-btn delete\"\r\n                        [class.spinner]=\"option.get('loading').value\" \r\n                        [disabled]=\"option.get('loading').value\"\r\n                        (click)=\"removeOption(option.get('id').value,j)\" >\r\n                        <mat-icon>delete</mat-icon><span class=\"icon-text\">delete</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"uk-grid-small uk-grid uk-child-width-1-4@s\" [formGroup]=\"optionForm\">\r\n    <mat-form-field class=\"\">\r\n        <mat-label>Title/Name</mat-label>\r\n        <input type=\"text\" matInput placeholder=\"eg color, size \" \r\n            matTooltip=\"Provide Product Option Title such as Color or size, for customer to select option\"\r\n            (focus)=\"errs = []\" formControlName=\"Title\" required\r\n        />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"\">\r\n        <mat-label>Value</mat-label>\r\n        <input type=\"text\" matInput matTooltip=\"Enter Value for the title , eg XXL for size\"\r\n            placeholder=\"eg Select color value such red, yellow, blue\"  formControlName=\"Value\" \r\n            (focus)=\"errs = []\" required\r\n        />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"\">\r\n        <mat-label>Cost</mat-label>\r\n        <input type=\"number\" matInput matTooltip=\"Enter cost for this option\"\r\n            placeholder=\"eg Enter cost for this option\" formControlName=\"Cost\" \r\n            (focus)=\"errs = []\" required\r\n        />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"\">\r\n        <mat-label>Description</mat-label>\r\n        <!-- <textarea type=\"text\" matInput placeholder=\"provide short description  of this option\"\r\n        formControlName=\"optionShortDescription\"\r\n        ></textarea> -->\r\n        <input type=\"text\" matInput matTooltip=\"provide short description  of this option\"\r\n        placeholder=\"provide short description  of this option\" \r\n        formControlName=\"ShortDescription\"\r\n        />\r\n    </mat-form-field>\r\n</div>\r\n<mat-error *ngIf=\"errs.length\">\r\n    <strong>\r\n        <span *ngFor=\"let err of errs\">{{err}} </span> {{errs.length > 1?'are':'is'}} required\r\n    </strong>\r\n</mat-error>\r\n<button mat-raised-button [class.spinner]=\"loading\" [disabled]=\"loading\"\r\n    aria-label=\"Add Item Option\" class=\"uk-margin\" type=\"button\"\r\n    matTooltip=\"Add option related to product such as Size, Color, Shape and others\"\r\n    (click)=\"addProductOption()\" color=\"accent\">\r\n    Create Option\r\n</button>","import { Component, OnInit, Input, OnChanges, SimpleChanges} from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators, AbstractControl} from '@angular/forms';\r\nimport { ErrorService } from './../../../../services/error.service';\r\nimport { nigeriaSates } from './../../../../data/nigeriastates';\r\nimport { ProductShipment } from './../../../../models/products.model';\r\nimport { ProductsService } from './../../../../services/products/products.service';\r\n\r\n@Component({\r\n  selector: 'app-product-shipment',\r\n  templateUrl: './product-shipment.component.html',\r\n  styleUrls: ['./product-shipment.component.css','../../../../shared/css/spinner.css']\r\n})\r\nexport class ProductShipmentComponent implements OnInit, OnChanges{\r\n  @Input() shipments:ProductShipment[];\r\n  @Input() productId:number;\r\n  shipmentForm:FormGroup;\r\n  shipmentEditForm: FormGroup;\r\n  loading:boolean = false;\r\n  errs: string[] = [];\r\n  states: string[] = nigeriaSates.map((a) => a.name);\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private errorService:ErrorService,\r\n    private productService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit():void{\r\n    this.shipmentForm = this.fb.group({\r\n      State: [\"\", [Validators.required]],\r\n      City: [\"\", [Validators.required]],\r\n      Cost: [\"\", [Validators.required]],\r\n    });\r\n    this.shipmentEditForm = this.fb.group({\r\n      shipments: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes:SimpleChanges):void{\r\n    if(changes.shipments && changes.shipments.currentValue){\r\n        this.shipmentArray().clear();\r\n        this.setEditForm(\r\n          changes.shipments.currentValue as ProductShipment[]\r\n        );\r\n    }\r\n  }\r\n\r\n  shipmentArray():FormArray{\r\n    return this.shipmentEditForm.get('shipments') as FormArray;\r\n  }\r\n\r\n  setEditForm(shipments:ProductShipment[]):void{\r\n    shipments.forEach((shipment) => {\r\n      this.shipmentArray().push(\r\n        this.setEditFormGroup(shipment)\r\n      )\r\n    });\r\n  }\r\n\r\n  setEditFormGroup(shipment:ProductShipment):FormGroup{\r\n    return this.fb.group({\r\n      state: [shipment.state,[Validators.required]],\r\n      city: [shipment.city,[Validators.required]],\r\n      cost: [shipment.cost,[Validators.required]],\r\n      productId:shipment.productId,editable:false,\r\n      loading:false,editLoading:false,id:shipment.id,\r\n    });\r\n  }\r\n\r\n  editShipment(index:number):void{\r\n    this.shipmentArray().at(index).get('editable').setValue(true);\r\n  }\r\n\r\n  updateShipment(shipmentId:number,index:number):void{\r\n    let shipmentControl:AbstractControl = this.shipmentArray().at(index);\r\n    if(shipmentControl.invalid){\r\n      this.errs = this.errorService.setControlEditError(\r\n        [\"State\",\"City\",\"Cost\"],shipmentControl\r\n      );\r\n      return\r\n    }\r\n    shipmentControl.get('editLoading').setValue(true);\r\n    const shipmentData = (({state,city,cost})=>({state,city,cost}))\r\n    (shipmentControl.value) as ProductShipment;\r\n\r\n    this.productService.UpdateProductShipment(shipmentId,shipmentData)\r\n      .subscribe((a)=>{\r\n        shipmentControl.patchValue({\r\n          state:a.data.state,city:a.data.city,\r\n          cost:a.data.cost,editable:false,editLoading:false\r\n        });\r\n    });\r\n  }\r\n\r\n  removeShipment(shipmentId:number,index:number):void{\r\n    this.shipmentArray().at(index).get('loading').setValue(true)\r\n    this.productService.deleteProductShipment(shipmentId)\r\n    .subscribe((a)=>{this.shipmentArray().removeAt(index);});\r\n  }\r\n\r\n  addShipment():void{\r\n    if(this.controlsErrorExist()) return;\r\n    let data:ProductShipment = this.getShipment();\r\n    this.loading = true;\r\n    this.productService.createProductShipment(this.productId,data)\r\n      .subscribe((a)=>{\r\n      this.shipmentArray().push(this.setEditFormGroup(a.data));\r\n      this.resetForm();\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  controlsErrorExist():number{\r\n    const controls = this.shipmentForm.controls;\r\n    this.errs = this.errorService.getControlError(controls);\r\n    return this.errs.length;\r\n  }\r\n\r\n  resetForm():void{\r\n    this.shipmentForm.reset();\r\n    Object.keys(this.shipmentForm.controls).forEach(key => {\r\n      this.shipmentForm.get(key).setErrors(null);\r\n      this.shipmentForm.get(key).updateValueAndValidity();\r\n    });\r\n  }\r\n\r\n  getShipment():ProductShipment{\r\n    return {\r\n      \"state\":this.shipmentForm.get(\"State\").value,\r\n      \"city\":this.shipmentForm.get(\"City\").value,\r\n      \"cost\":this.shipmentForm.get(\"Cost\").value\r\n    } as ProductShipment;\r\n  }\r\n}\r\n","<h3 class=\"uk-heading-line uk-text-center\"><span>Product Shipments</span></h3>\r\n<div [formGroup]=\"shipmentEditForm\">\r\n    <div formArrayName=\"shipments\" \r\n        *ngFor=\"let shipment of shipmentArray()['controls']; let i=index;\">\r\n        <div [formGroupName]=\"i\"\r\n            class=\"uk-grid-small uk-grid uk-child-width-1-4@s uk-margin-small-bottom uk-margin-remove-bottom@m\">\r\n            <mat-form-field class=\"\">\r\n                <mat-label>State</mat-label>\r\n                <input *ngIf=\"!shipment.get('editable').value\" value=\"{{shipment.get('state').value}}\" \r\n                    matInput [readonly]=\"!shipment.get('editable').value\">\r\n                <mat-select formControlName=\"state\" required  \r\n                    *ngIf=\"shipment.get('editable').value\"> \r\n                    <mat-option>Select</mat-option>\r\n                    <mat-option value=\"all\">All</mat-option>\r\n                    <mat-option *ngFor=\"let state of states\" value=\"{{ state.toLowerCase() }}\" \r\n                        (focus)=\"errs = []\">\r\n                        {{ state }}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n                <mat-label>City </mat-label>\r\n                <input type=\"text\" matInput placeholder=\"all, lagos, ikeja, ajah\" formControlName=\"city\"\r\n                    (focus)=\"errs = []\" required [readonly]=\"!shipment.get('editable').value\"/>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n                <mat-label>Cost </mat-label>\r\n                <input type=\"number\" matInput placeholder=\"200\"  formControlName=\"cost\" \r\n                    (focus)=\"errs = []\" required [readonly]=\"!shipment.get('editable').value\"/>\r\n            </mat-form-field>\r\n            <div class=\"uk-flex\">\r\n                <div  *ngIf=\"!shipment.get('editable').value\">\r\n                    <button mat-raised-button color=\"info\" type=\"button\" class=\"action-btn\"\r\n                        (click)=\"editShipment(i)\">\r\n                        <mat-icon>edit</mat-icon><span class=\"icon-text\">edit</span>\r\n                    </button>\r\n                </div>\r\n                <div *ngIf=\"shipment.get('editable').value\">\r\n                    <button mat-raised-button color=\"primary\" type=\"button\" class=\"action-btn\"\r\n                        [class.spinner]=\"shipment.get('editLoading').value\" \r\n                        [disabled]=\"shipment.get('editLoading').value\"\r\n                        (click)=\"updateShipment(shipment.get('id').value,i)\" >\r\n                        <mat-icon>save</mat-icon><span class=\"icon-text\">save</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"uk-margin-small-left\">\r\n                    <button mat-raised-button color=\"warn\" type=\"button\" class=\"action-btn delete\"\r\n                        [class.spinner]=\"shipment.get('loading').value\" \r\n                        [disabled]=\"shipment.get('loading').value\"\r\n                        (click)=\"removeShipment(shipment.get('id').value,i)\" >\r\n                        <mat-icon>delete</mat-icon><span class=\"icon-text\">delete</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"uk-grid-small uk-grid uk-child-width-1-4@s\" [formGroup]=\"shipmentForm\">\r\n    <mat-form-field class=\"\">\r\n        <mat-label>State</mat-label>\r\n        <mat-select formControlName=\"State\" required>\r\n          <mat-option>Select</mat-option>\r\n          <mat-option value=\"all\">All</mat-option>\r\n          <mat-option *ngFor=\"let state of states\" value=\"{{ state.toLowerCase() }}\" \r\n            (focus)=\"errs = []\">\r\n            {{ state }}\r\n          </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"\">\r\n        <mat-label>City </mat-label>\r\n        <input type=\"text\" matInput placeholder=\"all, lagos, ikeja, ajah\" formControlName=\"City\"\r\n          (focus)=\"errs = []\" required\r\n        />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"\">\r\n        <mat-label>Cost </mat-label>\r\n        <input type=\"number\" matInput placeholder=\"200\"  formControlName=\"Cost\" required \r\n            (focus)=\"errs = []\" />\r\n    </mat-form-field>\r\n</div>\r\n<mat-error *ngIf=\"errs.length\">\r\n    <strong>\r\n        <span *ngFor=\"let err of errs\">{{err}} </span> {{errs.length > 1?'are':'is'}} required\r\n    </strong>\r\n</mat-error>\r\n<button mat-raised-button [class.spinner]=\"loading\" [disabled]=\"loading\"\r\n    matTooltip=\"Add Location Where you can provide shipping\"\r\n    aria-label=\"Add Shipping Cost\" color=\"accent\" class=\"uk-margin\"\r\n    (click)=\"addShipment()\" type=\"button\">\r\n    Create Shipment\r\n</button>","import { CatgoryService } from './../../../../services/category/catgory.service'\r\nimport { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter} from '@angular/core'\r\nimport { CategoryResponse } from './../../../../models/CategoryModels'\r\nimport { ToastrService } from \"./../../../../services/toastr.service\"\r\nimport { Options, LabelType } from '@angular-slider/ngx-slider'\r\nimport { FormBuilder, FormGroup } from '@angular/forms'\r\nimport { Observable } from 'rxjs'\r\nimport { MatDatepickerToggle } from '@angular/material/datepicker'\r\n\r\n@Component({\r\n  selector: 'app-search-item',\r\n  templateUrl: './search-item.component.html',\r\n  styleUrls: ['./search-item.component.css']\r\n})\r\nexport class SearchItemComponent implements OnInit {\r\n  @ViewChild('categoryItem') categoryItem: ElementRef<HTMLElement>\r\n  @ViewChild('startDateToggle') startDateToggle: MatDatepickerToggle<any> \r\n  @ViewChild('endDateToggle') endDateToggle: MatDatepickerToggle<any>\r\n  @Output() onSearch = new EventEmitter()\r\n  @Output() onSearchClear = new EventEmitter()\r\n  categories$: Observable<CategoryResponse>\r\n  search:string = \"\"\r\n  categoryId:string = \"\"\r\n  options:Options\r\n  searchForm: FormGroup\r\n\r\n  constructor(\r\n    private fb: FormBuilder, private categoryService: CatgoryService,\r\n    private toast: ToastrService\r\n  ) {\r\n    this.searchForm = this.fb.group({\r\n      keyword: [\"\", []],\r\n      category: [\"\", []],\r\n      startDate: [\"\", []],\r\n      endDate: [\"\", []],\r\n      minPrice: [10, []],\r\n      maxPrice: [500000, []],\r\n    })\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.categories$ = this.categoryService.GetCategory()\r\n  }\r\n\r\n  onChangeMinPrice(){\r\n    this.resetPrice()\r\n  }\r\n\r\n  onChangeMaxPrice(){\r\n    if(this.resetPrice()){\r\n      this.toast.error(\"Maximum price must be greater than minimum price\")\r\n    }\r\n  }\r\n\r\n  startDateChange(date:string){\r\n    this.resetDate()\r\n  }\r\n\r\n  endDateChange(date:string){\r\n    if(this.resetDate()){\r\n      this.toast.error(\"End date must be greater than start date\")\r\n    }\r\n  }\r\n\r\n  resetDate():boolean{\r\n    const startD = this.searchForm.get('startDate').value\r\n    const endD = this.searchForm.get('endDate').value\r\n    if(startD > endD){\r\n      this.searchForm.get('endDate').setValue(startD)\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  resetPrice():boolean{\r\n    const start:number = this.searchForm.get('minPrice').value\r\n    const end:number = this.searchForm.get('maxPrice').value\r\n    if(start > end){\r\n      this.searchForm.get('maxPrice').setValue(start)\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  onClear(){\r\n    this.searchForm.get('keyword').setValue('')\r\n    this.searchForm.get('category').setValue('')\r\n    this.searchForm.get('startDate').setValue('') \r\n    this.searchForm.get('endDate').setValue('')\r\n    this.searchForm.get('minPrice').setValue(50) \r\n    this.searchForm.get('maxPrice').setValue(500000)\r\n    this.categoryItem.nativeElement.innerText = ''\r\n    this.onSearchClear.emit({})\r\n  }\r\n\r\n  pickStartDate(){\r\n    const _ = this.startDateToggle._button._elementRef.nativeElement.click()\r\n  }\r\n\r\n  pickEndDate(){\r\n    const _ = this.endDateToggle._button._elementRef.nativeElement.click()\r\n  }\r\n  \r\n  onSearchSubmit(){\r\n    this.onSearch.emit({\r\n      keyword:this.searchForm.get('keyword').value,\r\n      category:this.searchForm.get('category').value,\r\n      startDate:this.searchForm.get('startDate').value,\r\n      endDate:this.searchForm.get('endDate').value,\r\n      minValue:this.searchForm.get('minPrice').value,\r\n      maxValue:this.searchForm.get('maxPrice').value\r\n    })\r\n  }\r\n}\r\n","<div class=\"uk-section uk-section-default\" style=\"padding: 0;margin-top: 10px;\">\r\n    <div class=\"uk-container\">\r\n      <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearchSubmit()\">\r\n        <hr/>\r\n        <div class=\"uk-grid-small uk-child-width-expand@s\" uk-grid>\r\n          <div class=\"uk-width-2-5@s\">\r\n            <label for=\"category\">Search keyword:</label>\r\n            <input class=\"uk-input\" type=\"text\" placeholder=\"enter search product ...\"\r\n              formControlName=\"keyword\">\r\n          </div>\r\n          <div class=\"uk-width-1-5@s\" *ngIf=\"categories$ | async as categories\">\r\n            <label for=\"category\">Select category:</label><br>\r\n            <div uk-form-custom=\"target: > * > span:first-child\">\r\n                <select formControlName=\"category\">\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"{{ category.id }}\" *ngFor=\"let category of categories.data\">\r\n                      {{ category.name }}\r\n                    </option>\r\n                </select>\r\n                <button class=\"uk-button uk-button-default\" type=\"button\" tabindex=\"-1\">\r\n                    <span #categoryItem></span>\r\n                    <span uk-icon=\"icon: chevron-down\"></span>\r\n                </button>\r\n              </div>\r\n          </div>\r\n          <div class=\"uk-width-2-5@s\">\r\n                <div class=\"uk-grid-small uk-grid uk-child-width-1-2@s\">\r\n                    <mat-form-field>\r\n                        <input matInput #refStart type=\"text\" [matDatepicker]=\"startDate\" \r\n                            (dateChange)=\"startDateChange(refStart.value)\" formControlName=\"startDate\" \r\n                            placeholder=\"Start date\" readonly (click)=\"pickStartDate()\"> \r\n                        <mat-datepicker-toggle #startDateToggle matSuffix [for]=\"startDate\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #startDate></mat-datepicker>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input matInput #refEnd type=\"text\" [matDatepicker]=\"endDate\" \r\n                            (dateChange)=\"endDateChange(refEnd.value)\" formControlName=\"endDate\"\r\n                            placeholder=\"End date\" readonly (click)=\"pickEndDate()\">\r\n                        <mat-datepicker-toggle #endDateToggle matSuffix [for]=\"endDate\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #endDate></mat-datepicker>\r\n                    </mat-form-field>\r\n                </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"uk-grid-small uk-child-width-expand@s\" uk-grid>\r\n          <div class=\"uk-width-3-4@s\">\r\n            <div class=\"uk-grid-small uk-grid uk-child-width-1-2@s\">\r\n              <div>\r\n                <label for=\"minPrice\">Minimum Price:</label>\r\n                <input class=\"uk-input\" type=\"number\" placeholder=\"10\" \r\n                  formControlName=\"minPrice\" (change)=\"onChangeMinPrice()\">\r\n              </div>\r\n              <div>\r\n                <label for=\"maxPrice\">Maximum Price:</label>\r\n                <input class=\"uk-input\" type=\"number\" placeholder=\"500000\"\r\n                  formControlName=\"maxPrice\"  (change)=\"onChangeMaxPrice()\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"uk-width-1-4@s\" style=\"padding-top: 10px;\">\r\n            <button type=\"submit\" \r\n              class=\"uk-button uk-button-primary uk-margin-small-top uk-margin-small-right uk-margin-remove-top@m\" >\r\n              filter\r\n            </button>\r\n            <button  (click)=\"onClear()\" type=\"button\"\r\n              class=\"uk-button uk-button-default uk-margin-small-top uk-margin-remove-top@m\" >\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <hr/>\r\n      </form>\r\n    </div>\r\n  </div>","import { Component, OnInit, ElementRef, ViewChild } from \"@angular/core\";\r\nimport { CreateProductResponse } from \"../../../models/products.model\";\r\nimport { ProductsService } from \"../../../services/products/products.service\";\r\nimport { ViewMoreComponent } from './view-more/view-more.component';\r\nimport { EditProductComponent } from './edit-product/edit-product.component';\r\nimport { ProductItemComponent } from './product-item/product-item.component';\r\n\r\n@Component({\r\n  selector: \"app-seller-product\",\r\n  templateUrl: \"./seller-product.component.html\",\r\n  styleUrls: [\"./seller-product.component.css\"],\r\n})\r\nexport class SellerProductComponent implements OnInit {\r\n  @ViewChild('productList') productList: ProductItemComponent;\r\n  @ViewChild('closeCreate') closeCreate: ElementRef<HTMLElement>;\r\n  @ViewChild('editProduct') editProduct: EditProductComponent;\r\n  @ViewChild('viewMore') viewMore: ViewMoreComponent;\r\n  @ViewChild('closeEdit') closeEdit: ElementRef<HTMLElement>;\r\n  cproduct: CreateProductResponse[];\r\n\r\n  constructor(private productservice: ProductsService) { }\r\n  ngOnInit(): void { }\r\n\r\n\r\n  cp(createproduct: CreateProductResponse): void {\r\n    // this.productservice.createProduct(name).subscribe(cproduct => {\r\n    //   this.cproduct.push(cproduct)\r\n    // })\r\n  }\r\n\r\n  closeAddProductModal(): void {\r\n    this.closeCreate.nativeElement.click();\r\n  }\r\n\r\n  closeEditProductModal(): void {\r\n    this.closeEdit.nativeElement.click();\r\n  }\r\n}\r\n","<button\r\n  class=\"uk-button uk-button-primary\"\r\n  type=\"button\"\r\n  uk-toggle=\"target: #modal-add-product\">\r\n  Add Product\r\n</button>\r\n\r\n<app-product-item (cp)=\"cp($event)\" \r\n  (productIdSend)=\"editProduct.setProduct($event)\" \r\n  (viewedMore)=\"viewMore.setProduct($event)\" \r\n  #productList>\r\n</app-product-item>\r\n\r\n<!-- This is the modal with the outside close button -->\r\n<div id=\"modal-add-product\" uk-modal=\"bg-close: false\">\r\n  <div class=\"uk-modal-dialog uk-modal-body\">\r\n    <button class=\"uk-modal-close-outside\" type=\"button\" uk-close #closeCreate></button>\r\n    <app-add-product \r\n      (closed)=\"closeAddProductModal()\" \r\n      (added)=\"productList.addProduct($event)\">\r\n    </app-add-product>\r\n  </div>\r\n</div>\r\n\r\n<!-- This is the modal with the outside close button -->\r\n<div id=\"modal-edit-product\" uk-modal=\"bg-close: false\">\r\n  <div class=\"uk-modal-dialog uk-modal-body\">\r\n    <button class=\"uk-modal-close-outside\" type=\"button\" uk-close #closeEdit></button>\r\n    <app-edit-product #editProduct\r\n      (closed)=\"closeEditProductModal()\"\r\n      (edited)=\"productList.updateProduct($event)\">\r\n    </app-edit-product>\r\n  </div>\r\n</div>\r\n\r\n<!-- This is the modal with the outside close button -->\r\n<div id=\"modal-view-more\" uk-modal=\"bg-close: false\">\r\n  <div class=\"uk-modal-dialog uk-modal-body\">\r\n    <button class=\"uk-modal-close-outside\" type=\"button\" uk-close></button>\r\n    <app-view-more #viewMore></app-view-more>\r\n  </div>\r\n</div>\r\n\r\n<script src=\"https://widget.cloudinary.com/v2.0/global/all.js\" type=\"text/javascript\"></script>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProductsService } from './../../../../services/products/products.service';\r\nimport { numberWithCommas } from './../../../../helpers/number-format';\r\nimport { ProductResponse } from 'src/app/models/products.model';\r\nimport { formatDate } from './../../../../helpers/date-format';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-view-more',\r\n  templateUrl: './view-more.component.html',\r\n  styleUrls: ['./view-more.component.css']\r\n})\r\nexport class ViewMoreComponent implements OnInit {\r\n  numberWithCommas:Function = numberWithCommas\r\n  product$:Observable<ProductResponse>;\r\n  formatDate:Function;\r\n\r\n  constructor(private productService:ProductsService) { \r\n    this.formatDate = formatDate;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  setProduct({productId}):void{\r\n    this.product$ = this.productService.getProductById(productId);\r\n  }\r\n}\r\n","<!--=======  single product  =======-->\r\n<div class=\"uk-card uk-card-default uk-card-hover uk-card-small\" \r\n    *ngIf=\"product$ | async as product\">\r\n    <div class=\"uk-position-relative uk-visible-toggle uk-light uk-slideshow\" tabindex=\"-1\" uk-slideshow>\r\n        <ul class=\"uk-slideshow-items\">\r\n            <li *ngFor=\"let imageUrl of product.data.productImages\">\r\n                <img src=\"{{ imageUrl }}\" data-src=\"{{ imageUrl }}\" alt=\"{{product.data.name}}\" uk-cover>\r\n            </li>\r\n        \r\n        </ul>\r\n        <a class=\"uk-position-center-left uk-position-small uk-hidden-hover\" \r\n            href=\"#\" uk-slidenav-previous uk-slideshow-item=\"previous\">\r\n        </a>\r\n        <a class=\"uk-position-center-right uk-position-small uk-hidden-hover\" \r\n            href=\"#\" uk-slidenav-next uk-slideshow-item=\"next\">\r\n        </a>\r\n    </div>\r\n\r\n    <div class=\"uk-card-body uk-padding-small\">\r\n        <table class=\"uk-table uk-table-responsive uk-table-divider\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>Name: </td><td>{{product.data.name}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Price: </td><td>NGN {{numberWithCommas(product.data.price)}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Previous Price: </td><td>NGN {{numberWithCommas(product.data.previousPrice)}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Category: </td><td>{{product.data.category.name}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Unit: </td><td>{{product.data.unit}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Shipment: </td>\r\n                    <td>\r\n                        <table class=\"uk-table uk-table-responsive uk-table-divider\">\r\n                            <thead>\r\n                                <tr>\r\n                                  <th>State</th>\r\n                                  <th>City</th>\r\n                                  <th>Cost</th>\r\n                                </tr>\r\n                              </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let shipment of product.data.productShipments\">\r\n                                    <td>{{shipment.state}}</td>\r\n                                    <td>{{shipment.city}}</td>\r\n                                    <td>NGN {{numberWithCommas(shipment.cost)}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Options: </td>\r\n                    <td>\r\n                        <table class=\"uk-table uk-table-responsive uk-table-divider\">\r\n                            <thead>\r\n                                <tr>\r\n                                  <th>Title</th>\r\n                                  <th>Value</th>\r\n                                  <th>Cost</th>\r\n                                </tr>\r\n                              </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let option of product.data.productOptions\">\r\n                                    <td>{{option.title}}</td>\r\n                                    <td>{{option.value}}</td>\r\n                                    <td>NGN {{numberWithCommas(option.cost)}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Created On: </td><td>{{formatDate(product.data.createdOn)}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Description: </td><td>{{product.data.description}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n","import {\r\n  AfterViewChecked,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport uikit from \"uikit\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { IUser } from \"src/app/models/IUserModel\";\r\nimport { ISeller } from \"src/app/models/sellerModel\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { nigeriaSates } from \"src/app/data/nigeriastates\";\r\nimport { SellerService } from \"src/app/services/seller/seller.service\";\r\nimport { ResponseModel } from \"src/app/shared/models/ResponseModel\";\r\nimport { ToastrService } from \"src/app/services/toastr.service\";\r\n\r\ndeclare var cloudinary: any;\r\n@Component({\r\n  selector: \"app-seller-registeration-form\",\r\n  templateUrl: \"./seller-registeration-form.component.html\",\r\n  styleUrls: [\"./seller-registeration-form.component.css\"],\r\n})\r\nexport class SellerRegisterationFormComponent\r\n  implements OnInit, AfterViewChecked, OnDestroy\r\n{\r\n  @Input() openModal: boolean = false;\r\n\r\n  @Output() modalStatus = new EventEmitter(null);\r\n  image: string;\r\n  imageName: string;\r\n  isLoading = false;\r\n  uploadWidget: any;\r\n  componentForm = this.fb.group({\r\n    registerationStatus: [\"registered\"],\r\n    businessName: [\"\", [Validators.required]],\r\n    businessPhone: [\"\", [Validators.required]],\r\n    businessEmail: [\"\", [Validators.required]],\r\n    businessAddress: [\"\", [Validators.required]],\r\n    businessCountry: [\"\", [Validators.required]],\r\n    businessState: [\"\", [Validators.required]],\r\n    businessCity: [\"\", [Validators.required]],\r\n    businessLogoUrl: [\r\n      \"\",\r\n      [\r\n        // Validators.required,\r\n      ],\r\n    ],\r\n    businessRegistrationNumber: [\"\", [Validators.required]],\r\n    businessApplicantAddress: [\"\", [Validators.required]],\r\n    businessAddressLandmark: [\"\", [Validators.required]],\r\n    businessApplicantID: [\"\", [Validators.required]],\r\n    businessIDType: [\"\", [Validators.required]],\r\n  });\r\n  regSeller$: Subscription;\r\n\r\n  states = nigeriaSates.map((a) => a.name.toLowerCase());\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private sellerS: SellerService,\r\n    private toast: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // open modal\r\n    uikit.modal(\"#seller-modal-full\").show();\r\n    this.uploadWidget = cloudinary.createUploadWidget(\r\n      {\r\n        cloudName: environment.cloudinaryName,\r\n        uploadPreset: environment.cloudinaryUploadPerset,\r\n        clientAllowedFormats: [\"jpeg\", \"jpg\", \"png\", \"gif\"],\r\n      },\r\n      (error, result) => {\r\n        if (!error && result && result.event === \"success\") {\r\n          this.image = result.info.secure_url;\r\n          this.imageName = result.info.original_filename;\r\n          console.log(this.imageName);\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(this.componentForm);\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.componentForm.get(\"registerationStatus\").value == \"registered\") {\r\n      this.componentForm.get(\"businessApplicantAddress\").disable();\r\n      this.componentForm.get(\"businessAddressLandmark\").disable();\r\n    } else {\r\n      this.componentForm.get(\"businessApplicantAddress\").enable();\r\n      this.componentForm.get(\"businessAddressLandmark\").enable();\r\n    }\r\n\r\n    if (this.imageName) {\r\n      this.componentForm.get(\"businessLogoUrl\").setValue(this.imageName);\r\n    }\r\n  }\r\n\r\n  get registerationStatus() {\r\n    return this.componentForm.get(\"registerationStatus\").value;\r\n  }\r\n\r\n  submit() {\r\n    // if (!this.image) {\r\n    //   this.toast.error(\"business logo is required\");\r\n    //   return;\r\n    // }\r\n\r\n    // const sellerData: ISeller = this.componentForm.value;\r\n    // sellerData.businessLogoUrl = this.image;\r\n    // this.isLoading = true;\r\n    // this.regSeller$ = this.sellerS.registerSeller(sellerData).subscribe(\r\n    //   (res: { user: IUser; response: ResponseModel }) => {\r\n    //     if (res.response.status === \"success\") {\r\n    //       this.isLoading = false;\r\n    //       this.toast.success(\"Registeration successfully submited\");\r\n    //       this.closeModal(true);\r\n    //     }\r\n    //   },\r\n    //   (err) => {\r\n    //     this.isLoading = false;\r\n    //     console.log(err);\r\n    //   }\r\n    // );\r\n\r\n    if (this.componentForm.invalid) {\r\n      this.toast.error(\"Please fill fields appropriately\");\r\n    } else if (!this.image) {\r\n      this.toast.error(\"business logo is required\");\r\n    } else {\r\n      const sellerData: ISeller = this.componentForm.value;\r\n      sellerData.businessLogoUrl = this.image;\r\n      this.isLoading = true;\r\n      this.regSeller$ = this.sellerS.registerSeller(sellerData).subscribe(\r\n        (res: { user: IUser; response: ResponseModel }) => {\r\n          if (res.response.status === \"success\") {\r\n            this.isLoading = false;\r\n            this.toast.success(\"Registeration successfully submited\");\r\n            this.closeModal(true);\r\n          }\r\n        },\r\n        (err) => {\r\n          this.isLoading = false;\r\n          console.log(err);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  closeModal(isFormSubmit = false) {\r\n    this.modalStatus.emit({\r\n      isModalClose: true,\r\n      isFormSubmit,\r\n    });\r\n    uikit.modal(\"#seller-modal-full\").hide();\r\n  }\r\n\r\n  upload(): void {\r\n    this.uploadWidget.open();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.regSeller$) {\r\n      this.regSeller$.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<div id=\"seller-modal-full\" class=\"uk-modal-full modal-container\" uk-modal>\r\n  <div\r\n    class=\"uk-modal-dialog uk-flex uk-flex-between uk-flex-middle form-container\"\r\n  >\r\n    <div class=\"form-img\"></div>\r\n\r\n    <div class=\"form\">\r\n      <div class=\"go-back\" (click)=\"closeModal()\">\r\n        <img\r\n          src=\"https://cdn.iconscout.com/icon/free/png-512/back-arrow-1767531-1502435.png\"\r\n          alt=\"go-back\"\r\n        />\r\n        <span>Go Back</span>\r\n      </div>\r\n      <div class=\"seller-info\">\r\n        <div class=\"seller-info-main\">\r\n          <h1 class=\"form-heading\">\r\n            <span class=\"bold\">Get Started</span>Enter your business details\r\n          </h1>\r\n          <div>\r\n            <form [formGroup]=\"componentForm\" (submit)=\"submit()\">\r\n              <div class=\"business-status\">\r\n                <label\r\n                  ><input\r\n                    type=\"radio\"\r\n                    checked\r\n                    name=\"registerationStatus\"\r\n                    value=\"registered\"\r\n                    formControlName=\"registerationStatus\"\r\n                  />\r\n                  <span> Registered business</span></label\r\n                >\r\n                <label\r\n                  ><input\r\n                    type=\"radio\"\r\n                    name=\"registerationStatus\"\r\n                    value=\"unregistered\"\r\n                    formControlName=\"registerationStatus\"\r\n                  />\r\n                  <span> Unregistered business</span></label\r\n                >\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label\r\n                  [ngClass]=\"{\r\n                    invalid:\r\n                      componentForm.get('businessName').invalid &&\r\n                      !componentForm.get('businessName').untouched\r\n                  }\"\r\n                  >Business/Brand/Company Name</label\r\n                >\r\n                <input type=\"text\" matInput formControlName=\"businessName\" />\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label\r\n                  [ngClass]=\"{\r\n                    invalid:\r\n                      componentForm.get('businessPhone').invalid &&\r\n                      !componentForm.get('businessPhone').untouched\r\n                  }\"\r\n                  >Business/Brand/Company Phone Number</label\r\n                >\r\n                <input type=\"tel\" matInput formControlName=\"businessPhone\" />\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label\r\n                  [ngClass]=\"{\r\n                    invalid:\r\n                      componentForm.get('businessEmail').invalid &&\r\n                      !componentForm.get('businessEmail').untouched\r\n                  }\"\r\n                  >Business/Brand/Company Email Address</label\r\n                >\r\n                <input type=\"email\" matInput formControlName=\"businessEmail\" />\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label\r\n                  [ngClass]=\"{\r\n                    invalid:\r\n                      componentForm.get('businessAddress').invalid &&\r\n                      !componentForm.get('businessAddress').untouched\r\n                  }\"\r\n                  >Business/Brand/Company Address</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  required\r\n                  formControlName=\"businessAddress\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label\r\n                  [ngClass]=\"{\r\n                    invalid:\r\n                      componentForm.get('businessCountry').invalid &&\r\n                      !componentForm.get('businessCountry').untouched\r\n                  }\"\r\n                  >Business/Brand/Company Country</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  required\r\n                  formControlName=\"businessCountry\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label\r\n                  [ngClass]=\"{\r\n                    invalid:\r\n                      componentForm.get('businessState').invalid &&\r\n                      !componentForm.get('businessState').untouched\r\n                  }\"\r\n                  >Business/Brand/Company State</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  required\r\n                  formControlName=\"businessState\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label\r\n                  [ngClass]=\"{\r\n                    invalid:\r\n                      componentForm.get('businessCity').invalid &&\r\n                      !componentForm.get('businessCity').untouched\r\n                  }\"\r\n                  >Business/Brand/Company City</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  required\r\n                  formControlName=\"businessCity\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group logo-group\" (click)=\"upload()\">\r\n                <label>Business/Brand/Company Logo</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"logo-input\"\r\n                  placeholder=\"Upload\"\r\n                  formControlName=\"businessLogoUrl\"\r\n                />\r\n                <img src=\"../../../../assets/image/upload.png\" alt=\"\" />\r\n              </div>\r\n\r\n              <div\r\n                class=\"form-group\"\r\n                *ngIf=\"registerationStatus == 'registered'\"\r\n              >\r\n                <label\r\n                  [ngClass]=\"{\r\n                    invalid:\r\n                      componentForm.get('businessRegistrationNumber').invalid &&\r\n                      !componentForm.get('businessRegistrationNumber').untouched\r\n                  }\"\r\n                  >Business/Brand/Company Registration Number</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  required\r\n                  formControlName=\"businessRegistrationNumber\"\r\n                />\r\n              </div>\r\n\r\n              <div\r\n                class=\"form-group\"\r\n                *ngIf=\"registerationStatus !== 'registered'\"\r\n              >\r\n                <label\r\n                  [ngClass]=\"{\r\n                    invalid:\r\n                      componentForm.get('businessApplicantAddress').invalid &&\r\n                      !componentForm.get('businessApplicantAddress').untouched\r\n                  }\"\r\n                  >Applicant Address</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  required\r\n                  formControlName=\"businessApplicantAddress\"\r\n                />\r\n              </div>\r\n\r\n              <div\r\n                class=\"form-group\"\r\n                *ngIf=\"registerationStatus !== 'registered'\"\r\n              >\r\n                <label\r\n                  [ngClass]=\"{\r\n                    invalid:\r\n                      componentForm.get('businessAddressLandmark').invalid &&\r\n                      !componentForm.get('businessAddressLandmark').untouched\r\n                  }\"\r\n                  >Address Landmark</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  required\r\n                  formControlName=\"businessAddressLandmark\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label\r\n                  [ngClass]=\"{\r\n                    invalid:\r\n                      componentForm.get('businessApplicantID').invalid &&\r\n                      !componentForm.get('businessApplicantID').untouched\r\n                  }\"\r\n                  >Applicant ID</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  required\r\n                  formControlName=\"businessApplicantID\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label\r\n                  [ngClass]=\"{\r\n                    invalid:\r\n                      componentForm.get('businessIDType').invalid &&\r\n                      !componentForm.get('businessIDType').untouched\r\n                  }\"\r\n                  >ID Type</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  required\r\n                  formControlName=\"businessIDType\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <button\r\n                  class=\"reg-btn\"\r\n                  type=\"submit\"\r\n                  [disabled]=\"isLoading || componentForm.invalid\"\r\n                >\r\n                  <span uk-spinner=\"ratio: 1\" *ngIf=\"isLoading\"></span>\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ProductModel, ProductsApiModel } from \"src/app/models/products.model\";\r\nimport { ProductsService } from \"src/app/services/products/products.service\";\r\n\r\nimport { ICategory } from \"src/app/models/CategoryModels\";\r\nimport { SellerService } from \"src/app/services/seller/seller.service\";\r\nimport { ISeller } from \"src/app/models/sellerModel\";\r\nimport { getLoggedInUser } from \"src/app/helpers/userUtility\";\r\nimport { CatgoryService } from \"src/app/services/category/catgory.service\";\r\nimport { IUser } from \"src/app/models/IUserModel\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\ndeclare var UIkit: any;\r\n\r\n@Component({\r\n  selector: \"app-seller-show-case-product\",\r\n  templateUrl: \"./seller-show-case-product.component.html\",\r\n  styleUrls: [\"./seller-show-case-product.component.css\"],\r\n})\r\nexport class SellerShowCaseProductComponent implements OnInit {\r\n  categories: ICategory[] = [];\r\n  sellerId: string;\r\n  sellerinfo: ISeller;\r\n  sellerUrl: string;\r\n  user: IUser;\r\n  categoryId: string;\r\n  products: ProductModel[] = [];\r\n  pageNumber: number;\r\n  maximumItem: number = 20;\r\n  hasNextPage: boolean;\r\n  totalItemCount: number;\r\n\r\n  constructor(\r\n    private productService: ProductsService,\r\n    private sellerService: SellerService,\r\n    private categoryService: CatgoryService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.categoryId = params.categoryId;\r\n      this.fetchSellerProducts(this.sellerId, this.pageNumber);\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.sellerId = this.route.snapshot.paramMap.get(\"sellerId\");\r\n    this.sellerUrl = window.location.href;\r\n\r\n    let categoryId = this.route.snapshot.queryParamMap.get(\"categoryId\");\r\n    this.categoryId = categoryId ? categoryId : \"\";\r\n\r\n    this.categoryService.getCategoryByUserId(this.sellerId).subscribe((a) => {\r\n      console.log(a.data);\r\n\r\n      this.categories = a.data;\r\n    });\r\n\r\n    this.fetchSellerProducts(this.sellerId, 1);\r\n\r\n    this.sellerService.getSellerById(this.sellerId).subscribe((a) => {\r\n      this.sellerinfo = a.data;\r\n    });\r\n  }\r\n  fetchSellerProducts(userId: string, pageNumber: number) {\r\n    this.productService\r\n      .getSellerProducts(\r\n        userId,\r\n        pageNumber,\r\n        this.maximumItem,\r\n        \"\",\r\n        this.categoryId\r\n      )\r\n      .subscribe((products: ProductsApiModel) => {\r\n        this.products = products.data.data;\r\n        this.pageNumber = products.data.pager.pageNumber;\r\n        this.totalItemCount = products.data.pager.totalItemCount;\r\n        this.hasNextPage = products.data.pager.hasNextPage;\r\n      });\r\n  }\r\n  filterCategory(categoryId: string) {\r\n    this.router.navigateByUrl(\r\n      `/sellerproduct/${this.sellerId}?categoryId=${categoryId}`\r\n    );\r\n  }\r\n  clearFilterCategory() {\r\n    this.router.navigateByUrl(`/sellerproduct/${this.sellerId}`);\r\n  }\r\n  copySellerLink(): void {\r\n    navigator.clipboard.writeText(this.sellerUrl);\r\n    this.initializeNotification();\r\n  }\r\n  initializeNotification() {\r\n    UIkit.notification({\r\n      message: \"Copied!\",\r\n      status: \"primary\",\r\n      pos: \"top-center\",\r\n      timeout: 700,\r\n    });\r\n  }\r\n}\r\n","<div class=\"uk-section uk-section-default\" style=\"padding-top: 0px\">\r\n  <div class=\"uk-container\">\r\n    <div class=\"uk-card\">\r\n      <div class=\"uk-card-header\">\r\n        <div class=\"uk-grid-small uk-flex-large\" uk-grid>\r\n          <div class=\"uk-width-auto\">\r\n            <img\r\n              class=\"uk-border-circle\"\r\n              width=\"120\"\r\n              height=\"120\"\r\n              src=\"/assets/image/bag.jpg\"\r\n            />\r\n            <br />\r\n          </div>\r\n          <div class=\"uk-width-expand ml-3\">\r\n            <h2 class=\"uk-text-bold m-0\">\r\n              {{ sellerinfo?.businessName || \"Phones.ng\" }}\r\n            </h2>\r\n            <p class=\"uk-card-meta uk-margin-remove-bottom\">\r\n              {{ sellerinfo?.address }}\r\n            </p>\r\n            <p class=\"uk-text-meta uk-margin-remove-top\">\r\n              <time datetime=\"2016-04-01T19:00\">{{\r\n                sellerinfo?.phoneNumber\r\n              }}</time>\r\n            </p>\r\n            <p class=\"uk-text-meta uk-margin-remove-top\">\r\n              {{ sellerinfo?.businessEmail }}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <ul class=\"share-icons\">\r\n              <li>Share:</li>\r\n              <li>\r\n                <a class=\"uk-icon-button\" (click)=\"copySellerLink()\">\r\n                  <span\r\n                    class=\"iconify\"\r\n                    data-icon=\"akar-icons:link-chain\"\r\n                    data-width=\"18\"\r\n                    data-height=\"18\"\r\n                  ></span>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  class=\"uk-icon-button\"\r\n                  target=\"_blank\"\r\n                  [href]=\"\r\n                    'https://twitter.com/share?text=Come visit my shop on open market. Link to my page:&url=' +\r\n                    sellerUrl\r\n                  \"\r\n                >\r\n                  <span\r\n                    class=\"iconify\"\r\n                    data-icon=\"akar-icons:twitter-fill\"\r\n                    style=\"color: #57a1f2\"\r\n                    data-width=\"24\"\r\n                    data-height=\"24\"\r\n                  ></span>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  class=\"uk-icon-button\"\r\n                  target=\"_blank\"\r\n                  [href]=\"\r\n                    'https://www.facebook.com/sharer/sharer.php?u=' +\r\n                    sellerUrl +\r\n                    '&t=Come visit my shop on open market'\r\n                  \"\r\n                >\r\n                  <span\r\n                    class=\"iconify\"\r\n                    data-icon=\"akar-icons:facebook-fill\"\r\n                    style=\"color: #2a6ada\"\r\n                    data-width=\"24\"\r\n                    data-height=\"24\"\r\n                  ></span>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  class=\"uk-icon-button\"\r\n                  target=\"_blank\"\r\n                  [href]=\"'https://api.whatsapp.com/send?text=' + sellerUrl\"\r\n                >\r\n                  <span\r\n                    class=\"iconify\"\r\n                    data-icon=\"dashicons:whatsapp\"\r\n                    style=\"color: #00fb70\"\r\n                    data-width=\"24\"\r\n                    data-height=\"24\"\r\n                  ></span>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div></div>\r\n    <div class=\"uk-card-body\">\r\n      <h2 class=\"uk-text-left my-3\">Products</h2>\r\n      <div>\r\n        <ul class=\"uk-tab-bottom\" data-uk-tab=\"media: @s\">\r\n          <li\r\n            [ngClass]=\"{ 'uk-active': !categoryId || categoryId.length === 0 }\"\r\n            (click)=\"clearFilterCategory()\"\r\n          >\r\n            <a>All</a>\r\n          </li>\r\n          <li *ngFor=\"let category of categories\">\r\n            <a\r\n              [ngClass]=\"{ 'uk-active': category.id == categoryId }\"\r\n              (click)=\"filterCategory(category.id)\"\r\n              >{{ category.name }}</a\r\n            >\r\n            <!-- <a href=\"#\">{{ category.name }}</a> -->\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"uk-card-body\">\r\n      <div\r\n        class=\"\r\n          uk-grid\r\n          uk-grid-small\r\n          uk-grid-match\r\n          uk-child-width-1-2\r\n          uk-child-width-1-3@m\r\n          uk-child-width-1-4@l\r\n          uk-margin\r\n        \"\r\n      >\r\n        <app-single-product\r\n          *ngFor=\"\r\n            let product of products\r\n              | paginate\r\n                : {\r\n                    itemsPerPage: maximumItem,\r\n                    currentPage: pageNumber,\r\n                    totalItems: totalItemCount\r\n                  }\r\n          \"\r\n          [product]=\"product\"\r\n          class=\"uk-margin-bottom\"\r\n        >\r\n        </app-single-product>\r\n      </div>\r\n      <div class=\"uk-flex uk-flex-center\">\r\n        <pagination-controls\r\n          (pageChange)=\"fetchSellerProducts(sellerId, $event)\"\r\n        ></pagination-controls>\r\n      </div>\r\n      <!-- <div class=\"\">\r\n        <ul\r\n          class=\"\r\n            uk-grid\r\n            uk-grid-small\r\n            uk-grid-match\r\n            uk-child-width-1-2\r\n            uk-child-width-1-3@m\r\n            uk-child-width-1-4@l\r\n            uk-margin\r\n          \"\r\n        >\r\n          <app-single-product\r\n            *ngFor=\"\r\n              let product of products\r\n                | paginate\r\n                  : {\r\n                      itemsPerPage: maximumItem,\r\n                      currentPage: pageNumber,\r\n                      totalItems: totalItemCount\r\n                    }\r\n            \"\r\n            [product]=\"product\"\r\n            class=\"uk-margin-bottom\"\r\n          >\r\n          </app-single-product>\r\n          <li *ngFor=\"let product of products\">\r\n            <app-single-product [product]=\"product\"></app-single-product>\r\n          </li>\r\n        </ul>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</div>\r\n","export const nigeriaSates = [\r\n  { name: \"Abia\", capital: \"Umuahia\" },\r\n  { name: \"Adamawa\", capital: \"Yola\" },\r\n  { name: \"Akwa Ibom\", capital: \"Uyo\" },\r\n  { name: \"Anambra\", capital: \"Awka\" },\r\n  { name: \"Bauchi\", capital: \"Bauchi\" },\r\n  { name: \"Benue\", capital: \"Makurdi\" },\r\n  { name: \"Borno\", capital: \"Maiduguri\" },\r\n  { name: \"Bayelsa\", capital: \"Yenagoa\" },\r\n  { name: \"Cross River\", capital: \"Calabar\" },\r\n  { name: \"Delta\", capital: \"Asaba\" },\r\n  { name: \"Ebonyi\", capital: \"Abakaliki\" },\r\n  { name: \"Edo\", capital: \"Benin\" },\r\n  { name: \"Ekiti\", capital: \"Ado-Ekiti\" },\r\n  { name: \"Enugu\", capital: \"Enugu\" },\r\n  { name: \"Federal Capital Territory\", capital: \"Abuja\" },\r\n  { name: \"Gombe\", capital: \"Gombe\" },\r\n  { name: \"Jigawa\", capital: \"Dutse\" },\r\n  { name: \"Imo\", capital: \"Owerri\" },\r\n  { name: \"Kaduna\", capital: \"Kaduna\" },\r\n  { name: \"Kebbi\", capital: \"Birnin Kebbi\" },\r\n  { name: \"Kano\", capital: \"Kano\" },\r\n  { name: \"Kogi\", capital: \"Lokoja\" },\r\n  { name: \"Lagos\", capital: \"Ikeja\" },\r\n  { name: \"Katsina\", capital: \"Katsina\" },\r\n  { name: \"Kwara\", capital: \"Ilorin\" },\r\n  { name: \"Nasarawa\", capital: \"Lafia\" },\r\n  { name: \"Niger\", capital: \"Minna\" },\r\n  { name: \"Ogun\", capital: \"Abeokuta\" },\r\n  { name: \"Ondo\", capital: \"Akure\" },\r\n  { name: \"Rivers\", capital: \"Port Harcourt\" },\r\n  { name: \"Oyo\", capital: \"Ibadan\" },\r\n  { name: \"Osun\", capital: \"Osogbo\" },\r\n  { name: \"Sokoto\", capital: \"Sokoto\" },\r\n  { name: \"Plateau\", capital: \"Jos\" },\r\n  { name: \"Taraba\", capital: \"Jalingo\" },\r\n  { name: \"Yobe\", capital: \"Damaturu\" },\r\n  { name: \"Zamfara\", capital: \"Gusau\" },\r\n];\r\n","import { AuthService } from \"src/app/services/auth.service\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    let isLogin = false;\r\n\r\n    const siginData = this.authService.GetSignInData();\r\n    if (siginData) {\r\n      isLogin = siginData.canLogin;\r\n    }\r\n    if (!isLogin) {\r\n      location.href = \"/login\";\r\n    }\r\n    return isLogin;\r\n  }\r\n}\r\n","\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n\r\n\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n        return (formGroup: FormGroup) => {\r\n            const control = formGroup.controls[controlName];\r\n            const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n            if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n                // return if another validator has already found an error on the matchingControl\r\n                return;\r\n            }\r\n\r\n            // set error on matchingControl if validation fails\r\n            if (control.value !== matchingControl.value) {\r\n                matchingControl.setErrors({ mustMatch: true });\r\n            } else {\r\n                matchingControl.setErrors(null);\r\n            }\r\n        }\r\n  }\r\n\r\n","export function formatDate(date) {\r\n    return new Date(date).toLocaleString();\r\n}\r\n\r\nexport function formatDateToLocal(date) {\r\n    return new Date(date).toLocaleDateString(\r\n        'en-us', {  year: \"numeric\", month: \"short\", day: \"numeric\" }\r\n    )\r\n}","export function numberWithCommas(n): string {\r\n    let parts:string = n.toString().split(\".\");\r\n    return parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + (parts[1] ? \".\" + parts[1] : \"\");\r\n}","import { numberWithCommas } from \"./number-format\"\r\n\r\nexport function formatProductOptions(options:string){\r\n    options = options || `{\"size\":\"M\"}`\r\n    const opts:{[key:string]:string} = JSON.parse(options)\r\n    let formatOpts:string = \"\"\r\n    for(let option in opts){\r\n      formatOpts += `${option}|${opts[option]}<br>`\r\n    }\r\n    return formatOpts\r\n}\r\n\r\nexport function formatShipmentOption(options:string){\r\n    options = options || `{\"state\":\"state\",\"city\":\"city\",\"cost\":\"0\"}`\r\n    const opt:{state:string,city:string,cost:string} = JSON.parse(options)\r\n    return `${opt.state} / ${opt.city} (+NGN${numberWithCommas(opt.cost || 0)})`\r\n}","import { IUser } from \"src/app/models/IUserModel\";\r\nexport const getLoggedInUser = (): IUser => {\r\n  const user = localStorage.getItem(\"user\");\r\n  const userJson: IUser = JSON.parse(user);\r\n  return userJson;\r\n};\r\n","import {\r\n  ProductModel,\r\n  IPagerResponse,\r\n  IApiResponseModel,\r\n} from \"./products.model\";\r\nimport { ResponseModel } from \"./../shared/models/ResponseModel\";\r\n// Generated by https://quicktype.io\r\n\r\nexport interface CreateInvoiceModel {\r\n  userId: string;\r\n  billingAddress: string;\r\n  country: string;\r\n  state: string;\r\n  city: string;\r\n  createOrderDto: CreateOrderDto[];\r\n}\r\n\r\nexport interface CreateOrderDto {\r\n  productId: number;\r\n  unit: number;\r\n  price: number;\r\n  discount: number;\r\n  shipments?: string;\r\n  options?: string;\r\n  paymentOption?: string;\r\n}\r\n// Generated by https://quicktype.io\r\n\r\nexport interface InvoiceModelResponse extends ResponseModel {\r\n  data: InvoiceModel;\r\n}\r\nexport interface CreateInvoiceModelResponse extends ResponseModel {\r\n  data: InvoiceModel[];\r\n}\r\nexport interface InvoiceModel {\r\n  userId: string;\r\n  billingAddress: string;\r\n  country: string;\r\n  state: string;\r\n  city: string;\r\n  status: string;\r\n  orders: OrderModel[];\r\n  id: number;\r\n  transReferenceNo: string;\r\n  createdOn: string;\r\n  paymentOptionType: string;\r\n  isActive: boolean;\r\n  isDeleted: boolean;\r\n}\r\nexport interface PagedResponseInvoiceModel extends IApiResponseModel {\r\n  data: pagedInvoiceModel;\r\n}\r\n\r\nexport interface pagedInvoiceModel extends IPagerResponse {\r\n  data: InvoiceModel[];\r\n}\r\nexport interface OrderModel {\r\n  productId: number;\r\n  unit: number;\r\n  price: number;\r\n  discount: number;\r\n  total: number;\r\n  invoiceId: number;\r\n  id: number;\r\n  status: string;\r\n  paymentOption: string;\r\n  createdOn: string;\r\n  isActive: boolean;\r\n  isDeleted: boolean;\r\n  product: ProductModel;\r\n}\r\n\r\n// Generated by https://quicktype.io\r\n\r\nexport interface VerifyInvoiceResponseModel extends ResponseModel {\r\n  data: VerifyInvoiceModel;\r\n}\r\n\r\nexport interface VerifyInvoiceModel {\r\n  invoiceAmount: number;\r\n  amountPaid: number;\r\n  code: string;\r\n}\r\n\r\nexport const invoiceStatus = {\r\n  insufficientPayment: \"InsufficientPayment\",\r\n  pending: \"Pending\",\r\n  paid: \"Paid\",\r\n  paymentCanceled: \"PaymentCanceled\",\r\n};\r\n\r\nexport const fullInvoiceStatus = {\r\n  Paid:\"Paid\",\r\n  Confirmed:\"Confirmed\",\r\n  Canceled:\"Canceled\",\r\n  Refunded:\"Refunded\",\r\n  Deliver:\"Deliver\",\r\n  InTransit:\"InTransit\",\r\n  Pending:\"Pending\",\r\n};\r\n\r\nexport const invoiceStatusEnums = {\r\n  pending: 0,\r\n  paid: 1,\r\n  insufficientPayment: 2,\r\n  paymentCanceled: 3,\r\n};\r\n","import { AppState } from \"./../index\";\r\nimport { IUser } from \"./../../models/IUserModel\";\r\nimport { createAction, props, on } from \"@ngrx/store\";\r\nimport { produce } from \"immer\";\r\n\r\nexport const increment = createAction(\"[Counter Component] Increment\");\r\nexport const decrement = createAction(\"[Counter Component] Decrement\");\r\nexport const reset = createAction(\"[Counter Component] Reset\");\r\n\r\n\r\nexport const onIncreament = on(increment, (state: AppState) => {\r\n  const multiply = 3;\r\n  const nextState = produce(state, (draftState) => {\r\n    draftState.count += multiply;\r\n  });\r\n  return nextState;\r\n});\r\n\r\nexport const onDecreament = on(decrement, (state: AppState) => ({\r\n  ...state,\r\n  count: state.count - 1,\r\n}));\r\n\r\nexport const OnReset = on(reset, (state: AppState) => ({ ...state, count: 0 }));\r\n\r\n\r\n","import { AppState } from \"./../index\";\r\nimport { IUser } from \"./../../models/IUserModel\";\r\nimport { createAction, props, on } from \"@ngrx/store\";\r\nimport { produce } from \"immer\";\r\n\r\nexport const LoginAction = createAction(\r\n  \"[Component Login] Login\",\r\n  props<IUser>()\r\n);\r\n\r\nexport const UpdateProfileAction = createAction(\r\n  \"[Component Update Profile] Update Profile\",\r\n  props<IUser>()\r\n);\r\nexport const LogOutAction = createAction(\"[Button Logout] Logout\");\r\n\r\nexport const onLogin = on(LoginAction, (state: AppState, user: IUser) => {\r\n  const nextState = produce(state, (draftState) => {\r\n    draftState.user = user;\r\n  });\r\n  return nextState;\r\n});\r\n\r\nexport const onLogout = on(LogOutAction, (state: AppState) => {\r\n  const nextState = produce(state, (draft) => {\r\n    draft.user = null;\r\n  });\r\n  return nextState;\r\n});\r\n\r\nexport const onUpdateUser = on(\r\n  UpdateProfileAction,\r\n  (state: AppState, user: IUser) => {\r\n    const nextState = produce(state, (draftState) => {\r\n      draftState.user = user;\r\n    });\r\n    return nextState;\r\n  }\r\n);\r\n","import { ProductCartModel } from \"./../../models/products.model\";\r\n\r\nimport { AppState } from \"./../index\";\r\nimport { IUser } from \"./../../models/IUserModel\";\r\nimport { createAction, props, on } from \"@ngrx/store\";\r\nimport { produce } from \"immer\";\r\nexport const AddToCart = createAction(\r\n  \"[Button AddToCart] Add item to cart\",\r\n  props<ProductCartModel>()\r\n);\r\n\r\nexport const RemoveItemFromCart = createAction(\r\n  \"[Button RemoveFromCart] RemoveItemFromCart\",\r\n  props<{ id: number }>()\r\n);\r\nexport const IncreamentCartItem = createAction(\r\n  \"[Button IncreamentCart] IncreamentCartItem\",\r\n  props<{ id: number }>()\r\n);\r\n\r\nexport const DecreamentCartItem = createAction(\r\n  \"[Button DecreamentCart] DecreamentCartItem\",\r\n  props<{ id: number }>()\r\n);\r\nexport const UpdateCartItemUnit = createAction(\r\n  \"[Textbox UpdateCartItemUnit] UpdateCartItemUnit\",\r\n  props<{ id: number; orderedUnit: number }>()\r\n);\r\n\r\nexport const ClearCartItems = createAction(\r\n  // tslint:disable-next-line: quotemark\r\n  \"[Button ClearCartItems] Clear all cart items\"\r\n);\r\n//\r\nexport const onIncreamentCartItem = on(\r\n  IncreamentCartItem,\r\n  (state: AppState, item: { id: number }) => {\r\n    const nextState = produce(state, (draftState) => {\r\n      const itemExist = draftState.cart.find((a) => a.id === item.id);\r\n      if (itemExist) {\r\n        // Increament\r\n        itemExist.orderedUnit += 1;\r\n      }\r\n    });\r\n    return nextState;\r\n  }\r\n);\r\n//\r\n\r\nexport const onClearCartItem = on(ClearCartItems, (state: AppState) => {\r\n  const nextState = produce(state, (draftState) => {\r\n    draftState.cart = [];\r\n  });\r\n  return nextState;\r\n});\r\n\r\nexport const onDecreamentCartItem = on(\r\n  DecreamentCartItem,\r\n  (state: AppState, item: { id: number }) => {\r\n    const nextState = produce(state, (draftState) => {\r\n      const itemExist = draftState.cart.find((a) => a.id === item.id);\r\n      if (itemExist) {\r\n        // Increament\r\n        const orderedUnit = draftState.cart[itemExist.id].orderedUnit;\r\n        if (orderedUnit > 0) {\r\n          draftState.cart[item.id].orderedUnit -= 1;\r\n        }\r\n      }\r\n    });\r\n    return nextState;\r\n  }\r\n);\r\n//\r\nexport const onUpdateCartItemUnit = on(\r\n  UpdateCartItemUnit,\r\n  (state: AppState, item: { id: number; orderedUnit: number }) => {\r\n    const nextState = produce(state, (draftState) => {\r\n      const itemExist = draftState.cart.find((a) => a.id === item.id);\r\n      if (itemExist && item.orderedUnit > 0) {\r\n        itemExist.orderedUnit = Number(item.orderedUnit);\r\n      }\r\n    });\r\n    return nextState;\r\n  }\r\n);\r\n\r\nexport const onRemoveItemFromCart = on(\r\n  RemoveItemFromCart,\r\n  (state: AppState, item: { id: number }) => {\r\n    const nextState = produce(state, (draftState) => {\r\n      draftState.cart = draftState.cart.filter((a) => a.id !== item.id);\r\n    });\r\n    return nextState;\r\n  }\r\n);\r\nexport const onAddToCart = on(\r\n  AddToCart,\r\n  (state: AppState, productCart: ProductCartModel) => {\r\n    const nextState = produce(state, (draftState) => {\r\n      const item = draftState.cart.find((a) => a.id === productCart.id);\r\n      if (!item) {\r\n        // add item to cart\r\n        draftState.cart.push(productCart);\r\n      } else {\r\n        // increament cart\r\n        item.orderedUnit = Number(item.orderedUnit) + 1;\r\n      }\r\n    });\r\n    return nextState;\r\n  }\r\n);\r\n","import {\r\n  onAddToCart,\r\n  onDecreamentCartItem,\r\n  onUpdateCartItemUnit,\r\n  onRemoveItemFromCart,\r\n  onClearCartItem,\r\n} from \"./action/cart.actions\";\r\nimport { ProductCartModel } from \"./../models/products.model\";\r\nimport { onIncreament, onDecreament, OnReset } from \"./action/actions\";\r\nimport { createReducer, Action } from \"@ngrx/store\";\r\n\r\nimport { IUser } from \"../models/IUserModel\";\r\nimport { onLogin, onLogout, onUpdateUser } from \"./action/auth.action\";\r\n\r\nexport interface AppState {\r\n  count: number;\r\n  user: IUser;\r\n  cart: ProductCartModel[];\r\n}\r\nexport const initialState: AppState = {\r\n  count: 0,\r\n  user: null,\r\n  cart: [],\r\n};\r\n\r\nexport const rootReducer = \"counterReducer\";\r\n// tslint:disable-next-line: variable-name\r\nlet _counterReducer;\r\n\r\n_counterReducer = createReducer(\r\n  initialState,\r\n  onIncreament,\r\n  onDecreament,\r\n  OnReset,\r\n  onLogin,\r\n  onLogout,\r\n  onUpdateUser,\r\n  onAddToCart,\r\n  onRemoveItemFromCart,\r\n  onDecreamentCartItem,\r\n  onUpdateCartItemUnit,\r\n  onClearCartItem\r\n);\r\n\r\nexport function counterReducer(state: AppState, action: Action) {\r\n  return _counterReducer(state, action);\r\n}\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"..\";\r\nimport { selectState } from \"./selector\";\r\n\r\nconst selectUser = (state: AppState) => state.user;\r\nexport const getUser = createSelector(selectState, selectUser);\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"..\";\r\nimport { selectState } from \"./selector\";\r\n\r\nconst selectCart = (state: AppState) => state.cart;\r\nconst selectCartCount = (state: AppState) => state.cart.length;\r\n\r\nexport const getCart = createSelector(selectState, selectCart);\r\nexport const getCartCount = createSelector(selectState, selectCartCount);\r\n","import { rootReducer } from \"./../index\";\r\nimport { createFeatureSelector } from \"@ngrx/store\";\r\nimport { AppState } from \"..\";\r\n\r\nexport const selectState = createFeatureSelector<AppState>(rootReducer);\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { get } from 'lodash';\r\nimport { Observable } from 'rxjs';\r\nimport { getLoggedInUser } from '../helpers/userUtility';\r\nimport { SellerService } from '../services/seller/seller.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class sellerApproveStatusApproveRouteResolver implements Resolve<any> {\r\n    constructor(private sellerS: SellerService) { }\r\n    async resolve(): Promise<Observable<any> | Promise<any> | any> {\r\n        const sellerApprovalStatus = get(getLoggedInUser(), 'sellerApprovalStatus', null);\r\n        return this.switchState(sellerApprovalStatus);\r\n    }\r\n    switchState(switchData: any) {\r\n        //states ::::: approve, pending, canceled, null, \"\"\r\n        if (switchData === 'approved') {\r\n            return this.sellerS.sellerRegisterationFormStatus.approved;\r\n        } else if (switchData === 'pending') {\r\n            return this.sellerS.sellerRegisterationFormStatus.pending;\r\n        } else {\r\n            return this.sellerS.sellerRegisterationFormStatus.nully;\r\n        }\r\n    }\r\n}\r\n","import { environment } from \"./../../environments/environment\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ApiAppUrlService {\r\n  public baseApiUrl = environment.identityApi;\r\n  public ecommerceBaseUrl = environment.ecommerceApi;\r\n  \r\n  constructor() {}\r\n}\r\n","import { UpdateProfileAction } from \"./../reducers/action/auth.action\";\r\nimport { IUpdatePassword } from \"./../models/auth-model\";\r\nimport { IResponseModel } from \"./../shared/models/IResponseModel\";\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport {Observable, BehaviorSubject, of, Subscription} from \"rxjs\";\r\nimport { IUser } from \"../models/IUserModel\";\r\nimport { ApiAppUrlService } from \"./api-app-url.service\";\r\nimport {\r\n  SignInModel,\r\n  SiginResponseModel,\r\n  ISignIn,\r\n} from \"../models/signin-model\";\r\nimport { RegisterModel, RegisterResponseModel } from \"../models/register-model\";\r\nimport { IForgetModel, IForgetPasswordModel } from \"../models/auth-model\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { AppState } from \"../reducers\";\r\nimport { LoginAction, LogOutAction } from \"../reducers/action/auth.action\";\r\nimport {FacebookLoginProvider, GoogleLoginProvider, SocialAuthService} from \"angularx-social-login\";\r\nimport {NgxUiLoaderService} from \"ngx-ui-loader\";\r\nimport {delay} from \"rxjs/operators\";\r\nimport {Router} from \"@angular/router\";\r\nimport {JwtHelperService} from \"./jwt-helper.service\";\r\n\r\nexport interface IAuth {\r\n  isLoggedId: boolean;\r\n  token: string;\r\n  userId: string;\r\n  profileUrl: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthService {\r\n  public isLogin: BehaviorSubject<boolean>;\r\n  tokenSubscription = new Subscription();\r\n  decodedJwt;\r\n  constructor(\r\n    private api: ApiAppUrlService,\r\n    private http: HttpClient,\r\n    private store: Store<AppState>,\r\n    private ngxService: NgxUiLoaderService,\r\n    private socialAuthService: SocialAuthService,\r\n    private router: Router,\r\n    private jwtHelperService: JwtHelperService\r\n  ) {\r\n    const userData = this.GetSignInData();\r\n    console.log(\"user Data\", userData);\r\n    if (userData != null) {\r\n      this.isLogin = new BehaviorSubject<boolean>(true);\r\n    } else {\r\n      this.isLogin = new BehaviorSubject<boolean>(false);\r\n    }\r\n  }\r\n\r\n  public signIn(signInModel: SignInModel): Observable<SiginResponseModel> {\r\n    return this.http.post<SiginResponseModel>(\r\n      this.api.baseApiUrl + \"Auth/Login\",\r\n      signInModel\r\n    );\r\n  }\r\n\r\n  public register(\r\n    registerModel: RegisterModel\r\n  ): Observable<RegisterResponseModel> {\r\n    return this.http.post<RegisterResponseModel>(\r\n      this.api.baseApiUrl + \"Auth/Register\",\r\n      registerModel\r\n    );\r\n  }\r\n\r\n  public getCurrentUser(): Observable<IUser> {\r\n    return this.http.get<IUser>(this.api.baseApiUrl + \"Auth/current-user\");\r\n  }\r\n\r\n  public GoogleSignIn(token): Observable<SiginResponseModel> {\r\n    return this.http.post<SiginResponseModel>(\r\n      this.api.baseApiUrl + \"Auth/Google\",\r\n      { idToken: token }\r\n    );\r\n  }\r\n\r\n  signInWithGoogle(): void {\r\n    this.ngxService.startLoader(\"loader-01\");\r\n    this.socialAuthService.initState.subscribe(() => {\r\n      this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID)\r\n        .then(data => {\r\n          this.GoogleSignIn(data.idToken)\r\n            .subscribe(signInResponse => {\r\n              this.SetAuthLocalStorage(signInResponse)\r\n              // this.logoutAndRedirectOnTokenExpiration(signInResponse.data.auth_token.token)\r\n            })\r\n          this.router.navigate([\"\"]);\r\n          this.ngxService.stopLoader(\"loader-01\");\r\n        });\r\n    })\r\n  }\r\n\r\n  public FacebookSignIn(userId, token): Observable<SiginResponseModel> {\r\n    return this.http.post<SiginResponseModel>(\r\n      this.api.baseApiUrl + \"Auth/Facebook\",\r\n      { token: token, userId: userId }\r\n    );\r\n  }\r\n\r\n  signInWithFacebook(): void {\r\n    this.ngxService.startLoader(\"loader-01\");\r\n    this.socialAuthService.initState.subscribe(() => {\r\n      this.socialAuthService.signIn(FacebookLoginProvider.PROVIDER_ID)\r\n        .then(data => {\r\n          this.FacebookSignIn(data.id, data.authToken)\r\n            .subscribe(signInResponse => {\r\n              this.SetAuthLocalStorage(signInResponse);\r\n            })\r\n          this.router.navigate([\"\"]);\r\n          this.ngxService.stopLoader(\"loader-01\");\r\n        })\r\n    })\r\n  }\r\n\r\n  expirationCounter(timeout): void {\r\n    this.tokenSubscription.unsubscribe();\r\n    this.tokenSubscription = of(null).pipe(delay(timeout)).subscribe(() => {\r\n      this.Logout();\r\n      this.router.navigate([\"./auth\"]);\r\n    })\r\n  }\r\n\r\n  logoutAndRedirectOnTokenExpiration(token: string): void {\r\n    this.decodedJwt = this.jwtHelperService.getDecodedAccessToken(token);\r\n    this.expirationCounter((this.decodedJwt.exp - this.decodedJwt.iat)*1000);\r\n  }\r\n\r\n  public SendForgetPassword(forget: IForgetModel): Observable<IResponseModel> {\r\n    return this.http.post<IResponseModel>(\r\n      this.api.baseApiUrl + \"Auth/Password/forgot\",\r\n      forget\r\n    );\r\n  }\r\n\r\n  public ForgetPassword(\r\n    forgetPassword: IForgetPasswordModel\r\n  ): Observable<IResponseModel> {\r\n    return this.http.patch<IResponseModel>(\r\n      this.api.baseApiUrl + \"auth/Password/reset\",\r\n      forgetPassword\r\n    );\r\n  }\r\n\r\n  public SendConfirmationEmail(email: string): Observable<IResponseModel> {\r\n    return this.http.get<IResponseModel>(\r\n      this.api.baseApiUrl + \"auth/verification/resend/?email=\" + email\r\n    );\r\n  }\r\n\r\n  public ConfirmEmail(\r\n    email: string,\r\n    token: string\r\n  ): Observable<IResponseModel> {\r\n    return this.http.get<IResponseModel>(\r\n      this.api.baseApiUrl + `Auth/verification?userId=${email}&token=${token}`\r\n    );\r\n  }\r\n\r\n  public SetAuthLocalStorage(a: SiginResponseModel) {\r\n    localStorage.setItem(\"token\", a.data.auth_token);\r\n    localStorage.setItem(\"userId\", a.data.user.id);\r\n    localStorage.setItem(\"user\", JSON.stringify(a.data.user));\r\n    localStorage.setItem(\"role\", JSON.stringify(a.data.roles));\r\n    localStorage.setItem(\"siginResponse\", JSON.stringify(a.data));\r\n    this.store.dispatch(LoginAction(a.data.user));\r\n  }\r\n\r\n  public Logout() {\r\n    localStorage.clear();\r\n    this.store.dispatch(LogOutAction());\r\n  }\r\n\r\n  public GetSignInData(): ISignIn {\r\n    const datastr = localStorage.getItem(\"siginResponse\");\r\n    const data = JSON.parse(datastr) as ISignIn;\r\n\r\n    return data;\r\n  }\r\n\r\n  public UpdatePassword(\r\n    updateUser: IUpdatePassword\r\n  ): Observable<IResponseModel> {\r\n    return this.http.patch<IResponseModel>(\r\n      this.api.baseApiUrl + \"auth/password/change\",\r\n      updateUser\r\n    );\r\n  }\r\n\r\n  public UpdateUser(user: IUser) {\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n    const sigin = this.GetSignInData();\r\n    sigin.user = user;\r\n    localStorage.setItem(\"siginResponse\", JSON.stringify(sigin));\r\n    this.store.dispatch(UpdateProfileAction(user));\r\n  }\r\n}\r\n","import { CategoryResponse, ICategory } from \"./../../models/CategoryModels\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ApiAppUrlService } from \"../api-app-url.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CatgoryService {\r\n  baseUrl: string;\r\n  constructor(private apiUrls: ApiAppUrlService, private http: HttpClient) {\r\n    this.baseUrl = apiUrls.ecommerceBaseUrl;\r\n  }\r\n\r\n  public GetCategory(): Observable<CategoryResponse> {\r\n    return this.http.get<CategoryResponse>(this.baseUrl + \"categories\");\r\n  }\r\n\r\n  getCategoryByUserId(id: string): Observable<CategoryResponse> {\r\n    return this.http.get<CategoryResponse>(\r\n      this.baseUrl + `categories?userId=${id}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n\r\n  constructor() { }\r\n  getClientErrorMessage(error: Error): string {\r\n    return error.message ?\r\n           error.message :\r\n           error.toString();\r\n  }\r\n\r\n  getServerErrorMessage(error: HttpErrorResponse): string {\r\n    return navigator.onLine ?\r\n           error.message :\r\n           'No Internet Connection';\r\n  }\r\n\r\n  getControlError(controls):string[]{\r\n    let errs:string[] = [];\r\n    for(const name in controls){\r\n        if(controls[name].hasError('required')){\r\n          errs.push(name+',');\r\n        }\r\n    }\r\n    return this.makeErrorReadable(errs);\r\n  }\r\n\r\n  setControlEditError(controls:string[],absControl:AbstractControl){\r\n    let errs:string[] = [];\r\n    controls.forEach((control)=>{\r\n      if(absControl.get(control.toLowerCase()).hasError('required')){\r\n        errs.push(control+',');\r\n      }\r\n    });\r\n    return this.makeErrorReadable(errs);\r\n  }\r\n\r\n  makeErrorReadable(errs:string[]){\r\n    const lastIndex:number = errs.length - 1;\r\n    if(lastIndex > -1){\r\n      errs[lastIndex] = errs[lastIndex].replace(',','');\r\n      if(errs.length > 1){\r\n        errs[lastIndex - 1] = errs[lastIndex - 1].replace(',','');\r\n        errs[lastIndex] = 'and '+errs[lastIndex];\r\n      } \r\n    }\r\n    return errs;\r\n  }\r\n}\r\n","import { ResponseModel } from \"./../../shared/models/ResponseModel\";\r\nimport { Observable } from \"rxjs\";\r\nimport {\r\n  CreateInvoiceModel,\r\n  InvoiceModelResponse,\r\n  VerifyInvoiceResponseModel,\r\n  pagedInvoiceModel,\r\n  PagedResponseInvoiceModel,\r\n  CreateInvoiceModelResponse,\r\n} from \"./../../models/invoice.model\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { ApiAppUrlService } from \"./../api-app-url.service\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class InvoiceService {\r\n  getProducts(\r\n    pageNumber: number,\r\n    maximumItem: number,\r\n    search: string,\r\n    categoryId: string,\r\n    minValue: number,\r\n    maxValue: number\r\n  ) {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  baseUrl: string;\r\n  constructor(private apiUrls: ApiAppUrlService, private http: HttpClient) {\r\n    this.baseUrl = apiUrls.ecommerceBaseUrl;\r\n  }\r\n\r\n  createInvoice(\r\n    createInvoiceModel: CreateInvoiceModel\r\n  ): Observable<CreateInvoiceModelResponse> {\r\n    return this.http.post<CreateInvoiceModelResponse>(\r\n      this.baseUrl + \"invoice\",\r\n      createInvoiceModel\r\n    );\r\n  }\r\n\r\n  getById(id: any): Observable<InvoiceModelResponse> {\r\n    return this.http.get<InvoiceModelResponse>(this.baseUrl + \"invoice/\" + id);\r\n  }\r\n\r\n  verifyInvoice(invoiceId): Observable<VerifyInvoiceResponseModel> {\r\n    return this.http.get<VerifyInvoiceResponseModel>(\r\n      this.baseUrl + `invoice/${invoiceId}/verifypayment/` + invoiceId\r\n    );\r\n  }\r\n\r\n  updateStatus(invoiceId, statusEnum): Observable<ResponseModel> {\r\n    return this.http.patch<ResponseModel>(\r\n      this.baseUrl + `invoice/${invoiceId}/status/${statusEnum}`,\r\n      {}\r\n    );\r\n  }\r\n\r\n  getUserInvoices(\r\n    userId: string,\r\n    pageNumber: number = 1,\r\n    maxItem = 50\r\n  ): Observable<PagedResponseInvoiceModel> {\r\n    return this.http.get<PagedResponseInvoiceModel>(\r\n      this.baseUrl +\r\n        `invoice/user/${userId}/?pageNumber=${pageNumber}&maxItem=${maxItem}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtHelperService {\r\n\r\n  constructor() { }\r\n\r\n  getDecodedAccessToken(token: string): any {\r\n      return jwtDecode(token);\r\n  }\r\n\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { ApiAppUrlService } from \"../api-app-url.service\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from \"rxjs\";\r\nimport { OrderResponce, Order, OrderApiModel,OrderStatus } from \"./../../models/order.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n  baseUrl:string = \"\";\r\n  constructor(private apiUrls: ApiAppUrlService, private http: HttpClient) {\r\n    this.baseUrl = apiUrls.ecommerceBaseUrl;\r\n  }\r\n\r\n  public getPrice(orders:Order[]):string{\r\n    return orders.reduce((t,i)=>t+(i.price*i.unit),0)\r\n      .toFixed(2).toLocaleString();\r\n  }\r\n\r\n  getNewOrders(userId:string,pageNumber: number = 1,maxItem = 50): \r\n  Observable<OrderResponce>{\r\n    return this.http.get<OrderResponce>(\r\n      this.baseUrl + `seller/${userId}/orders/new/?\r\n      pageNumber=${pageNumber}&maxItem=${maxItem}`\r\n    );\r\n  }\r\n\r\n  getOrdersByStatus(\r\n    userId:string,status:string,\r\n    pageNumber:number = 1,maxItem = 50\r\n  ):Observable<OrderApiModel>{\r\n    return this.http.get<OrderApiModel>(\r\n      `${this.baseUrl}seller/${userId}/orders/${status}/?\r\n      pageNumber=${pageNumber}&maxItem=${maxItem}`\r\n    );\r\n  }\r\n\r\n  UpdateStatus(\r\n    orderId:string,orderStatus:OrderStatus\r\n  ):Observable<OrderResponce>{\r\n    return this.http.put<OrderResponce>(\r\n      `${this.baseUrl}seller/orders/${orderId}/status`,orderStatus \r\n      // `${this.baseUrl}seller/orders/${orderId}/status/${status}`,[] \r\n    );\r\n  }\r\n}\r\n","import {\r\n  ProductsApiModel,\r\n  ProductModel,\r\n  CreateProductOption,\r\n  ProductShipment,\r\n  CreateProductModel,\r\n  CreateProductResponse,\r\n  EditProductItem,\r\n  MostSellingResponse,\r\n  OverviewApiModel,\r\n  CreateProductOptionResponse,\r\n  ProductShipmentResponse,\r\n  CreateShipmentModel,\r\n} from \"../../models/products.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { CategoryResponse } from \"./../../models/CategoryModels\";\r\nimport { IUser } from \"src/app/models/IUserModel\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { ApiAppUrlService } from \"../api-app-url.service\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ProductsService {\r\n  baseUrll = \"\";\r\n  baseUrl = \"\";\r\n\r\n  constructor(private apiUrls: ApiAppUrlService, private http: HttpClient) {\r\n    this.baseUrl = apiUrls.ecommerceBaseUrl;\r\n  }\r\n\r\n  public GetCategory(): Observable<CategoryResponse> {\r\n    return this.http.get<CategoryResponse>(this.baseUrll + \"categories\");\r\n  }\r\n\r\n  getProducts(\r\n    pageNumber: number = 1,\r\n    maxItem = 50,\r\n    search = \"\",\r\n    categoryId = \"\",\r\n    minPrice = 10,\r\n    maxPrice = 500000\r\n  ): Observable<ProductsApiModel> {\r\n    return this.http.get<ProductsApiModel>(\r\n      this.baseUrl +\r\n        `products?pageNumber=${pageNumber}&maxItem=${maxItem}&search=${search}&categoryId=${categoryId}&minPrice=${minPrice}&maxPrice=${maxPrice}`\r\n    );\r\n  }\r\n\r\n  getSellerProducts(\r\n    userId: string,\r\n    pageNumber: number = 1,\r\n    maxItem = 50,\r\n    search = \"\",\r\n    categoryId = \"\",\r\n    min = 10,\r\n    max = 500000,\r\n    type = \"All\",\r\n    startDate = \"\",\r\n    endDate = \"\",\r\n    productSort = \"Date\",\r\n    byAscending = false\r\n  ): Observable<ProductsApiModel> {\r\n    return this.http.get<ProductsApiModel>(\r\n      this.baseUrl +\r\n        `seller/${userId}/products?pageNumber=${pageNumber}&maxItem=${maxItem}&search=${search}&min=${min}&max=${max}&categoryId=${categoryId}&type=${type}&startDate=${startDate}&endDate=${endDate}&productSort=${productSort}&byAscending=${byAscending}`\r\n    );\r\n  }\r\n\r\n  getNewProducts(\r\n    pageNumber: number = 1,\r\n    maxItem = 50\r\n  ): Observable<ProductsApiModel> {\r\n    return this.http.get<ProductsApiModel>(\r\n      this.baseUrl + `products/new/?pageNumber=${pageNumber}&maxItem=${maxItem}`\r\n    );\r\n  }\r\n\r\n  createProduct(\r\n    product: CreateProductModel\r\n  ): Observable<CreateProductResponse> {\r\n    return this.http.post<CreateProductResponse>(\r\n      this.baseUrl + \"products\",\r\n      product\r\n    );\r\n  }\r\n\r\n  UpdateProduct(\r\n    productId: number,\r\n    product: CreateProductModel\r\n  ): Observable<CreateProductResponse> {\r\n    return this.http.put<CreateProductResponse>(\r\n      `${this.baseUrl}products/${productId}`,\r\n      product\r\n    );\r\n  }\r\n\r\n  getProductId(pid: ProductModel): Observable<ProductModel> {\r\n    return this.http.get<ProductModel>(this.baseUrl + `products?id=${pid.id}`);\r\n  }\r\n\r\n  getProductOverview(\r\n    userId: string\r\n    // Type: string,\r\n    // startDate: string = \"\",\r\n    // endDate: string = \"\",\r\n  ): Observable<OverviewApiModel> {\r\n    return this.http.get<OverviewApiModel>(\r\n      this.baseUrl + `seller/${userId}/overview/` //?Type${Type}&StartDate${startDate}&EndDate${endDate}\r\n    );\r\n  }\r\n\r\n  getMostSelling(userId: string = \"\"): Observable<MostSellingResponse> {\r\n    return this.http.get<MostSellingResponse>(\r\n      this.baseUrl + `seller/${userId}/most-selling`\r\n    );\r\n  }\r\n\r\n  getNewOrders(\r\n    userId: IUser,\r\n    PageNumber: number = 1,\r\n    MaxIttem = 4\r\n  ): Observable<ProductsApiModel> {\r\n    return this.http.get<ProductsApiModel>(\r\n      this.baseUrl +\r\n        `seller/${userId.id}/orders/new/?pageNumber${PageNumber}&MaxItem${MaxIttem}`\r\n    );\r\n  }\r\n\r\n  getProductById(productId: string): Observable<EditProductItem> {\r\n    return this.http.get<EditProductItem>(\r\n      this.baseUrl + `products/${productId}`\r\n    );\r\n  }\r\n\r\n  deleteProduct(productId: number) {\r\n    return this.http.delete(this.baseUrl + `products/${productId}`);\r\n  }\r\n\r\n  createProductOption(\r\n    productId: number,\r\n    option: CreateProductOption\r\n  ): Observable<CreateProductOptionResponse> {\r\n    return this.http.post<CreateProductOptionResponse>(\r\n      this.baseUrl + `productoption?productId=${productId}`,\r\n      option\r\n    );\r\n  }\r\n\r\n  UpdateProductOption(\r\n    productOptionId: number,\r\n    productOption: CreateProductOption\r\n  ): Observable<CreateProductOptionResponse> {\r\n    return this.http.put<CreateProductOptionResponse>(\r\n      `${this.baseUrl}productoption/${productOptionId}`,\r\n      productOption\r\n    );\r\n  }\r\n\r\n  deleteProductOption(productOptionId: number) {\r\n    return this.http.delete(this.baseUrl + `productoption/${productOptionId}`);\r\n  }\r\n\r\n  createProductShipment(\r\n    productId: number,\r\n    shipment: CreateShipmentModel\r\n  ): Observable<ProductShipmentResponse> {\r\n    return this.http.post<ProductShipmentResponse>(\r\n      this.baseUrl + `productshipment?productId=${productId}`,\r\n      shipment\r\n    );\r\n  }\r\n\r\n  UpdateProductShipment(\r\n    productShipmentId: number,\r\n    productOption: ProductShipment\r\n  ): Observable<ProductShipmentResponse> {\r\n    return this.http.put<ProductShipmentResponse>(\r\n      `${this.baseUrl}productshipment/${productShipmentId}`,\r\n      productOption\r\n    );\r\n  }\r\n\r\n  deleteProductShipment(productShipmentId: number) {\r\n    return this.http.delete(\r\n      `${this.baseUrl}productshipment/${productShipmentId}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RequestService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * GET wrapper.\r\n   *\r\n   * @param endpoint - Full path.\r\n   */\r\n  get<T>(endpoint: string, options = {}): Observable<T> {\r\n    return this.http.get<T>(endpoint, options);\r\n  }\r\n\r\n  /**\r\n   * DELETE wrapper.\r\n   *\r\n   * @param endpoint - Full path.\r\n   */\r\n  delete<T>(endpoint: string): Observable<T> {\r\n    return this.http.delete<T>(endpoint);\r\n  }\r\n\r\n  /**\r\n   * POST wrapper.\r\n   *\r\n   * @param endpoint - Full path.\r\n   * @param data - Post data.\r\n   */\r\n  post<T>(endpoint: string, data: any, options = {}): Observable<T> {\r\n    return this.http.post<T>(endpoint, data, options);\r\n  }\r\n\r\n  /**\r\n   * PUT wrapper.\r\n   *\r\n   * @param endpoint - Full path.\r\n   * @param data - Put data.\r\n   */\r\n  put<T>(endpoint: string, data: any): Observable<T> {\r\n    return this.http.put<T>(endpoint, data);\r\n  }\r\n\r\n  /**\r\n   * PATCH wrapper.\r\n   *\r\n   * @param endpoint - Full path.\r\n   * @param data - Patch data.\r\n   */\r\n  patch<T>(endpoint: string, data: any): Observable<T> {\r\n    return this.http.patch<T>(endpoint, data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { getLoggedInUser } from 'src/app/helpers/userUtility';\r\nimport { IUser } from 'src/app/models/IUserModel';\r\nimport { GetSeller, ISeller } from 'src/app/models/sellerModel';\r\nimport { ResponseModel } from 'src/app/shared/models/ResponseModel';\r\nimport { ApiAppUrlService } from '../api-app-url.service';\r\nimport { RequestService } from '../request/request.service';\r\n\r\n\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SellerService {\r\n  loggedInUser: IUser = getLoggedInUser();\r\n  baseUrl = \"\";\r\n  sellerRegisterationFormStatus = {\r\n    approved: 'approved',\r\n    pending: 'pending',\r\n    canceled: 'canceled',\r\n    nully: 'nully',\r\n  };\r\n\r\n  constructor(private reqS: RequestService, private apiUrls: ApiAppUrlService,private http: HttpClient) {\r\n    this.baseUrl = this.apiUrls.baseApiUrl;\r\n  }\r\n\r\n  \r\n\r\n  registerSeller(data: ISeller) {\r\n    const query = `${ this.baseUrl }users/${ this.loggedInUser.id }/seller`;\r\n    return this.reqS.put<ResponseModel>(query, data)\r\n      .pipe(\r\n        switchMap((val) => {\r\n          return this.updateUserSellerDetails(val, data);\r\n        }),\r\n      );\r\n  }\r\n  updateUserSellerDetails(val: ResponseModel, data: ISeller): Observable<any> {\r\n    const loggedInUser = getLoggedInUser();\r\n    const newData = {\r\n      ...loggedInUser,\r\n      ...data,\r\n      sellerApprovalStatus: this.sellerRegisterationFormStatus.pending,\r\n    };\r\n    localStorage.setItem(\"user\", JSON.stringify(newData));\r\n    return of({\r\n      user: {\r\n        ...newData,\r\n      },\r\n      response: {\r\n        ...val\r\n      }\r\n    });\r\n  }\r\n  getSellerById(id: string): Observable<GetSeller> {\r\n    return this.http.get<GetSeller>(\r\n      this.baseUrl + `users/${id}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ToastrService as Toastr } from \"ngx-toastr\";\r\n\r\nexport const toastOptions = {\r\n  positionClass: \"toast-bottom-full-width\",\r\n  preventDuplicates: false,\r\n};\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ToastrService {\r\n  constructor(private toastr: Toastr) {}\r\n\r\n  success(message: string, title = \"\") {\r\n    this.toastr.success(message, title);\r\n  }\r\n  info(message: string, title = \"\") {\r\n    this.toastr.info(message, title);\r\n  }\r\n  error(message: string, title = \"\") {\r\n    this.toastr.error(message, title);\r\n  }\r\n  warining(message: string, title = \"\") {\r\n    this.toastr.warning(message, title);\r\n  }\r\n}\r\n","import { IResponseModel } from \"./../../shared/models/IResponseModel\";\r\nimport { Observable } from \"rxjs\";\r\nimport { IUpdateUser, IUserResponse } from \"./../../models/IUserModel\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ApiAppUrlService } from \"../api-app-url.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserService {\r\n  constructor(private api: ApiAppUrlService, private http: HttpClient) {}\r\n\r\n  updateUser(userInfo: IUpdateUser): Observable<IResponseModel> {\r\n    return this.http.put<IResponseModel>(\r\n      this.api.baseApiUrl + \"users\",\r\n      userInfo\r\n    );\r\n  }\r\n\r\n  getCurrentUser(): Observable<IUserResponse> {\r\n    return this.http.get<IUserResponse>(\"auth/getcurrentuser\");\r\n  }\r\n\r\n  getUserById(userId:string): \r\n  Observable<IUserResponse>{\r\n    return this.http.get<IUserResponse>(\r\n      this.api.baseApiUrl + `users/${userId}`\r\n    );\r\n  }\r\n}\r\n","import { ApiAppUrlService } from \"./../services/api-app-url.service\";\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpRequest,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private api: ApiAppUrlService) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const token: string = localStorage.getItem(\"token\");\r\n    let authReq = req.clone();\r\n    const identityUrl = authReq.url.search(this.api.baseApiUrl);\r\n    const ecommerceUrl = authReq.url.search(this.api.ecommerceBaseUrl);\r\n    if (identityUrl >= 0 || ecommerceUrl >= 0) {\r\n      if (token) {\r\n        authReq = req.clone({\r\n          headers: req.headers.set(\"Authorization\", \"Bearer \" + token),\r\n        });\r\n      }\r\n    }\r\n\r\n    console.log(\"request cloned\", authReq);\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Development in Process</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-faqs',\r\n  templateUrl: './faqs.component.html',\r\n  styleUrls: ['./faqs.component.css']\r\n})\r\nexport class FaqsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Development in Process</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-features',\r\n  templateUrl: './features.component.html',\r\n  styleUrls: ['./features.component.css']\r\n})\r\nexport class FeaturesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Development in Process!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"footer\">\r\n  <div class=\"default-width\">\r\n    <div class=\"uk-flex uk-flex-between content\">\r\n      <div class=\"first\">\r\n        <h1>\r\n          Connect <br />\r\n          with us\r\n        </h1>\r\n        <div style=\"margin-bottom: 16.64px\">\r\n          <img\r\n            src=\"https://res.cloudinary.com/mindset/image/upload/v1628317967/Vector_iycrsh.png\"\r\n            alt=\"\"\r\n            style=\"margin-right: 45.05px\"\r\n          />\r\n          <img\r\n            src=\"https://res.cloudinary.com/mindset/image/upload/v1628317967/Vector2_grxwev.png\"\r\n            alt=\"\"\r\n            style=\"margin-right: 45.05px\"\r\n          />\r\n          <img\r\n            src=\"https://res.cloudinary.com/mindset/image/upload/v1628317967/Vector3_yc0qhv.png\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <h3>\r\n          or email us at <br />\r\n          <a href=\"#\">info@openmarket.com</a>\r\n        </h3>\r\n      </div>\r\n      <div class=\"uk-flex uk-flex-between privacy\">\r\n        <div>\r\n          <h3>Privacy</h3>\r\n          <p><a href=\"cookies\" style=\"margin-right: 64px\">Cookies Policy</a></p>\r\n          <p><a href=\"private-policy\">Privacy Policy</a></p>\r\n          <p><a href=\"terms\">Terms & Condition</a></p>\r\n        </div>\r\n        <div style=\"margin-right: 64px\">\r\n          <h3>Get Help</h3>\r\n          <p><a href=\"faqs\" style=\"margin-right: 64px\">FAQs</a></p>\r\n          <p><a href=\"contact\">Contact Us</a></p>\r\n        </div>\r\n        <div>\r\n          <h3>Rena Market</h3>\r\n          <p><a href=\"/features\">What we do</a></p>\r\n          <p><a href=\"/landing\">About Us</a></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"right\">\r\n      <a href=\"#\">Copyright © 2020 Open Market. All rights reserved.</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { getCartCount } from \"./../../../reducers/selectors/cart.selector\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { getUser } from \"./../../../reducers/selectors/auth.selector\";\r\nimport { IUser } from \"./../../../models/IUserModel\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { AppState } from \"src/app/reducers\";\r\nimport { ICategory } from \"src/app/models/CategoryModels\";\r\nimport { CatgoryService } from \"src/app/services/category/catgory.service\";\r\n\r\n@Component({\r\n  selector: \"app-header\",\r\n  templateUrl: \"./header.component.html\",\r\n  styleUrls: [\"./header.component.css\"],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  user$: Observable<IUser>;\r\n  cartCount$: Observable<number>;\r\n  categories: ICategory[] = [];\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private authService: AuthService,\r\n    private categoryService: CatgoryService,\r\n  ) {\r\n    this.categoryService.GetCategory().subscribe((a) => {\r\n      this.categories = a.data;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.user$ = this.store.select(getUser);\r\n    this.cartCount$ = this.store.select(getCartCount);\r\n  }\r\n  logout() {\r\n    this.authService.Logout();\r\n  }\r\n}\r\n","<div\r\n  data-uk-sticky=\"sel-target: .uk-navbar-container; cls-active: uk-navbar-sticky\"\r\n>\r\n  <nav\r\n    class=\"\r\n      uk-navbar\r\n      uk-navbar-container\r\n      uk-margin\r\n      uk-padding-left\r\n      uk-padding-right\r\n      uk-box-shadow-medium\r\n    \"\r\n    uk-navbar\r\n  >\r\n    <div class=\"uk-navbar-left\">\r\n      <a\r\n        class=\"uk-navbar-toggle uk-hidden@m\"\r\n        uk-toggle=\"target: #offcanvas-nav\"\r\n      >\r\n        <span uk-navbar-toggle-icon></span>\r\n      </a>\r\n      <a class=\"uk-navbar-item logo-text\" href=\"#\">\r\n        <img\r\n          src=\"../../../../assets/logos/Rena-Market-Transparent-WHT-2.png\"\r\n          alt=\"RENA MARKET\"\r\n          width=\"120\"\r\n      /></a>\r\n    </div>\r\n\r\n    <div class=\"uk-navbar-center uk-visible@m\">\r\n      <ul class=\"uk-navbar-nav\">\r\n        <li class=\"uk-active\"><a routerLink=\"/\">Home</a></li>\r\n        <li></li>\r\n        <li class=\"\"><a routerLink=\"/landing\">Overview</a></li>\r\n        <li>\r\n          <a href=\"#\">Categories</a>\r\n          <div class=\"uk-navbar-dropdown\">\r\n            <ul class=\"uk-nav uk-navbar-dropdown-nav\">\r\n              <li *ngFor=\"let category of categories\">\r\n                <a href=\"/products/?categoryId={{ category.id }}\">{{\r\n                  category.name\r\n                }}</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <a routerLink=\"/seller\">Sell</a>\r\n          <!-- <div class=\"uk-navbar-dropdown\">\r\n            <ul class=\"uk-nav uk-navbar-dropdown-nav\">\r\n              <li>\r\n                <a\r\n                  routerLink=\"/sellerproduct/53e9ff11-a08d-4518-bfd6-2edac4678393\"\r\n                >\r\n                  ShowCaseProduct\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div> -->\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"uk-navbar-right\">\r\n      <div class=\"uk-navbar-item\">\r\n        <ul class=\"uk-iconnav\">\r\n          <li>\r\n            <a routerLink=\"/cart\">\r\n              <span\r\n                class=\"iconify\"\r\n                data-icon=\"mdi:cart\"\r\n                data-inline=\"false\"\r\n                style=\"width: 20px; height: 20px\"\r\n              ></span>\r\n              <span class=\"uk-badge backgound-dark-green\">{{\r\n                cartCount$ | async\r\n              }}</span>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">\r\n              <span\r\n                class=\"iconify\"\r\n                data-icon=\"mdi:account-circle\"\r\n                data-inline=\"false\"\r\n                style=\"width: 20px; height: 20px\"\r\n              ></span>\r\n            </a>\r\n            <div\r\n              uk-dropdown=\"animation: uk-animation-slide-top-small; duration: 1000\"\r\n            >\r\n              <ul class=\"uk-nav uk-dropdown-nav\" *ngIf=\"user$ | async\">\r\n                <li>\r\n                  <a routerLink=\"/orders\">\r\n                    <span\r\n                      class=\"iconify\"\r\n                      data-icon=\"octicon:package\"\r\n                      data-inline=\"false\"\r\n                      style=\"height: 25px; width: 25px; margin-right: 15px\"\r\n                    ></span>\r\n                    Orders</a\r\n                  >\r\n                </li>\r\n                <li>\r\n                  <a routerLink=\"/seller\">\r\n                    <span\r\n                      class=\"iconify\"\r\n                      data-icon=\"ic:outline-local-grocery-store\"\r\n                      data-inline=\"false\"\r\n                      style=\"height: 25px; width: 25px; margin-right: 15px\"\r\n                    ></span>\r\n                    My store</a\r\n                  >\r\n                </li>\r\n                <li>\r\n                  <a routerLink=\"/profile\">\r\n                    <span\r\n                      class=\"iconify\"\r\n                      data-icon=\"gg:profile\"\r\n                      data-inline=\"false\"\r\n                      style=\"height: 25px; width: 25px; margin-right: 15px\"\r\n                    ></span>\r\n                    Profile</a\r\n                  >\r\n                </li>\r\n\r\n                <li class=\"uk-nav-divider\"></li>\r\n\r\n                <li>\r\n                  <a (click)=\"logout()\">\r\n                    <span\r\n                      class=\"iconify\"\r\n                      data-icon=\"ri:logout-circle-line\"\r\n                      data-inline=\"false\"\r\n                      style=\"height: 25px; width: 25px; margin-right: 15px\"\r\n                    ></span>\r\n                    Signout</a\r\n                  >\r\n                </li>\r\n              </ul>\r\n\r\n              <ul *ngIf=\"!(user$ | async)\" class=\"uk-nav uk-dropdown-nav\">\r\n                <li>\r\n                  <a routerLink=\"/login\">\r\n                    <span\r\n                      class=\"iconify\"\r\n                      data-icon=\"ri:login-circle-line\"\r\n                      data-inline=\"false\"\r\n                      style=\"height: 25px; width: 25px; margin-right: 15px\"\r\n                    ></span>\r\n                    Sigin/Signup</a\r\n                  >\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</div>\r\n\r\n<div id=\"offcanvas-nav\" uk-offcanvas=\"overlay: true\">\r\n  <div class=\"uk-offcanvas-bar\">\r\n    <ul class=\"uk-nav uk-nav-primary\">\r\n      <li class=\"uk-active\"><a routerLink=\"/\">Home</a></li>\r\n      <li class=\"uk-parent\">\r\n        <a href=\"#\">Categories</a>\r\n        <ul class=\"uk-nav-sub\">\r\n          <li *ngFor=\"let category of categories\">\r\n            <a href=\"/products/?categoryId={{ category.id }}\">{{\r\n              category.name\r\n            }}</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li class=\"uk-nav-divider\"></li>\r\n      <li class=\"uk-nav-header\"><a routerLink=\"/seller\">Sell</a></li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NavbarComponent } from \"../navbar/navbar.component\";\r\n\r\n@Component({\r\n  selector: \"app-home-landing\",\r\n  templateUrl: \"./home-landing.component.html\",\r\n  styleUrls: [\"./home-landing.component.scss\"],\r\n})\r\nexport class HomeLandingComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div>\r\n  <app-navbar></app-navbar>\r\n  <div class=\"container-fluid p-0 main-container\">\r\n    <div class=\"hero-section\">\r\n      <div class=\"back-img\">\r\n        <img\r\n          src=\"https://res.cloudinary.com/mindset/image/upload/v1628005820/Rectangle168_3_xzmi0l.png\"\r\n          alt=\"\"\r\n          class=\"back\"\r\n        />\r\n      </div>\r\n      <div class=\"hero-content\">\r\n        <div class=\"hero-text-section\">\r\n          <h1>Unlock a new shopping experience</h1>\r\n          <p>\r\n            Buy and sell with ease from wherever you are on the Rena marketplace\r\n            network.\r\n          </p>\r\n          <div class=\"hero-buttons\">\r\n            <button\r\n              class=\"uk-button uk-button-default uk-text-capitalize signup\"\r\n            >\r\n              Get Started\r\n            </button>\r\n            <button class=\"marketplace-btn\">Go To Marketplace >></button>\r\n          </div>\r\n        </div>\r\n        <div class=\"hero-img-section\">\r\n          <img\r\n            src=\"https://res.cloudinary.com/mindset/image/upload/v1628005824/Rectangle168_6_kpcuao.png\"\r\n            alt=\"\"\r\n            class=\"front\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"online\">\r\n      <div class=\"open\">\r\n        <h1>\r\n          Rena marketplace makes buying and selling easy for you! We provide a\r\n          secure network that connects buyers to sellers in an instant.\r\n        </h1>\r\n        <img\r\n          src=\"https://res.cloudinary.com/mindset/image/upload/v1628237230/Desktop_-_5_hayzuf.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"reason-section\">\r\n      <div class=\"reason-flex\">\r\n        <div class=\"left\">\r\n          <h1>Why Rena Market?</h1>\r\n          <p>\r\n            Shopping should be fun and stress-free right? We help you get access\r\n            to a wide range of quality products that match your taste. Get the\r\n            best deals for your money’s worth at affordable prices.\r\n          </p>\r\n          <div class=\"left-img\" style=\"margin-top: 60px\">\r\n            <img\r\n              src=\"https://res.cloudinary.com/mindset/image/upload/v1628235505/Group_601_ezjjns.png\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"right\">\r\n          <div class=\"uk-flex art service\">\r\n            <div class=\"service-icon\">\r\n              <div class=\"right-case\">\r\n                <img\r\n                  src=\"https://res.cloudinary.com/mindset/image/upload/v1628230639/Group_603_sn5yd4.png\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h4>Artificial Intelligence</h4>\r\n              <h5 style=\"font-size: 14px; margin-top: -14px\">\r\n                Our algorithm makes the best match of sellers to buyers. It\r\n                recommends products based on your preference to you.\r\n              </h5>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"uk-flex security service\">\r\n            <div class=\"service-icon\">\r\n              <div class=\"right-case\">\r\n                <img\r\n                  src=\"https://res.cloudinary.com/mindset/image/upload/v1628232970/Group_628_xu0vil.png\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h4>Security</h4>\r\n              <h5 style=\"font-size: 14px; margin-top: -14px\">\r\n                We provide a secure network for safe and smooth transactions for\r\n                both buyers and sellers.\r\n              </h5>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"uk-flex quality service\">\r\n            <div class=\"service-icon\">\r\n              <div class=\"right-case\">\r\n                <img\r\n                  src=\"https://res.cloudinary.com/mindset/image/upload/v1628232970/Group_604_pbknxi.png\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h4>Quality</h4>\r\n              <h5 style=\"font-size: 14px; margin-top: -14px\">\r\n                Rena marketplace reserves only the best for you which is why we\r\n                have verified sellers who put out quality products for you to\r\n                shop.\r\n              </h5>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"uk-flex price service\">\r\n            <div class=\"service-icon\">\r\n              <div class=\"right-case\">\r\n                <img\r\n                  src=\"https://res.cloudinary.com/mindset/image/upload/v1628232970/Group_605_zgpn4y.png\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h4>Affordable Pricing</h4>\r\n              <h5 style=\"font-size: 14px; margin-top: -14px\">\r\n                Now you can get a wide range of products in one place at\r\n                affordable prices. Also, get good deals as a bonus!\r\n              </h5>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"uk-flex pay service\">\r\n            <div class=\"service-icon\">\r\n              <div class=\"right-case\">\r\n                <img\r\n                  src=\"https://res.cloudinary.com/mindset/image/upload/v1628232970/Group_606_c9gfmm.png\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h4>Delivery Policy</h4>\r\n              <h5 style=\"font-size: 14px; margin-top: -14px\">\r\n                We offer you a flexible cash-on-delivery payment option. Smaller\r\n                packages also get delivered quickly using our drone system while\r\n                we provide trusted courier services to our sellers for easy and\r\n                quick delivery.\r\n              </h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <app-ourservices></app-ourservices>\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>\r\n<!-- <div style=\"overflow: hidden; background-color: #f2f2f2\">\r\n  <app-navbar></app-navbar>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"hero\">\r\n      <div class=\"uk-flex hero-flex default-width\">\r\n        <div class=\"hero1\">\r\n          <h1>Sell and buy on the go!</h1>\r\n          <p>\r\n            Join the fastest moving online market square that connects millions\r\n            of sellers and buyers at ease.\r\n          </p>\r\n          <button class=\"uk-button uk-button-default uk-text-capitalize signup\">\r\n            <a href=\"signup\">Start Selling</a>\r\n          </button>\r\n          <button [routerLink]=\"['']\" class=\"btn\">Go to marketplace >></button>\r\n        </div>\r\n\r\n        <div class=\"img\">\r\n          <img\r\n            src=\"https://res.cloudinary.com/mindset/image/upload/v1628005824/Rectangle168_6_kpcuao.png\"\r\n            alt=\"\"\r\n            class=\"front\"\r\n          />\r\n          <img\r\n            src=\"https://res.cloudinary.com/mindset/image/upload/v1628005820/Rectangle168_3_xzmi0l.png\"\r\n            alt=\"\"\r\n            class=\"back\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"online\">\r\n      <div class=\"open\">\r\n        <h1>\r\n          Rena market is an online marketplace that connects buyers and sellers\r\n          worldwide.\r\n        </h1>\r\n        <img\r\n          src=\"https://res.cloudinary.com/mindset/image/upload/v1628237230/Desktop_-_5_hayzuf.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"market\">\r\n      <div class=\"uk-flex\">\r\n        <div class=\"right\">\r\n          <h1>Why Rena Market?</h1>\r\n          <p>\r\n            Rena market brings you a whole new type of experience. With the aid\r\n            of artificial intelligence coupled with top level security, you get\r\n            quality products that match your taste presented to you at an\r\n            affordable price while ensuring you pay for what has been delivered\r\n            to you.\r\n          </p>\r\n          <div style=\"margin-top: 60px\">\r\n            <img\r\n              src=\"https://res.cloudinary.com/mindset/image/upload/v1628235505/Group_601_ezjjns.png\"\r\n              alt=\"\"\r\n            />\r\n            <img src=\"\" alt=\"\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"left\">\r\n          <div class=\"uk-flex art\">\r\n            <div style=\"margin-right: 20px; padding-top: 6px\">\r\n              <img\r\n                src=\"https://res.cloudinary.com/mindset/image/upload/v1628230639/Group_603_sn5yd4.png\"\r\n                alt=\"\"\r\n                style=\"width: 85px; height: 55px\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <h4>Artificial Intelligence</h4>\r\n              <h5 style=\"font-size: 14px; margin-top: -14px\">\r\n                Rena market research uses industry standard artificial\r\n                intelligence algorithm to recommend and match sellers with\r\n                buyers.\r\n              </h5>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"uk-flex security\">\r\n            <div style=\"margin-right: 20px; padding-top: 6px\">\r\n              <img\r\n                src=\"https://res.cloudinary.com/mindset/image/upload/v1628232970/Group_628_xu0vil.png\"\r\n                alt=\"\"\r\n                style=\"width: 115px; height: 55px\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <h4>Security</h4>\r\n              <h5 style=\"font-size: 14px; margin-top: -14px\">\r\n                The security of our platform and users is very important to us\r\n                which is why we have designed a platform with ease and security\r\n                im mind for both users and sellers.\r\n              </h5>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"uk-flex quality\">\r\n            <div style=\"margin-right: 20px; padding-top: 6px\">\r\n              <img\r\n                src=\"https://res.cloudinary.com/mindset/image/upload/v1628232970/Group_604_pbknxi.png\"\r\n                alt=\"\"\r\n                style=\"width: 85px; height: 55px\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <h4>Quality</h4>\r\n              <h5 style=\"font-size: 14px; margin-top: -14px\">\r\n                The quality of the products on sale on our platform is\r\n                important, hence we ensure only products in uptmost .\r\n              </h5>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"uk-flex price\">\r\n            <div style=\"margin-right: 20px; padding-top: 6px\">\r\n              <img\r\n                src=\"https://res.cloudinary.com/mindset/image/upload/v1628232970/Group_605_zgpn4y.png\"\r\n                alt=\"\"\r\n                style=\"width: 75px; height: 55px\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <h4>Affordable Price</h4>\r\n              <h5 style=\"font-size: 14px; margin-top: -14px\">\r\n                Prices of products on open market are affordable and same as you\r\n                will find in a physical market.\r\n              </h5>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"uk-flex pay\">\r\n            <div style=\"margin-right: 20px; padding-top: 6px\">\r\n              <img\r\n                src=\"https://res.cloudinary.com/mindset/image/upload/v1628232970/Group_606_c9gfmm.png\"\r\n                alt=\"\"\r\n                style=\"width: 85px; height: 55px\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <h4>Pay On Delivery</h4>\r\n              <h5 style=\"font-size: 14px; margin-top: -14px\">\r\n                Our delivery policy is to strictly payment on delivery, this is\r\n                to avoid or curb fraudulent activities on theses platfrom.\r\n              </h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <app-ourservices></app-ourservices>\r\n</div>\r\n<app-footer></app-footer> -->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header> </app-header>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.css']\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div\r\n  uk-sticky=\"sel-target: .uk-navbar-container; cls-active: uk-navbar-sticky\"\r\n  class=\"navvy\"\r\n>\r\n  <nav\r\n    class=\"uk-navbar-container uk-margin head\"\r\n    style=\"height: 80px\"\r\n    uk-navbar\r\n  >\r\n    <div class=\"uk-navbar-left default-width\">\r\n      <a class=\"uk-navbar-item uk-logo\" href=\"#\" style=\"color: white\"\r\n        ><img\r\n          src=\"../../../../assets/logos/Rena-Market-Transaprent-BLK-2.png\"\r\n          alt=\"RENA MARKET\"\r\n          width=\"120\"\r\n      /></a>\r\n\r\n      <div style=\"display: flex; flex-direction: row; width: 60%; color: white\">\r\n        <ul class=\"uk-navbar-nav\">\r\n          <li>\r\n            <a [routerLink]=\"['']\">\r\n              <span class=\"uk-icon uk-margin-small-right\"></span>\r\n              Market Place\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/features\">\r\n              <span class=\"uk-icon uk-margin-small-right\"></span>\r\n              Features\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/faqs\">\r\n              <span class=\"uk-icon uk-margin-small-right\"></span>\r\n              FAQs\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">\r\n              <span class=\"uk-icon uk-margin-small-right\"></span>\r\n              About\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/contact\">\r\n              <span class=\"uk-icon uk-margin-small-right\"></span>\r\n              Contact\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- <div class=\"uk-navbar-item\">\r\n            <div>Some <a href=\"#\">Link</a></div>\r\n        </div> -->\r\n\r\n      <div class=\"uk-navbar-right\">\r\n        <button class=\"uk-button-default login\">\r\n          <a href=\"login\">Login</a>\r\n        </button>\r\n        <button class=\"uk-button uk-button-default uk-text-capitalize signup\">\r\n          <a href=\"signup\">Sign Up</a>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</div>\r\n\r\n<!-- mobile  -->\r\n\r\n<div\r\n  uk-sticky=\"sel-target: .uk-navbar-container; cls-active: uk-navbar-sticky\"\r\n  class=\"navy\"\r\n>\r\n  <div class=\"uk-navbar-container head\" uk-navbar>\r\n    <div class=\"uk-navbar-left\">\r\n      <a class=\"uk-navbar-item uk-logo navy\" href=\"#\"\r\n        ><img\r\n          src=\"../../../../assets/logos/Rena-Market-Transaprent-BLK-2.png\"\r\n          alt=\"RENA MARKET\"\r\n          width=\"120\"\r\n      /></a>\r\n    </div>\r\n\r\n    <div class=\"uk-navbar-right\">\r\n      <div\r\n        class=\"uk-button uk-button-default navy\"\r\n        uk-toggle=\"target: #offcanvas-flip\"\r\n        style=\"border-color: transparent\"\r\n      >\r\n        <div uk-navbar-toggle-icon></div>\r\n      </div>\r\n\r\n      <div id=\"offcanvas-flip\" uk-offcanvas=\"overlay: true\">\r\n        <div class=\"uk-offcanvas-bar\">\r\n          <button class=\"uk-offcanvas-close\" type=\"button\" uk-close></button>\r\n\r\n          <ul class=\"mobile-side-menu\">\r\n            <li>\r\n              <a [routerLink]=\"['']\">\r\n                <span class=\"uk-icon uk-margin-small-right\"></span>\r\n                Market Place\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a [routerLink]=\"['/features']\">\r\n                <span class=\"uk-icon uk-margin-small-right\"></span>\r\n                Features\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a [routerLink]=\"['/faqs']\">\r\n                <span class=\"uk-icon uk-margin-small-right\"></span>\r\n                FAQs\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a [routerLink]=\"['']\">\r\n                <span class=\"uk-icon uk-margin-small-right\"></span>\r\n                About\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a [routerLink]=\"['/contact']\">\r\n                <span class=\"uk-icon uk-margin-small-right\"></span>\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-ourservices\",\r\n  templateUrl: \"./ourservices.component.html\",\r\n  styleUrls: [\"./ourservices.component.scss\"],\r\n})\r\nexport class OurservicesComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"gen\">\r\n  <div class=\"back\">\r\n    <div class=\"default-width\">\r\n      <div class=\"img\">\r\n        <img\r\n          src=\"https://res.cloudinary.com/mindset/image/upload/v1628005823/Rectangle168_4_ydlozg.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div class=\"text\">\r\n        <h1>Sell and Earn on the go.</h1>\r\n        <h3>\r\n          Don't break a sweat! Let's help you get your products to your\r\n          customers with ease. Rena marketplace offers you a secure network to\r\n          sell and earn.\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"back yellow-back\">\r\n    <div class=\"default-width\">\r\n      <div class=\"text\">\r\n        <h1>Need Help?</h1>\r\n        <h3>\r\n          Check our customer support page for complaints and refund policies.\r\n        </h3>\r\n      </div>\r\n      <div class=\"img\">\r\n        <img\r\n          src=\"https://res.cloudinary.com/mindset/image/upload/v1628005826/Rectangle168_7_esfajy.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"back\">\r\n    <div class=\"default-width\">\r\n      <div class=\"img\">\r\n        <img\r\n          src=\"https://res.cloudinary.com/mindset/image/upload/v1628005824/Rectangle168_5_ivxvve.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div class=\"text\">\r\n        <h1>Join the Rena Market Community.</h1>\r\n        <h3>\r\n          Introducing you to a new world of ease where buying and selling is\r\n          made fun and stress-free for you via a secure network. Sign up to\r\n          unlock a new shopping experience.\r\n        </h3>\r\n        <button>Get Started</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ErrorService } from \"./../services/error.service\";\r\nimport { ToastrService } from \"src/app/services/toastr.service\";\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpRequest,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n} from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { NgxUiLoaderService } from \"ngx-ui-loader\";\r\ndeclare var UIkit: any;\r\n@Injectable()\r\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private toast: ToastrService,\r\n    private errorService: ErrorService,\r\n    private ngxService: NgxUiLoaderService\r\n  ) {}\r\n  message = \"\";\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError((error) => {\r\n        console.log(\"error is intercept\");\r\n        console.error(error);\r\n        this.ngxService.stopAll();\r\n        if (error instanceof HttpErrorResponse) {\r\n          if (error.error instanceof ErrorEvent) {\r\n            console.error(\"Error Event\");\r\n          } else {\r\n            console.log(`error status : ${error.status} ${error.statusText}`);\r\n            switch (error.status) {\r\n              case 401:\r\n                this.toast.info(\"please login to continue\");\r\n                break;\r\n\r\n              case 403: //forbidden\r\n                this.toast.info(\"You are not authorize to access this content\");\r\n                break;\r\n              default:\r\n                if (!navigator.onLine) {\r\n                  this.message = this.errorService.getServerErrorMessage(error);\r\n                  this.toast.error(\"no internet connection\");\r\n                  break;\r\n                }\r\n            }\r\n          }\r\n        } else {\r\n          //client side error\r\n          console.error(\"some thing else happened\", error);\r\n          this.message = this.errorService.getClientErrorMessage(error);\r\n          this.toast.error(this.message);\r\n        }\r\n        this.ngxService.stopAll();\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { \r\n    OnInit, OnDestroy, ViewChild, Output, \r\n    Input, ElementRef, EventEmitter, Component,AfterViewInit \r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'infinite-scroll',\r\n    // templateUrl: \"./infinite-scroll.component.html\",\r\n    template: `<div #anchor><ng-content></ng-content></div>`\r\n    // template: `<ng-content></ng-content><div #anchor></div>`,\r\n  })\r\n  export class InfiniteScrollComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    @Input() options = {};\r\n    @Output() scrolled = new EventEmitter();\r\n    @ViewChild('anchor') anchor: ElementRef<HTMLElement>;\r\n  \r\n    private observer: IntersectionObserver;\r\n  \r\n    constructor(private host: ElementRef) { }\r\n  \r\n    get element() {\r\n      return this.host.nativeElement;\r\n    }\r\n\r\n    \r\n    ngOnInit() {\r\n        const options = {\r\n            root: null,\r\n            ...this.options\r\n        };\r\n\r\n        this.observer = new IntersectionObserver(([entry]) => {\r\n            entry.isIntersecting && this.scrolled.emit();\r\n        }, options);\r\n\r\n        // this.observer.observe(this.anchor.nativeElement);\r\n    }\r\n\r\n    ngAfterViewInit(){\r\n      this.observer.observe(this.anchor.nativeElement);\r\n    }\r\n\r\n    private isHostScrollable() {\r\n        const style = window.getComputedStyle(this.element);\r\n    \r\n        return style.getPropertyValue('overflow') === 'auto' ||\r\n          style.getPropertyValue('overflow-y') === 'scroll';\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.observer.disconnect();\r\n    }\r\n\r\n  }","// Generated by https://quicktype.io\r\n\r\nexport interface IResponseModel  {\r\n  message: string;\r\n  status:  string;\r\n  data:    object;\r\n}\r\n\r\n\r\nexport const ResponseStatus = {\r\n  success: 'success',\r\n  fail: 'fail'\r\n};\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {PaginatePipe} from './paginate.pipe';\r\nimport {PaginationService} from './pagination.service';\r\nimport {PaginationControlsComponent} from './pagination-controls.component';\r\nimport {PaginationControlsDirective} from './pagination-controls.directive';\r\n\r\nexport {PaginationInstance} from './pagination-instance';\r\nexport {PaginationService} from './pagination.service';\r\nexport {PaginationControlsComponent} from './pagination-controls.component';\r\nexport {PaginationControlsDirective} from './pagination-controls.directive';\r\nexport {PaginatePipe} from './paginate.pipe';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [\r\n        PaginatePipe,\r\n        PaginationControlsComponent,\r\n        PaginationControlsDirective\r\n    ],\r\n    providers: [PaginationService],\r\n    exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n})\r\nexport class NgxPaginationModule { }\r\n","import { Pipe } from \"@angular/core\";\r\nimport { PaginationService } from \"./pagination.service\";\r\nimport { PaginationInstance } from \"./pagination-instance\";\r\n\r\nconst LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\n\r\nexport type Collection<T> = T[] | Array<T>;\r\n\r\nexport interface PaginatePipeArgs {\r\n  id?: string;\r\n  itemsPerPage?: string | number;\r\n  currentPage?: string | number;\r\n  totalItems?: string | number;\r\n}\r\n\r\nexport interface PipeState {\r\n  collection: any[];\r\n  size: number;\r\n  start: number;\r\n  end: number;\r\n  slice: any[];\r\n}\r\n\r\n@Pipe({\r\n  name: \"paginate\",\r\n  pure: false,\r\n})\r\nexport class PaginatePipe {\r\n  // store the values from the last time the pipe was invoked\r\n  private state: { [id: string]: PipeState } = {};\r\n\r\n  constructor(private service: PaginationService) {}\r\n\r\n  public transform<T, U extends Collection<T>>(\r\n    collection: U,\r\n    args: PaginatePipeArgs\r\n  ): U {\r\n    // When an observable is passed through the AsyncPipe, it will output\r\n    // `null` until the subscription resolves. In this case, we want to\r\n    // use the cached data from the `state` object to prevent the NgFor\r\n    // from flashing empty until the real values arrive.\r\n    if (!(collection instanceof Array)) {\r\n      let _id = args.id || this.service.defaultId();\r\n      if (this.state[_id]) {\r\n        return this.state[_id].slice as U;\r\n      } else {\r\n        return collection;\r\n      }\r\n    }\r\n\r\n    let serverSideMode =\r\n      args.totalItems && args.totalItems !== collection.length;\r\n    let instance = this.createInstance(collection, args);\r\n    let id = instance.id;\r\n    let start, end;\r\n    let perPage = instance.itemsPerPage;\r\n\r\n    let emitChange = this.service.register(instance);\r\n\r\n    if (!serverSideMode && collection instanceof Array) {\r\n      perPage = +perPage || LARGE_NUMBER;\r\n      start = (instance.currentPage - 1) * perPage;\r\n      end = start + perPage;\r\n\r\n      let isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n      if (isIdentical) {\r\n        return this.state[id].slice as U;\r\n      } else {\r\n        let slice = collection.slice(start, end);\r\n        this.saveState(id, collection, slice, start, end);\r\n        this.service.change.emit(id);\r\n        return slice as U;\r\n      }\r\n    } else {\r\n      if (emitChange) {\r\n        this.service.change.emit(id);\r\n      }\r\n\r\n      // save the state for server-side collection to avoid null\r\n      // flash as new data loads.\r\n      this.saveState(id, collection, collection, start, end);\r\n\r\n      return collection;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n   */\r\n  private createInstance(\r\n    collection: any[],\r\n    config: PaginatePipeArgs\r\n  ): PaginationInstance {\r\n    this.checkConfig(config);\r\n\r\n    return {\r\n      id: config.id != null ? config.id : this.service.defaultId(),\r\n      itemsPerPage: +config.itemsPerPage || 0,\r\n      currentPage: +config.currentPage || 1,\r\n      totalItems: +config.totalItems || collection.length,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Ensure the argument passed to the filter contains the required properties.\r\n   */\r\n  private checkConfig(config: PaginatePipeArgs): void {\r\n    const required = [\"itemsPerPage\", \"currentPage\"];\r\n\r\n    const missing = required.filter((prop) => !(prop in config));\r\n    if (0 < missing.length) {\r\n      throw new Error(\r\n        `PaginatePipe: Argument is missing the following required properties: ${missing.join(\r\n          \", \"\r\n        )}`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n   * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n   * need to check that the collection, start and end points are all identical, and if so, return the\r\n   * last sliced array.\r\n   */\r\n  private saveState(\r\n    id: string,\r\n    collection: any[],\r\n    slice: any[],\r\n    start: number,\r\n    end: number\r\n  ) {\r\n    this.state[id] = {\r\n      collection,\r\n      size: collection.length,\r\n      slice,\r\n      start,\r\n      end,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * For a given id, returns true if the collection, size, start and end values are identical.\r\n   */\r\n  private stateIsIdentical(\r\n    id: string,\r\n    collection: any[],\r\n    start: number,\r\n    end: number\r\n  ): boolean {\r\n    let state = this.state[id];\r\n    if (!state) {\r\n      return false;\r\n    }\r\n    let isMetaDataIdentical =\r\n      state.size === collection.length &&\r\n      state.start === start &&\r\n      state.end === end;\r\n\r\n    if (!isMetaDataIdentical) {\r\n      return false;\r\n    }\r\n\r\n    return state.slice.every(\r\n      (element, index) => element === collection[start + index]\r\n    );\r\n  }\r\n}\r\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core'\r\nimport {DEFAULT_TEMPLATE, DEFAULT_STYLES} from './template';\r\n\r\nfunction coerceToBoolean(input: string | boolean): boolean {\r\n    return !!input && input !== 'false';\r\n}\r\n\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\n@Component({\r\n    selector: 'pagination-controls',\r\n    template: DEFAULT_TEMPLATE,\r\n    styles: [DEFAULT_STYLES],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PaginationControlsComponent {\r\n\r\n    @Input() id: string;\r\n    @Input() maxSize: number = 7;\r\n    @Input()\r\n    get directionLinks(): boolean {\r\n        return this._directionLinks;\r\n    }\r\n    set directionLinks(value: boolean) {\r\n        this._directionLinks = coerceToBoolean(value);\r\n    }\r\n    @Input()\r\n    get autoHide(): boolean {\r\n        return this._autoHide;\r\n    }\r\n    set autoHide(value: boolean) {\r\n        this._autoHide = coerceToBoolean(value);\r\n    }\r\n    @Input()\r\n    get responsive(): boolean {\r\n        return this._responsive;\r\n    }\r\n    set responsive(value: boolean) {\r\n        this._responsive = coerceToBoolean(value);\r\n    }\r\n    @Input() previousLabel: string = 'Previous';\r\n    @Input() nextLabel: string = 'Next';\r\n    @Input() screenReaderPaginationLabel: string = 'Pagination';\r\n    @Input() screenReaderPageLabel: string = 'page';\r\n    @Input() screenReaderCurrentLabel: string = `You're on page`;\r\n    @Output() pageChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() pageBoundsCorrection: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n    private _directionLinks: boolean = true;\r\n    private _autoHide: boolean = false;\r\n    private _responsive: boolean = false;\r\n}\r\n","import {ChangeDetectorRef, Directive, EventEmitter, Input, Output} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {PaginationService} from './pagination.service';\r\nimport {PaginationInstance} from './pagination-instance';\r\n\r\nexport interface Page {\r\n    label: string;\r\n    value: any;\r\n}\r\n\r\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\n@Directive({\r\n    selector: 'pagination-template,[pagination-template]',\r\n    exportAs: 'paginationApi'\r\n})\r\nexport class PaginationControlsDirective {\r\n    @Input() id: string;\r\n    @Input() maxSize: number = 7;\r\n    @Output() pageChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() pageBoundsCorrection: EventEmitter<number> = new EventEmitter<number>();\r\n    pages: Page[] = [];\r\n\r\n    private changeSub: Subscription;\r\n\r\n    constructor(private service: PaginationService,\r\n                private changeDetectorRef: ChangeDetectorRef) {\r\n        this.changeSub = this.service.change\r\n            .subscribe(id => {\r\n                if (this.id === id) {\r\n                    this.updatePageLinks();\r\n                    this.changeDetectorRef.markForCheck();\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        this.updatePageLinks();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.changeSub.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    previous() {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    }\r\n\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    next() {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    }\r\n\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    isFirstPage(): boolean {\r\n        return this.getCurrent() === 1;\r\n    }\r\n\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    isLastPage(): boolean {\r\n        return this.getLastPage() === this.getCurrent();\r\n    }\r\n\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    setCurrent(page: number) {\r\n        this.pageChange.emit(page);\r\n    }\r\n\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    getCurrent(): number {\r\n        return this.service.getCurrentPage(this.id);\r\n    }\r\n\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    getLastPage(): number {\r\n        let inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    }\r\n\r\n    getTotalItems(): number {\r\n        return this.service.getInstance(this.id).totalItems;\r\n    }\r\n\r\n    private checkValidId() {\r\n        if (this.service.getInstance(this.id).id == null) {\r\n            console.warn(`PaginationControlsDirective: the specified id \"${this.id}\" does not match any registered PaginationInstance`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    private updatePageLinks() {\r\n        let inst = this.service.getInstance(this.id);\r\n        const correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(() => {\r\n                this.pageBoundsCorrection.emit(correctedCurrentPage);\r\n                this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n            });\r\n        } else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    private outOfBoundCorrection(instance: PaginationInstance): number {\r\n        const totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        } else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n\r\n        return instance.currentPage;\r\n    }\r\n\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    private createPageArray(currentPage: number, itemsPerPage: number, totalItems: number, paginationRange: number): Page[] {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        let pages = [];\r\n        const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n        const halfWay = Math.ceil(paginationRange / 2);\r\n\r\n        const isStart = currentPage <= halfWay;\r\n        const isEnd = totalPages - halfWay < currentPage;\r\n        const isMiddle = !isStart && !isEnd;\r\n\r\n        let ellipsesNeeded = paginationRange < totalPages;\r\n        let i = 1;\r\n\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            let label;\r\n            let pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            let openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            let closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            } else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i ++;\r\n        }\r\n        return pages;\r\n    }\r\n\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    private calculatePageNumber(i: number, currentPage: number, paginationRange: number, totalPages: number) {\r\n        let halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        } else if (i === 1) {\r\n            return i;\r\n        } else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            } else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            } else {\r\n                return i;\r\n            }\r\n        } else {\r\n            return i;\r\n        }\r\n    }\r\n}\r\n","import {EventEmitter} from '@angular/core'\r\nimport {PaginationInstance} from './pagination-instance';\r\n\r\nexport class PaginationService {\r\n\r\n    public change: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    private instances: { [id: string]: PaginationInstance } = {};\r\n    private DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n\r\n    public defaultId(): string { return this.DEFAULT_ID }\r\n\r\n    /**\r\n     * Register a PaginationInstance with this service. Returns a\r\n     * boolean value signifying whether the instance is new or\r\n     * updated (true = new or updated, false = unchanged).\r\n     */\r\n    public register(instance: PaginationInstance): boolean {\r\n        if (instance.id == null) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            return true;\r\n        } else {\r\n            return this.updateInstance(instance);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    private updateInstance(instance: PaginationInstance): boolean {\r\n        let changed = false;\r\n        for (let prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    }\r\n\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    public getCurrentPage(id: string): number {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    public setCurrentPage(id: string, page: number) {\r\n        if (this.instances[id]) {\r\n            let instance = this.instances[id];\r\n            let maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    public setTotalItems(id: string, totalItems: number) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    public setItemsPerPage(id: string, itemsPerPage: number) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    public getInstance(id: string = this.DEFAULT_ID): PaginationInstance {\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {} as PaginationInstance;\r\n    }\r\n\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    private clone(obj: any): any {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n}\r\n","import { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatSliderModule } from \"@angular/material/slider\";\r\nimport { LoaderComponent } from \"./components/loader/loader.component\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatLabel } from \"@angular/material/form-field\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { HttpClientJsonpModule } from \"@angular/common/http\";\r\nimport { NgxUiLoaderModule } from \"ngx-ui-loader\";\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\nimport { MatRippleModule } from \"@angular/material/core\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n// import { ServicesComponent } from './components/services/services.component';\r\n@NgModule({\r\n  declarations: [LoaderComponent, ],\r\n  imports: [CommonModule],\r\n  exports: [\r\n    HttpClientJsonpModule,\r\n    MatSliderModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatRippleModule,\r\n    FormsModule,\r\n    MatAutocompleteModule,\r\n    NgxUiLoaderModule,\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  identityApi: \"https://dev-identity.renamarkets.com/api/v1/\",\r\n  // identityApi: \"http://localhost:59906/api/v1/\",\r\n  ecommerceApi: \"https://dev-ecommerce.renamarkets.com/api/v1/\",\r\n  // ecommerceApi: \"http://localhost:57889/api/v1/\",\r\n  paystackPublicKey: \"pk_test_8e75de0f0e2bba17ee0b37ed227e176b92b52d0b\",\r\n  googleClientId:\r\n    \"473446857855-9fmn8dnefe3b9mvm046sdq35echrss1l.apps.googleusercontent.com\",\r\n  facebookAppId: \"824459011487587\",\r\n  cloudinaryName: \"dimxqjzpr\",\r\n  cloudinaryUploadPerset: \"unsigned1_openmarket\",\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\n\r\nimport { AppModule } from \"./app/app.module\";\r\nimport { environment } from \"./environments/environment\";\r\nimport {\r\n  getAllDataFromLocalForage,\r\n  default as localForage,\r\n} from \"ngrx-store-persist\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ngetAllDataFromLocalForage({\r\n  driver: localForage.INDEXEDDB,\r\n  keys: [\"counterReducer\"],\r\n}).then(\r\n  () => {\r\n    platformBrowserDynamic()\r\n      .bootstrapModule(AppModule)\r\n      .catch((err) => console.error(err));\r\n  },\r\n  (err) => {\r\n    platformBrowserDynamic()\r\n      .bootstrapModule(AppModule)\r\n      .catch((err) => console.error(err));\r\n  }\r\n);\r\n"],"names":[],"sourceRoot":"webpack:///"}